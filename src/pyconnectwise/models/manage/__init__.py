# generated by datamodel-codegen:
#   filename:  tmpsy69p9nm

from __future__ import annotations

from typing import TYPE_CHECKING, Annotated, Any, Literal

from pyconnectwise.models.base.connectwise_model import ConnectWiseModel

if TYPE_CHECKING:
    from datetime import date, datetime
    from uuid import UUID

    from pydantic import Field


class AccountingBatch(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    batch_identifier: Annotated[str | None, Field(alias="batchIdentifier")] = None
    closed_flag: Annotated[bool | None, Field(alias="closedFlag")] = None
    export_expenses_flag: Annotated[bool | None, Field(alias="exportExpensesFlag")] = None
    export_invoices_flag: Annotated[bool | None, Field(alias="exportInvoicesFlag")] = None
    export_products_flag: Annotated[bool | None, Field(alias="exportProductsFlag")] = None
    id: int | None = None


class AccountingPackage(ConnectWiseModel):
    id: int | None = None
    identifier: str | None = None
    name: str | None = None


class AccountingPackageReference(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    identifier: Literal["QB99", "Mas200", "GPlains", "SBA", "Mas200v4", "Other"] | None = None
    name: str | None = None


class AccountingPackageSetup(ConnectWiseModel):
    accounting_package: Annotated[AccountingPackageReference | None, Field(alias="accountingPackage")] = None
    direct_transfer_flag: Annotated[bool | None, Field(alias="directTransferFlag")] = None
    enable_tax_groups_flag: Annotated[bool | None, Field(alias="enableTaxGroupsFlag")] = None
    expense_format: Annotated[Literal["Default", "Condensed"] | None, Field(alias="expenseFormat")] = None
    id: int | None = None
    include_cogs_drop_ship_flag: Annotated[bool | None, Field(alias="includeCogsDropShipFlag")] = None
    include_cogs_entries_flag: Annotated[bool | None, Field(alias="includeCogsEntriesFlag")] = None
    include_expenses_flag: Annotated[bool | None, Field(alias="includeExpensesFlag")] = None
    include_invoices_flag: Annotated[bool | None, Field(alias="includeInvoicesFlag")] = None
    include_items_flag: Annotated[bool | None, Field(alias="includeItemsFlag")] = None
    include_sales_tax_flag: Annotated[bool | None, Field(alias="includeSalesTaxFlag")] = None
    inventory_soh_flag: Annotated[bool | None, Field(alias="inventorySOHFlag")] = None
    invoice_format: Annotated[Literal["Default", "Condensed", "Detailed"] | None, Field(alias="invoiceFormat")] = None
    send_component_amount_flag: Annotated[bool | None, Field(alias="sendComponentAmountFlag")] = None
    send_uom_flag: Annotated[bool | None, Field(alias="sendUomFlag")] = None
    suppress_memo_flag: Annotated[bool | None, Field(alias="suppressMemoFlag")] = None
    sync_payment_info_flag: Annotated[bool | None, Field(alias="syncPaymentInfoFlag")] = None
    transfer_expenses_as_bill_flag: Annotated[bool | None, Field(alias="transferExpensesAsBillFlag")] = None
    zero_dollar_tax_amounts_flag: Annotated[bool | None, Field(alias="zeroDollarTaxAmountsFlag")] = None


class ActivityReference(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    name: str | None = None


class ActivityStatus(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    closed_flag: Annotated[bool | None, Field(alias="closedFlag")] = None
    default_flag: Annotated[bool | None, Field(alias="defaultFlag")] = None
    id: int | None = None
    inactive_flag: Annotated[bool | None, Field(alias="inactiveFlag")] = None
    name: str
    """
     Max length: 30;
    """
    spawn_followup_flag: Annotated[bool | None, Field(alias="spawnFollowupFlag")] = None


class ActivityStatusInfo(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    closed_flag: Annotated[bool | None, Field(alias="closedFlag")] = None
    default_flag: Annotated[bool | None, Field(alias="defaultFlag")] = None
    id: int | None = None
    inactive_flag: Annotated[bool | None, Field(alias="inactiveFlag")] = None
    name: str | None = None


class ActivityStatusReference(ActivityReference):
    pass


class ActivityType(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    default_flag: Annotated[bool | None, Field(alias="defaultFlag")] = None
    email_flag: Annotated[bool | None, Field(alias="emailFlag")] = None
    history_flag: Annotated[bool | None, Field(alias="historyFlag")] = None
    id: int | None = None
    inactive_flag: Annotated[bool | None, Field(alias="inactiveFlag")] = None
    memo_flag: Annotated[bool | None, Field(alias="memoFlag")] = None
    name: str
    """
     Max length: 50;
    """
    points: int | None = None


class ActivityTypeReference(ActivityReference):
    pass


class AddressFormat(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    add_all_countries: Annotated[bool | None, Field(alias="addAllCountries")] = None
    country_ids: Annotated[list[int] | None, Field(alias="countryIds")] = None
    default_flag: Annotated[bool | None, Field(alias="defaultFlag")] = None
    format: str
    """
     Max length: 250;
    """
    id: int | None = None
    name: str
    """
     Max length: 50;
    """
    remove_all_countries: Annotated[bool | None, Field(alias="removeAllCountries")] = None


class AddressFormatInfo(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    default_flag: Annotated[bool | None, Field(alias="defaultFlag")] = None
    id: int | None = None
    name: str | None = None


class AddressFormatReference(ActivityReference):
    pass


class AdjustmentDetailReference(ActivityReference):
    pass


class AdjustmentReference(ActivityReference):
    pass


class AdjustmentType(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    audit_trail_flag: Annotated[bool | None, Field(alias="auditTrailFlag")] = None
    created_by: Annotated[str | None, Field(alias="createdBy")] = None
    date_created: Annotated[datetime | None, Field(alias="dateCreated")] = None
    id: int | None = None
    identifier: str
    """
     Max length: 50;
    """
    name: str | None = None
    """
     Max length: 100;
    """


class AdjustmentTypeInfo(ActivityReference):
    pass


class AdjustmentTypeReference(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    identifier: str | None = None


class AgreementBatchSetup(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    days_in_advance: Annotated[int, Field(alias="daysInAdvance")]
    id: int | None = None
    next_run_date: Annotated[datetime, Field(alias="nextRunDate")]


class AgreementBillingInfo(ConnectWiseModel):
    agreement_amount: Annotated[float | None, Field(alias="agreementAmount")] = None
    agreement_name: Annotated[str | None, Field(alias="agreementName")] = None
    agreement_rec_id: Annotated[int | None, Field(alias="agreementRecId")] = None
    agreement_type: Annotated[str | None, Field(alias="agreementType")] = None
    parent_rec_id: Annotated[int | None, Field(alias="parentRecId")] = None


class AgreementReference(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    name: str | None = None
    type: str | None = None


class AgreementRevenueReference(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    cost: float | None = None
    id: int | None = None
    margin: float | None = None
    percentage: float | None = None
    revenue: float | None = None


class AgreementTypeInfo(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    application_units: Annotated[Literal["Amount", "Hours", "Incidents"] | None, Field(alias="applicationUnits")] = None
    id: int | None = None
    inactive_flag: Annotated[bool | None, Field(alias="inactiveFlag")] = None
    name: str | None = None


class AgreementTypeReference(ActivityReference):
    pass


class AllowedFileType(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    file_type: Annotated[str, Field(alias="fileType")]
    id: int | None = None
    size_limit: Annotated[int | None, Field(alias="sizeLimit")] = None


class AllowedOrigin(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    description: str
    """
     Max length: 2000;
    """
    id: int | None = None
    last_update_utc: Annotated[datetime | None, Field(alias="lastUpdateUtc")] = None
    origin: str
    """
     Max length: 2000;
    """
    updated_by: Annotated[str | None, Field(alias="updatedBy")] = None


class AuditTrailEntry(ConnectWiseModel):
    audit_source: Annotated[str | None, Field(alias="auditSource")] = None
    audit_sub_type: Annotated[str | None, Field(alias="auditSubType")] = None
    audit_type: Annotated[str | None, Field(alias="auditType")] = None
    entered_by: Annotated[str | None, Field(alias="enteredBy")] = None
    entered_date: Annotated[str | None, Field(alias="enteredDate")] = None
    text: str | None = None


class AuditTrailEntryGetRequest(ConnectWiseModel):
    device_identifier: Annotated[str | None, Field(alias="deviceIdentifier")] = None
    id: int | None = None
    type: Literal[
        "None",
        "Ticket",
        "Contact",
        "Company",
        "Opportunity",
        "Time",
        "Activity",
        "ProductCatalog",
        "ProjectTicket",
        "Purchasing",
        "Configuration",
        "Schedule",
        "Agreement",
        "AgreementAddition",
        "Project",
        "Invoice",
        "PurchaseOrder",
        "Expense",
    ] | None = None


class AuthAnvil(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    server_location_url: Annotated[str, Field(alias="serverLocationUrl")]
    site_id: Annotated[int, Field(alias="siteId")]


class AutomateScriptReference(ActivityReference):
    pass


class BillingCycle(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    billing_options: Annotated[
        Literal["BiMonthly", "BiWeekly", "Monthly", "NotRecurring", "Quarterly", "SemiAnnual", "Weekly", "Yearly"],
        Field(alias="billingOptions"),
    ]
    default_flag: Annotated[bool | None, Field(alias="defaultFlag")] = None
    id: int | None = None
    identifier: str
    """
     Max length: 5;
    """
    name: str
    """
     Max length: 50;
    """


class BillingCycleInfo(AddressFormatInfo):
    pass


class BillingCycleReference(ActivityReference):
    pass


class BillingDeliveryReference(ActivityReference):
    pass


class BillingSetupReference(ActivityReference):
    pass


class BillingStatus(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    closed_flag: Annotated[bool | None, Field(alias="closedFlag")] = None
    default_flag: Annotated[bool | None, Field(alias="defaultFlag")] = None
    id: int | None = None
    inactive_flag: Annotated[bool | None, Field(alias="inactiveFlag")] = None
    name: str
    """
     Max length: 30;
    """
    sent_flag: Annotated[bool | None, Field(alias="sentFlag")] = None
    sort_order: Annotated[int | None, Field(alias="sortOrder")] = None


class BillingStatusInfo(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    inactive_flag: Annotated[bool | None, Field(alias="inactiveFlag")] = None
    name: str | None = None
    sort_order: Annotated[int | None, Field(alias="sortOrder")] = None


class BillingStatusReference(ActivityReference):
    pass


class BillingTerm(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    default_flag: Annotated[bool | None, Field(alias="defaultFlag")] = None
    due_days: Annotated[int, Field(alias="dueDays")]
    id: int | None = None
    name: str
    """
     Max length: 50;
    """
    terms_xref: Annotated[str | None, Field(alias="termsXref")] = None
    """
     Max length: 50;
    """


class BillingTermInfo(ActivityReference):
    pass


class BillingTermsReference(ActivityReference):
    pass


class BoardCopy(ConnectWiseModel):
    id: int
    name: str
    """
     Max length: 50;
    """


class BoardExcludedMember(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    board_id: Annotated[int | None, Field(alias="boardId")] = None
    id: int | None = None
    member_id: Annotated[int | None, Field(alias="memberId")] = None


class BoardReference(ActivityReference):
    pass


class BoardStatusInfo(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    closed_flag: Annotated[bool | None, Field(alias="closedFlag")] = None
    default_flag: Annotated[bool | None, Field(alias="defaultFlag")] = None
    id: int | None = None
    inactive_flag: Annotated[bool | None, Field(alias="inactiveFlag")] = None
    name: str | None = None
    sort_order: Annotated[int | None, Field(alias="sortOrder")] = None


class BoardSubType(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    add_all_types_flag: Annotated[bool | None, Field(alias="addAllTypesFlag")] = None
    board: BoardReference | None = None
    id: int | None = None
    inactive_flag: Annotated[bool | None, Field(alias="inactiveFlag")] = None
    name: str
    """
     Max length: 50;
    """
    remove_all_types_flag: Annotated[bool | None, Field(alias="removeAllTypesFlag")] = None
    type_association_ids: Annotated[list[int] | None, Field(alias="typeAssociationIds")] = None


class BoardSubTypeInfo(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    inactive_flag: Annotated[bool | None, Field(alias="inactiveFlag")] = None
    name: str | None = None
    type_association_ids: Annotated[list[int] | None, Field(alias="typeAssociationIds")] = None


class BoardTeamInfo(ActivityReference):
    pass


class BoardTypeInfo(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    board: BoardReference | None = None
    id: int | None = None
    inactive_flag: Annotated[bool | None, Field(alias="inactiveFlag")] = None
    name: str | None = None


class CalendarInfo(ActivityReference):
    pass


class CalendarReference(ActivityReference):
    pass


class CalendarSetupReference(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None


class CallbackEntry(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    description: str | None = None
    """
     Max length: 100;
    """
    id: int | None = None
    inactive_flag: Annotated[bool | None, Field(alias="inactiveFlag")] = None
    is_self_suppressed_flag: Annotated[bool | None, Field(alias="isSelfSuppressedFlag")] = None
    is_soap_callback_flag: Annotated[bool | None, Field(alias="isSoapCallbackFlag")] = None
    level: str | None = None
    """
     Required Reference
    """
    member_id: Annotated[int | None, Field(alias="memberId")] = None
    object_id: Annotated[int | None, Field(alias="objectId")] = None
    """
     Required Reference
    """
    payload_version: Annotated[str | None, Field(alias="payloadVersion")] = None
    type: str | None = None
    """
     Required Reference
    """
    url: str | None = None
    """
     Required Reference
    """


class CampaignReference(ActivityReference):
    pass


class CampaignStatus(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    default_flag: Annotated[bool | None, Field(alias="defaultFlag")] = None
    id: int | None = None
    inactive_flag: Annotated[bool | None, Field(alias="inactiveFlag")] = None
    name: str
    """
     Max length: 100;
    """


class CampaignStatusReference(ActivityReference):
    pass


class CampaignSubTypeReference(ActivityReference):
    pass


class CampaignType(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    default_flag: Annotated[bool | None, Field(alias="defaultFlag")] = None
    id: int | None = None
    name: str
    """
     Max length: 100;
    """


class CampaignTypeInfo(ActivityReference):
    pass


class CampaignTypeReference(ActivityReference):
    pass


class CatalogItemInfo(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    billable_option: Annotated[
        Literal["Billable", "DoNotBill", "NoCharge", "NoDefault"] | None, Field(alias="billableOption")
    ] = None
    cost: float | None = None
    customer_description: Annotated[str | None, Field(alias="customerDescription")] = None
    description: str | None = None
    drop_ship_flag: Annotated[bool | None, Field(alias="dropShipFlag")] = None
    id: int | None = None
    identifier: str | None = None
    inactive_flag: Annotated[bool | None, Field(alias="inactiveFlag")] = None
    manufacturer_part_number: Annotated[str | None, Field(alias="manufacturerPartNumber")] = None
    price: float | None = None
    product_class: Annotated[
        Literal["Agreement", "Bundle", "Inventory", "NonInventory", "Service"] | None, Field(alias="productClass")
    ] = None
    serialized_cost_flag: Annotated[bool | None, Field(alias="serializedCostFlag")] = None
    special_order_flag: Annotated[bool | None, Field(alias="specialOrderFlag")] = None
    taxable_flag: Annotated[bool | None, Field(alias="taxableFlag")] = None
    vendor_sku: Annotated[str | None, Field(alias="vendorSku")] = None


class CatalogItemReference(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    identifier: str | None = None
    name: str | None = None


class Category(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    add_all_locations: Annotated[bool | None, Field(alias="addAllLocations")] = None
    default_flag: Annotated[bool | None, Field(alias="defaultFlag")] = None
    id: int | None = None
    inactive_flag: Annotated[bool | None, Field(alias="inactiveFlag")] = None
    integration_xref: Annotated[str | None, Field(alias="integrationXref")] = None
    """
     Max length: 50;
    """
    location_ids: Annotated[list[int] | None, Field(alias="locationIds")] = None
    name: str
    """
     Max length: 50;
    """
    price_level_xref: Annotated[str | None, Field(alias="priceLevelXref")] = None
    """
     Max length: 10;
    """
    remove_all_locations: Annotated[bool | None, Field(alias="removeAllLocations")] = None


class CategoryInfo(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    inactive_flag: Annotated[bool | None, Field(alias="inactiveFlag")] = None
    name: str | None = None


class CertificationReference(ActivityReference):
    pass


class ChargeCodeReference(ActivityReference):
    pass


class Classification(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    company_flag: Annotated[bool | None, Field(alias="companyFlag")] = None
    default_flag: Annotated[bool | None, Field(alias="defaultFlag")] = None
    employee_flag: Annotated[bool | None, Field(alias="employeeFlag")] = None
    id: int | None = None
    multiplier: float | None = None
    name: str | None = None


class ClassificationReference(ActivityReference):
    pass


class ClosedInvoice(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    internal_notes: Annotated[str | None, Field(alias="internalNotes")] = None
    status: BillingStatusReference | None = None


class Code(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    board_id: Annotated[int | None, Field(alias="boardId")] = None
    business_unit_id: Annotated[int | None, Field(alias="businessUnitId")] = None
    description: str
    id: int | None = None
    location_id: Annotated[int | None, Field(alias="locationId")] = None
    name: str
    """
     Max length: 50;
    """


class CommunicationType(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    android_xref: Annotated[str | None, Field(alias="androidXref")] = None
    """
     Max length: 50;
    """
    core_entity_communication_type_id: Annotated[str | None, Field(alias="coreEntityCommunicationTypeId")] = None
    """
    Core_Entity_Communication_Type_ID required if core_entity_sync_flag is set Max length: 36;
    """
    default_flag: Annotated[bool | None, Field(alias="defaultFlag")] = None
    description: str
    email_flag: Annotated[bool | None, Field(alias="emailFlag")] = None
    """
    At least one flag is required to be true -- phone, fax, or email
    """
    exchange_xref: Annotated[str | None, Field(alias="exchangeXref")] = None
    """
     Max length: 50;
    """
    fax_flag: Annotated[bool | None, Field(alias="faxFlag")] = None
    """
    At least one flag is required to be true -- phone, fax, or email
    """
    google_xref: Annotated[str | None, Field(alias="googleXref")] = None
    """
     Max length: 50;
    """
    id: int | None = None
    iphone_xref: Annotated[str | None, Field(alias="iphoneXref")] = None
    """
     Max length: 50;
    """
    phone_flag: Annotated[bool | None, Field(alias="phoneFlag")] = None
    """
    At least one flag is required to be true -- phone, fax, or email
    """


class CommunicationTypeInfo(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    default_flag: Annotated[bool | None, Field(alias="defaultFlag")] = None
    description: str | None = None
    email_flag: Annotated[bool | None, Field(alias="emailFlag")] = None
    fax_flag: Annotated[bool | None, Field(alias="faxFlag")] = None
    id: int | None = None
    phone_flag: Annotated[bool | None, Field(alias="phoneFlag")] = None


class CommunicationTypeReference(ActivityReference):
    pass


class CompanyMerge(ConnectWiseModel):
    account_number: Annotated[Literal["From", "To"] | None, Field(alias="accountNumber")] = None
    activities: Literal["Discard", "Merge"] | None = None
    billing_address: Annotated[Literal["From", "To"] | None, Field(alias="billingAddress")] = None
    billing_contact: Annotated[Literal["From", "To"] | None, Field(alias="billingContact")] = None
    billing_terms: Annotated[Literal["From", "To"] | None, Field(alias="billingTerms")] = None
    contacts: Literal["Discard", "Merge"] | None = None
    date_acquired: Annotated[Literal["From", "To"] | None, Field(alias="dateAcquired")] = None
    documents: Literal["Discard", "Merge"] | None = None
    fax: Literal["From", "To"] | None = None
    identifier: Literal["From", "To"] | None = None
    market: Literal["From", "To"] | None = None
    name: Literal["From", "To"] | None = None
    notes: Literal["Discard", "Merge"] | None = None
    number_of_employees: Annotated[Literal["From", "To"] | None, Field(alias="numberOfEmployees")] = None
    opportunities: Literal["Discard", "Merge"] | None = None
    phone: Literal["From", "To"] | None = None
    primary_address: Annotated[Literal["From", "To"] | None, Field(alias="primaryAddress")] = None
    primary_contact: Annotated[Literal["From", "To"] | None, Field(alias="primaryContact")] = None
    projects: Literal["Discard", "Merge"] | None = None
    revenue: Literal["From", "To"] | None = None
    revenue_year: Annotated[Literal["From", "To"] | None, Field(alias="revenueYear")] = None
    services: Literal["Discard", "Merge"] | None = None
    sic_code: Annotated[Literal["From", "To"] | None, Field(alias="sicCode")] = None
    sites: Literal["Discard", "Merge"] | None = None
    source_list: Annotated[Literal["From", "To"] | None, Field(alias="sourceList")] = None
    status: Literal["From", "To"] | None = None
    tax_code: Annotated[Literal["From", "To"] | None, Field(alias="taxCode")] = None
    territory: Literal["From", "To"] | None = None
    time_zone: Annotated[Literal["From", "To"] | None, Field(alias="timeZone")] = None
    to_company_id: Annotated[int, Field(alias="toCompanyId")]
    type: Literal["From", "To"] | None = None
    user_defined_field1: Annotated[Literal["From", "To"] | None, Field(alias="userDefinedField1")] = None
    user_defined_field10: Annotated[Literal["From", "To"] | None, Field(alias="userDefinedField10")] = None
    user_defined_field2: Annotated[Literal["From", "To"] | None, Field(alias="userDefinedField2")] = None
    user_defined_field3: Annotated[Literal["From", "To"] | None, Field(alias="userDefinedField3")] = None
    user_defined_field4: Annotated[Literal["From", "To"] | None, Field(alias="userDefinedField4")] = None
    user_defined_field5: Annotated[Literal["From", "To"] | None, Field(alias="userDefinedField5")] = None
    user_defined_field6: Annotated[Literal["From", "To"] | None, Field(alias="userDefinedField6")] = None
    user_defined_field7: Annotated[Literal["From", "To"] | None, Field(alias="userDefinedField7")] = None
    user_defined_field8: Annotated[Literal["From", "To"] | None, Field(alias="userDefinedField8")] = None
    user_defined_field9: Annotated[Literal["From", "To"] | None, Field(alias="userDefinedField9")] = None
    website: Literal["From", "To"] | None = None


class CompanyNoteType(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    default_flag: Annotated[bool | None, Field(alias="defaultFlag")] = None
    id: int | None = None
    identifier: str | None = None
    """
     Max length: 15;
    """
    import_flag: Annotated[bool | None, Field(alias="importFlag")] = None
    name: str
    """
     Max length: 50;
    """


class CompanyNoteTypeInfo(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    default_flag: Annotated[bool | None, Field(alias="defaultFlag")] = None
    id: int | None = None
    identifier: str | None = None
    name: str | None = None


class CompanyReference(CatalogItemReference):
    pass


class CompanyStatusReference(ActivityReference):
    pass


class CompanyType(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    default_flag: Annotated[bool | None, Field(alias="defaultFlag")] = None
    id: int | None = None
    name: str
    """
     Max length: 50;
    """
    service_alert_flag: Annotated[bool | None, Field(alias="serviceAlertFlag")] = None
    service_alert_message: Annotated[str | None, Field(alias="serviceAlertMessage")] = None
    """
     Max length: 150;
    """
    vendor_flag: Annotated[bool | None, Field(alias="vendorFlag")] = None


class CompanyTypeInfo(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    is_vendor: Annotated[bool | None, Field(alias="isVendor")] = None
    name: str | None = None


class CompanyTypeReference(ActivityReference):
    pass


class ConfigurationQuestion(ConnectWiseModel):
    answer: str | None = None
    answer_id: Annotated[int | None, Field(alias="answerId")] = None
    field_type: Annotated[
        Literal[
            "TextArea",
            "Currency",
            "Date",
            "Hyperlink",
            "IPAddress",
            "Checkbox",
            "Number",
            "Percent",
            "Text",
            "Password",
        ]
        | None,
        Field(alias="fieldType"),
    ] = None
    number_of_decimals: Annotated[int | None, Field(alias="numberOfDecimals")] = None
    question: str | None = None
    question_id: Annotated[int | None, Field(alias="questionId")] = None
    required_flag: Annotated[bool | None, Field(alias="requiredFlag")] = None
    sequence_number: Annotated[float | None, Field(alias="sequenceNumber")] = None


class ConfigurationReference(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    device_identifier: Annotated[str | None, Field(alias="deviceIdentifier")] = None
    id: int | None = None


class ConfigurationStatus(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    closed_flag: Annotated[bool | None, Field(alias="closedFlag")] = None
    default_flag: Annotated[bool | None, Field(alias="defaultFlag")] = None
    description: str
    """
     Max length: 50;
    """
    id: int | None = None


class ConfigurationStatusInfo(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    closed_flag: Annotated[bool | None, Field(alias="closedFlag")] = None
    default_flag: Annotated[bool | None, Field(alias="defaultFlag")] = None
    description: str | None = None
    id: int | None = None


class ConfigurationStatusReference(ActivityReference):
    pass


class ConfigurationType(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    inactive_flag: Annotated[bool | None, Field(alias="inactiveFlag")] = None
    name: str
    """
     Max length: 50;
    """
    system_flag: Annotated[bool | None, Field(alias="systemFlag")] = None


class ConfigurationTypeInfo(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    inactive_flag: Annotated[bool | None, Field(alias="inactiveFlag")] = None
    name: str | None = None
    system_flag: Annotated[bool | None, Field(alias="systemFlag")] = None


class ConfigurationTypeQuestionReference(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    question: str | None = None


class ConfigurationTypeReference(ActivityReference):
    pass


class ConnectWiseHostedScreen(ConnectWiseModel):
    id: int | None = None
    name: str | None = None
    screen_id: Annotated[str | None, Field(alias="screenId")] = None


class ConnectWiseHostedSetup(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    client_id: Annotated[str | None, Field(alias="clientId")] = None
    """
    Only required if not already set Max length: 36;
    """
    created_by: Annotated[str | None, Field(alias="createdBy")] = None
    date_created: Annotated[datetime | None, Field(alias="dateCreated")] = None
    description: str
    """
     Max length: 50;
    """
    disabled_flag: Annotated[bool | None, Field(alias="disabledFlag")] = None
    id: int | None = None
    location_ids: Annotated[list[int] | None, Field(alias="locationIds")] = None
    locations_enabled_flag: Annotated[bool | None, Field(alias="locationsEnabledFlag")] = None
    origin: str | None = None
    """
     Max length: 100;
    """
    pod_height: Annotated[int | None, Field(alias="podHeight")] = None
    screen_id: Annotated[int, Field(alias="screenId")]
    """
    Can be obtained via ConnectWiseHostedApiScreen report
    """
    toolbar_button_dialog_height: Annotated[int | None, Field(alias="toolbarButtonDialogHeight")] = None
    toolbar_button_dialog_width: Annotated[int | None, Field(alias="toolbarButtonDialogWidth")] = None
    toolbar_button_icon_document_id: Annotated[int | None, Field(alias="toolbarButtonIconDocumentId")] = None
    toolbar_button_text: Annotated[str | None, Field(alias="toolbarButtonText")] = None
    """
    Only required for ToolbarButtons Max length: 50;
    """
    toolbar_button_tool_tip: Annotated[str | None, Field(alias="toolbarButtonToolTip")] = None
    """
     Max length: 50;
    """
    type: Literal["Tab", "Pod", "ToolbarButton"]
    url: str
    """
     Max length: 1024;
    """


class ContactCommunication(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    communication_type: Annotated[Literal["Email", "Fax", "Phone"] | None, Field(alias="communicationType")] = None
    contact_id: Annotated[int | None, Field(alias="contactId")] = None
    default_flag: Annotated[bool | None, Field(alias="defaultFlag")] = None
    domain: str | None = None
    extension: str | None = None
    """
     Max length: 15;
    """
    id: int | None = None
    mobile_guid: Annotated[UUID | None, Field(alias="mobileGuid")] = None
    type: CommunicationTypeReference | None = None
    value: str
    """
     Max length: 250;
    """


class ContactCommunicationItem(ConnectWiseModel):
    communication_type: Annotated[Literal["Email", "Fax", "Phone"] | None, Field(alias="communicationType")] = None
    default_flag: Annotated[bool | None, Field(alias="defaultFlag")] = None
    domain: str | None = None
    extension: str | None = None
    id: int | None = None
    type: CommunicationTypeReference | None = None
    value: str | None = None


class ContactDepartment(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    name: str
    """
     Max length: 30;
    """


class ContactDepartmentInfo(ActivityReference):
    pass


class ContactDepartmentReference(ActivityReference):
    pass


class ContactReference(ActivityReference):
    pass


class ContactRelationship(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    name: str
    """
     Max length: 50;
    """


class ContactTrack(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    action_remaining: Annotated[int | None, Field(alias="actionRemaining")] = None
    action_taken: Annotated[int | None, Field(alias="actionTaken")] = None
    company: CompanyReference | None = None
    contact: ContactReference | None = None
    end_date: Annotated[datetime | None, Field(alias="endDate")] = None
    id: int | None = None
    name: str | None = None
    start_date: Annotated[datetime | None, Field(alias="startDate")] = None
    started_by: Annotated[str | None, Field(alias="startedBy")] = None
    track_id: Annotated[int | None, Field(alias="trackId")] = None


class ContactType(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    default_flag: Annotated[bool | None, Field(alias="defaultFlag")] = None
    description: str
    """
     Max length: 50;
    """
    id: int | None = None
    service_alert_flag: Annotated[bool | None, Field(alias="serviceAlertFlag")] = None
    service_alert_message: Annotated[str | None, Field(alias="serviceAlertMessage")] = None
    """
     Max length: 150;
    """


class ContactTypeInfo(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    default_flag: Annotated[bool | None, Field(alias="defaultFlag")] = None
    description: str | None = None
    id: int | None = None
    service_alert_flag: Annotated[bool | None, Field(alias="serviceAlertFlag")] = None
    service_alert_message: Annotated[str | None, Field(alias="serviceAlertMessage")] = None


class ContactTypeReference(ActivityReference):
    pass


class CorporateStructureLevel(ConnectWiseModel):
    id: int | None = None
    name: str | None = None


class CorporateStructureLevelReference(ActivityReference):
    pass


class Count(ConnectWiseModel):
    count: int | None = None


class CountryInfo(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    city_caption: Annotated[str | None, Field(alias="cityCaption")] = None
    default_flag: Annotated[bool | None, Field(alias="defaultFlag")] = None
    dialing_prefix: Annotated[str | None, Field(alias="dialingPrefix")] = None
    id: int | None = None
    localization_caption_one: Annotated[str | None, Field(alias="localizationCaptionOne")] = None
    name: str | None = None
    state_caption: Annotated[str | None, Field(alias="stateCaption")] = None
    zip_caption: Annotated[str | None, Field(alias="zipCaption")] = None


class CountryReference(CatalogItemReference):
    pass


class CreateAccountingBatchRequest(ConnectWiseModel):
    batch_identifier: Annotated[str | None, Field(alias="batchIdentifier")] = None
    """
     Max length: 50;
    """
    export_expenses_flag: Annotated[bool | None, Field(alias="exportExpensesFlag")] = None
    """
    Batch must export Invoices, Expenses or Products
    """
    export_invoices_flag: Annotated[bool | None, Field(alias="exportInvoicesFlag")] = None
    """
    Batch must export Invoices, Expenses or Products
    """
    export_products_flag: Annotated[bool | None, Field(alias="exportProductsFlag")] = None
    """
    Batch must export Invoices, Expenses or Products
    """
    gl_interface_identifier: Annotated[str | None, Field(alias="glInterfaceIdentifier")] = None
    id: int | None = None
    processed_record_ids: Annotated[list[int], Field(alias="processedRecordIds")]
    """
    GL Entry RecIDs
    """
    summarize_expenses: Annotated[bool | None, Field(alias="summarizeExpenses")] = None


class CurrencyCode(ActivityReference):
    pass


class CurrencyCodeReference(ActivityReference):
    pass


class CurrencyInfo(ActivityReference):
    pass


class CurrencyReference(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    currency_code: Annotated[str | None, Field(alias="currencyCode")] = None
    currency_identifier: Annotated[str | None, Field(alias="currencyIdentifier")] = None
    decimal_separator: Annotated[str | None, Field(alias="decimalSeparator")] = None
    display_id_flag: Annotated[bool | None, Field(alias="displayIdFlag")] = None
    display_symbol_flag: Annotated[bool | None, Field(alias="displaySymbolFlag")] = None
    id: int | None = None
    name: str | None = None
    negative_parentheses_flag: Annotated[bool | None, Field(alias="negativeParenthesesFlag")] = None
    number_of_decimals: Annotated[int | None, Field(alias="numberOfDecimals")] = None
    right_align: Annotated[bool | None, Field(alias="rightAlign")] = None
    symbol: str | None = None
    thousands_separator: Annotated[str | None, Field(alias="thousandsSeparator")] = None


class CustomFieldValue(ConnectWiseModel):
    caption: str | None = None
    entry_method: Annotated[Literal["Date", "EntryField", "List", "Option"] | None, Field(alias="entryMethod")] = None
    id: int | None = None
    number_of_decimals: Annotated[int | None, Field(alias="numberOfDecimals")] = None
    type: Literal[
        "TextArea",
        "Button",
        "Currency",
        "Date",
        "Hyperlink",
        "IPAddress",
        "Checkbox",
        "Number",
        "Percent",
        "Text",
        "Password",
    ] | None = None
    value: dict[str, Any] | None = None


class CustomReport(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    agreement_flag: Annotated[bool | None, Field(alias="agreementFlag")] = None
    agreement_override: Annotated[str | None, Field(alias="agreementOverride")] = None
    agreement_param_id: Annotated[int | None, Field(alias="agreementParamId")] = None
    """
    Parameter unique identifier for the Custom Report's Agreement parameter
    """
    agreement_type_flag: Annotated[bool | None, Field(alias="agreementTypeFlag")] = None
    agreement_type_override: Annotated[str | None, Field(alias="agreementTypeOverride")] = None
    agreement_type_param_id: Annotated[int | None, Field(alias="agreementTypeParamId")] = None
    """
    Parameter unique identifier for the Custom Report's Agreement Type parameter
    """
    company_flag: Annotated[bool | None, Field(alias="companyFlag")] = None
    company_override: Annotated[str | None, Field(alias="companyOverride")] = None
    company_param_id: Annotated[int | None, Field(alias="companyParamId")] = None
    """
    Parameter unique identifier for the Custom Report's Company parameter
    """
    department_default_flag: Annotated[bool | None, Field(alias="departmentDefaultFlag")] = None
    department_flag: Annotated[bool | None, Field(alias="departmentFlag")] = None
    department_override: Annotated[str | None, Field(alias="departmentOverride")] = None
    department_param_id: Annotated[int | None, Field(alias="departmentParamId")] = None
    """
    Parameter unique identifier for the Custom Report's Department parameter
    """
    description: str
    """
     Max length: 150;
    """
    end_date_flag: Annotated[bool | None, Field(alias="endDateFlag")] = None
    end_date_override: Annotated[datetime | None, Field(alias="endDateOverride")] = None
    end_date_param_id: Annotated[int | None, Field(alias="endDateParamId")] = None
    """
    Parameter unique identifier for the Custom Report's End Date parameter
    """
    generated_flag: Annotated[bool | None, Field(alias="generatedFlag")] = None
    id: int | None = None
    invoice_flag: Annotated[bool | None, Field(alias="invoiceFlag")] = None
    invoice_override: Annotated[str | None, Field(alias="invoiceOverride")] = None
    invoice_param_id: Annotated[int | None, Field(alias="invoiceParamId")] = None
    """
    Parameter unique identifier for the Custom Report's Invoice Type parameter
    """
    location_default_flag: Annotated[bool | None, Field(alias="locationDefaultFlag")] = None
    location_flag: Annotated[bool | None, Field(alias="locationFlag")] = None
    location_override: Annotated[str | None, Field(alias="locationOverride")] = None
    location_param_id: Annotated[int | None, Field(alias="locationParamId")] = None
    """
    Parameter unique identifier for the Custom Report's Location parameter
    """
    marketing_campaign_flag: Annotated[bool | None, Field(alias="marketingCampaignFlag")] = None
    marketing_campaign_override: Annotated[str | None, Field(alias="marketingCampaignOverride")] = None
    marketing_campaign_param_id: Annotated[int | None, Field(alias="marketingCampaignParamId")] = None
    """
    Parameter unique identifier for the Custom Report's Marketing Campaign parameter
    """
    member_flag: Annotated[bool | None, Field(alias="memberFlag")] = None
    member_override: Annotated[str | None, Field(alias="memberOverride")] = None
    member_param_id: Annotated[int | None, Field(alias="memberParamId")] = None
    """
    Parameter unique identifier for the Custom Report's Member parameter
    """
    module: Literal[
        "Companies", "Finance", "Marketing", "Procurement", "Project", "Sales", "ServiceDesk", "TimeExpense"
    ]
    """
    The Module Name
    """
    name: str
    """
     Max length: 100;
    """
    opp_type_flag: Annotated[bool | None, Field(alias="oppTypeFlag")] = None
    opp_type_override: Annotated[str | None, Field(alias="oppTypeOverride")] = None
    opp_type_param_id: Annotated[int | None, Field(alias="oppTypeParamId")] = None
    """
    Parameter unique identifier for the Custom Report's Opportunity Type parameter
    """
    opportunity_flag: Annotated[bool | None, Field(alias="opportunityFlag")] = None
    opportunity_override: Annotated[str | None, Field(alias="opportunityOverride")] = None
    opportunity_param_id: Annotated[int | None, Field(alias="opportunityParamId")] = None
    """
    Parameter unique identifier for the Custom Report's Opportunity parameter
    """
    parameter_name_separator: Annotated[str | None, Field(alias="parameterNameSeparator")] = None
    """
     Max length: 50;
    """
    parameter_prefix: Annotated[str | None, Field(alias="parameterPrefix")] = None
    """
     Max length: 50;
    """
    parameter_separator: Annotated[str | None, Field(alias="parameterSeparator")] = None
    """
     Max length: 50;
    """
    parameter_suffix: Annotated[str | None, Field(alias="parameterSuffix")] = None
    """
     Max length: 50;
    """
    project_flag: Annotated[bool | None, Field(alias="projectFlag")] = None
    project_override: Annotated[str | None, Field(alias="projectOverride")] = None
    project_param_id: Annotated[int | None, Field(alias="projectParamId")] = None
    """
    Parameter unique identifier for the Custom Report's Project parameter
    """
    project_type_flag: Annotated[bool | None, Field(alias="projectTypeFlag")] = None
    project_type_override: Annotated[str | None, Field(alias="projectTypeOverride")] = None
    project_type_param_id: Annotated[int | None, Field(alias="projectTypeParamId")] = None
    """
    Parameter unique identifier for the Custom Report's Project Type parameter
    """
    report_link: Annotated[str, Field(alias="reportLink")]
    service_board_default_flag: Annotated[bool | None, Field(alias="serviceBoardDefaultFlag")] = None
    service_board_flag: Annotated[bool | None, Field(alias="serviceBoardFlag")] = None
    service_board_override: Annotated[str | None, Field(alias="serviceBoardOverride")] = None
    service_board_param_id: Annotated[int | None, Field(alias="serviceBoardParamId")] = None
    """
    Parameter unique identifier for the Custom Report's Service Board parameter
    """
    service_status_flag: Annotated[bool | None, Field(alias="serviceStatusFlag")] = None
    service_status_override: Annotated[str | None, Field(alias="serviceStatusOverride")] = None
    service_status_param_id: Annotated[int | None, Field(alias="serviceStatusParamId")] = None
    """
    Parameter unique identifier for the Custom Report's Service Status parameter
    """
    service_type_flag: Annotated[bool | None, Field(alias="serviceTypeFlag")] = None
    service_type_override: Annotated[str | None, Field(alias="serviceTypeOverride")] = None
    service_type_param_id: Annotated[int | None, Field(alias="serviceTypeParamId")] = None
    """
    Parameter unique identifier for the Custom Report's Service Type parameter
    """
    start_date_flag: Annotated[bool | None, Field(alias="startDateFlag")] = None
    start_date_override: Annotated[datetime | None, Field(alias="startDateOverride")] = None
    start_date_param_id: Annotated[int | None, Field(alias="startDateParamId")] = None
    """
    Parameter unique identifier for the Custom Report's Start Date parameter
    """
    territory_default_flag: Annotated[bool | None, Field(alias="territoryDefaultFlag")] = None
    territory_flag: Annotated[bool | None, Field(alias="territoryFlag")] = None
    territory_override: Annotated[str | None, Field(alias="territoryOverride")] = None
    territory_param_id: Annotated[int | None, Field(alias="territoryParamId")] = None
    """
    Parameter unique identifier for the Custom Report's Terriroty parameter
    """
    work_role_flag: Annotated[bool | None, Field(alias="workRoleFlag")] = None
    work_role_override: Annotated[str | None, Field(alias="workRoleOverride")] = None
    work_role_param_id: Annotated[int | None, Field(alias="workRoleParamId")] = None
    """
    Parameter unique identifier for the Custom Report's Work Role parameter
    """
    work_type_flag: Annotated[bool | None, Field(alias="workTypeFlag")] = None
    work_type_override: Annotated[str | None, Field(alias="workTypeOverride")] = None
    work_type_param_id: Annotated[int | None, Field(alias="workTypeParamId")] = None
    """
    Parameter unique identifier for the Custom Report's Work Type parameter
    """


class CustomReportReference(ActivityReference):
    pass


class CwTimeZone(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    daylight_savings_flag: Annotated[bool | None, Field(alias="daylightSavingsFlag")] = None
    """
    Determined based on system library value for specified timeZone.
                Not able to be used in query params at this time
    """
    end_date: Annotated[datetime | None, Field(alias="endDate")] = None
    id: int | None = None
    name: str | None = None
    offset: float | None = None
    """
    The hours offset (+/-)
    """
    start_date: Annotated[datetime | None, Field(alias="startDate")] = None


class DeliveryMethod(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    default_flag: Annotated[bool | None, Field(alias="defaultFlag")] = None
    email_flag: Annotated[bool | None, Field(alias="emailFlag")] = None
    id: int | None = None
    integration_active_flag: Annotated[bool | None, Field(alias="integrationActiveFlag")] = None
    integration_email_flag: Annotated[bool | None, Field(alias="integrationEmailFlag")] = None
    integration_print_flag: Annotated[bool | None, Field(alias="integrationPrintFlag")] = None
    name: str
    """
     Max length: 50;
    """


class Department(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    identifier: str
    """
     Max length: 15;
    """
    name: str
    """
     Max length: 50;
    """


class DepartmentInfo(ActivityReference):
    pass


class DocumentFormData(ConnectWiseModel):
    file: bytes | None = None
    is_avatar: Annotated[bool | None, Field(alias="isAvatar")] = None
    private_flag: Annotated[bool | None, Field(alias="privateFlag")] = None
    read_only_flay: Annotated[bool | None, Field(alias="readOnlyFlay")] = None
    record_id: Annotated[int | None, Field(alias="recordId")] = None
    record_type: Annotated[str | None, Field(alias="recordType")] = None
    title: str | None = None
    url: str | None = None


class DocumentInfo(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    file_name: Annotated[str | None, Field(alias="fileName")] = None
    guid: Annotated[UUID | None, Field(example="00000000-0000-0000-0000-000000000000")] = None
    html_template_flag: Annotated[bool | None, Field(alias="htmlTemplateFlag")] = None
    id: int | None = None
    image_flag: Annotated[bool | None, Field(alias="imageFlag")] = None
    link_flag: Annotated[bool | None, Field(alias="linkFlag")] = None
    owner: str | None = None
    public_flag: Annotated[bool | None, Field(alias="publicFlag")] = None
    read_only_flag: Annotated[bool | None, Field(alias="readOnlyFlag")] = None
    server_file_name: Annotated[str | None, Field(alias="serverFileName")] = None
    size: int | None = None
    title: str | None = None
    url_flag: Annotated[bool | None, Field(alias="urlFlag")] = None


class DocumentReference(ActivityReference):
    pass


class DocumentSetup(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    doc_path: Annotated[str | None, Field(alias="docPath")] = None
    """
     Max length: 100;
    """
    id: int | None = None
    is_public_flag: Annotated[bool | None, Field(alias="isPublicFlag")] = None
    template_output_path: Annotated[str | None, Field(alias="templateOutputPath")] = None
    """
     Max length: 200;
    """
    template_path: Annotated[str | None, Field(alias="templatePath")] = None
    """
     Max length: 200;
    """
    upload_as_link_flag: Annotated[bool | None, Field(alias="uploadAsLinkFlag")] = None


class EmailConnectorParsingStyleReference(ActivityReference):
    pass


class EmailConnectorParsingTypeReference(ActivityReference):
    pass


class EmailConnectorParsingVariableReference(CatalogItemReference):
    pass


class EmailConnectorReference(ActivityReference):
    pass


class EmailExclusion(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    description: str
    """
     Max length: 100;
    """
    id: int | None = None


class EmailOpened(ConnectWiseModel):
    campaign_id: Annotated[int | None, Field(alias="campaignId")] = None
    contact_id: Annotated[int, Field(alias="contactId")]
    date_opened: Annotated[datetime | None, Field(alias="dateOpened")] = None
    id: int | None = None


class EmailTemplateReference(ActivityReference):
    pass


class EmailToken(ConnectWiseModel):
    address_flag: Annotated[bool | None, Field(alias="addressFlag")] = None
    agreement_flag: Annotated[bool | None, Field(alias="agreementFlag")] = None
    company_flag: Annotated[bool | None, Field(alias="companyFlag")] = None
    config_flag: Annotated[bool | None, Field(alias="configFlag")] = None
    contact_flag: Annotated[bool | None, Field(alias="contactFlag")] = None
    description: str | None = None
    id: int | None = None
    invoice_flag: Annotated[bool | None, Field(alias="invoiceFlag")] = None
    portal_password_flag: Annotated[bool | None, Field(alias="portalPasswordFlag")] = None
    purchase_order_flag: Annotated[bool | None, Field(alias="purchaseOrderFlag")] = None
    purchase_order_status_flag: Annotated[bool | None, Field(alias="purchaseOrderStatusFlag")] = None
    rma_flag: Annotated[bool | None, Field(alias="rmaFlag")] = None
    sales_flag: Annotated[bool | None, Field(alias="salesFlag")] = None
    service_flag: Annotated[bool | None, Field(alias="serviceFlag")] = None
    token: str | None = None
    tracks_flag: Annotated[bool | None, Field(alias="tracksFlag")] = None
    workflow_flag: Annotated[bool | None, Field(alias="workflowFlag")] = None


class EntityType(ConnectWiseModel):
    code: str | None = None
    id: int | None = None
    name: str | None = None


class EntityTypeInfo(CorporateStructureLevel):
    pass


class EntityTypeReference(ActivityReference):
    pass


class ExpenseDetailReference(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    amount: float | None = None
    id: int | None = None


class ExpenseReportReference(ActivityReference):
    pass


class ExpenseRevenueReference(AgreementRevenueReference):
    pass


class ExpenseTaxTypeInfo(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    inactive: bool | None = None
    name: str | None = None


class ExpenseTaxTypeReference(ActivityReference):
    pass


class ExpenseType(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    advanced_amount_flag: Annotated[bool | None, Field(alias="advancedAmountFlag")] = None
    amount_caption: Annotated[str, Field(alias="amountCaption")]
    bill_expenses: Annotated[Literal["Billable", "DoNotBill", "NoCharge", "NoDefault"], Field(alias="billExpenses")]
    default_flag: Annotated[bool | None, Field(alias="defaultFlag")] = None
    id: int | None = None
    inactive_flag: Annotated[bool | None, Field(alias="inactiveFlag")] = None
    integration_x_ref: Annotated[str | None, Field(alias="integrationXRef")] = None
    """
     Max length: 50;
    """
    invoice_markup_amount: Annotated[float | None, Field(alias="invoiceMarkupAmount")] = None
    invoice_markup_option: Annotated[Literal["Amount", "Mile", "Percent"], Field(alias="invoiceMarkupOption")]
    max_amount: Annotated[float | None, Field(alias="maxAmount")] = None
    mileage_flag: Annotated[bool | None, Field(alias="mileageFlag")] = None
    name: str
    """
     Max length: 30;
    """
    quantity_flag: Annotated[bool | None, Field(alias="quantityFlag")] = None
    reimbursement_rate: Annotated[float | None, Field(alias="reimbursementRate")] = None


class ExpenseTypeInfo(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    amount_caption: Annotated[str | None, Field(alias="amountCaption")] = None
    id: int | None = None
    inactive_flag: Annotated[bool | None, Field(alias="inactiveFlag")] = None
    mileage_flag: Annotated[bool | None, Field(alias="mileageFlag")] = None
    name: str | None = None


class ExpenseTypeReference(ActivityReference):
    pass


class Experiment(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    description: str | None = None
    experiment_id: Annotated[str | None, Field(alias="experimentId")] = None
    id: int | None = None
    inactive_flag: Annotated[bool | None, Field(alias="inactiveFlag")] = None
    member_inactive_flag: Annotated[bool | None, Field(alias="memberInactiveFlag")] = None
    name: str | None = None
    properties: str | None = None


class ExportAccountingBatchRequest(ConnectWiseModel):
    batch_identifier: Annotated[str | None, Field(alias="batchIdentifier")] = None
    """
     Max length: 50;
    """
    excluded_expense_ids: Annotated[list[int] | None, Field(alias="excludedExpenseIds")] = None
    excluded_invoice_ids: Annotated[list[int] | None, Field(alias="excludedInvoiceIds")] = None
    excluded_product_ids: Annotated[list[str] | None, Field(alias="excludedProductIds")] = None
    export_expenses_flag: Annotated[bool | None, Field(alias="exportExpensesFlag")] = None
    """
    Batch export must include invoices, expenses, or products (procurement)
    """
    export_invoices_flag: Annotated[bool | None, Field(alias="exportInvoicesFlag")] = None
    """
    Batch export must include invoices, expenses, or products (procurement)
    """
    export_products_flag: Annotated[bool | None, Field(alias="exportProductsFlag")] = None
    """
    Batch export must include invoices, expenses, or products (procurement)
    """
    gl_interface_identifier: Annotated[str | None, Field(alias="glInterfaceIdentifier")] = None
    included_expense_ids: Annotated[list[int] | None, Field(alias="includedExpenseIds")] = None
    included_invoice_ids: Annotated[list[int] | None, Field(alias="includedInvoiceIds")] = None
    included_product_ids: Annotated[list[str] | None, Field(alias="includedProductIds")] = None
    location_id: Annotated[int | None, Field(alias="locationId")] = None
    summarize_invoices: Annotated[
        Literal["Default", "Condensed", "Detailed"] | None, Field(alias="summarizeInvoices")
    ] = None
    thru_date: Annotated[datetime | None, Field(alias="thruDate")] = None


class FileUploadSetting(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    global_file_size_limit: Annotated[int | None, Field(alias="globalFileSizeLimit")] = None
    id: int | None = None
    restrict_file_types_flag: Annotated[bool, Field(alias="restrictFileTypesFlag")]


class FilterValues(ConnectWiseModel):
    childconditions: str | None = None
    conditions: str | None = None
    customfieldconditions: str | None = None
    order_by: Annotated[str | None, Field(alias="orderBy")] = None


class FinanceCurrency(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    currency_code: Annotated[CurrencyCodeReference | None, Field(alias="currencyCode")] = None
    currency_identifier: Annotated[str, Field(alias="currencyIdentifier")]
    """
     Max length: 10;
    """
    decimal_separator: Annotated[str | None, Field(alias="decimalSeparator")] = None
    """
     Max length: 1;
    """
    display_id_flag: Annotated[bool | None, Field(alias="displayIdFlag")] = None
    display_symbol_flag: Annotated[bool | None, Field(alias="displaySymbolFlag")] = None
    id: int | None = None
    name: str
    """
     Max length: 50;
    """
    negative_parentheses_flag: Annotated[bool | None, Field(alias="negativeParenthesesFlag")] = None
    number_of_decimals: Annotated[int | None, Field(alias="numberOfDecimals")] = None
    report_format: Annotated[str | None, Field(alias="reportFormat")] = None
    right_align: Annotated[bool | None, Field(alias="rightAlign")] = None
    symbol: str | None = None
    """
     Max length: 10;
    """
    thousands_separator: Annotated[str | None, Field(alias="thousandsSeparator")] = None
    """
     Max length: 1;
    """


class ForecastRevenueReference(AgreementRevenueReference):
    pass


class FormSubmitted(ConnectWiseModel):
    campaign_id: Annotated[int | None, Field(alias="campaignId")] = None
    contact_id: Annotated[int, Field(alias="contactId")]
    date_submitted: Annotated[datetime | None, Field(alias="dateSubmitted")] = None
    id: int | None = None
    page_sub_type: Annotated[str | None, Field(alias="pageSubType")] = None
    page_type: Annotated[str | None, Field(alias="pageType")] = None
    query_string: Annotated[str | None, Field(alias="queryString")] = None
    status: str | None = None
    topic: str | None = None
    url: str
    """
     Max length: 2083;
    """
    version: str | None = None


class GLCaption(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    cogs1: str | None = None
    """
     Max length: 255;
    """
    cogs10: str | None = None
    """
     Max length: 255;
    """
    cogs2: str | None = None
    """
     Max length: 255;
    """
    cogs3: str | None = None
    """
     Max length: 255;
    """
    cogs4: str | None = None
    """
     Max length: 255;
    """
    cogs5: str | None = None
    """
     Max length: 255;
    """
    cogs6: str | None = None
    """
     Max length: 255;
    """
    cogs7: str | None = None
    """
     Max length: 255;
    """
    cogs8: str | None = None
    """
     Max length: 255;
    """
    cogs9: str | None = None
    """
     Max length: 255;
    """
    id: int | None = None
    segment1: str | None = None
    """
     Max length: 255;
    """
    segment10: str | None = None
    """
     Max length: 255;
    """
    segment10type: Literal["Account", "Class"] | None = None
    segment1type: Literal["Account", "Class"] | None = None
    segment2: str | None = None
    """
     Max length: 255;
    """
    segment2type: Literal["Account", "Class"] | None = None
    segment3: str | None = None
    """
     Max length: 255;
    """
    segment3type: Literal["Account", "Class"] | None = None
    segment4: str | None = None
    """
     Max length: 255;
    """
    segment4type: Literal["Account", "Class"] | None = None
    segment5: str | None = None
    """
     Max length: 255;
    """
    segment5type: Literal["Account", "Class"] | None = None
    segment6: str | None = None
    """
     Max length: 255;
    """
    segment6type: Literal["Account", "Class"] | None = None
    segment7: str | None = None
    """
     Max length: 255;
    """
    segment7type: Literal["Account", "Class"] | None = None
    segment8: str | None = None
    """
     Max length: 255;
    """
    segment8type: Literal["Account", "Class"] | None = None
    segment9: str | None = None
    """
     Max length: 255;
    """
    segment9type: Literal["Account", "Class"] | None = None


class GLExportCustomerTaxLevel(ConnectWiseModel):
    agency_xref: Annotated[str | None, Field(alias="agencyXref")] = None
    tax_code_xref: Annotated[str | None, Field(alias="taxCodeXref")] = None
    tax_level: Annotated[int | None, Field(alias="taxLevel")] = None
    tax_rate: Annotated[float | None, Field(alias="taxRate")] = None


class GLExportExpenseBillDetail(ConnectWiseModel):
    account_number: Annotated[str | None, Field(alias="accountNumber")] = None
    billable: bool | None = None
    company: CompanyReference | None = None
    company_advance: Annotated[bool | None, Field(alias="companyAdvance")] = None
    currency: CurrencyReference | None = None
    document_date: Annotated[datetime | None, Field(alias="documentDate")] = None
    expense_class: Annotated[ClassificationReference | None, Field(alias="expenseClass")] = None
    gl_type_id: Annotated[str | None, Field(alias="glTypeId")] = None
    id: list[int] | None = None
    memo: str | None = None
    reimbursable: bool | None = None
    total: float | None = None


class GLExportInventoryTransferOffset(ConnectWiseModel):
    account_number: Annotated[str | None, Field(alias="accountNumber")] = None
    description: str | None = None
    document_date: Annotated[datetime | None, Field(alias="documentDate")] = None
    document_type: Annotated[str | None, Field(alias="documentType")] = None
    gl_class: Annotated[str | None, Field(alias="glClass")] = None
    gl_type_id: Annotated[str | None, Field(alias="glTypeId")] = None
    id: int | None = None
    memo: str | None = None
    total: float | None = None


class GLExportPurchaseTransactionTaxLevel(ConnectWiseModel):
    tax_code_xref: Annotated[str | None, Field(alias="taxCodeXref")] = None
    tax_level: Annotated[int | None, Field(alias="taxLevel")] = None


class GLExportSettings(ConnectWiseModel):
    pass


class GLExportTransactionDetailTaxLevel(ConnectWiseModel):
    tax_level: Annotated[int | None, Field(alias="taxLevel")] = None
    taxable_flag: Annotated[bool | None, Field(alias="taxableFlag")] = None


class GLExportTransactionTaxLevel(ConnectWiseModel):
    tax_amount: Annotated[float | None, Field(alias="taxAmount")] = None
    tax_code_xref: Annotated[str | None, Field(alias="taxCodeXref")] = None
    tax_level: Annotated[int | None, Field(alias="taxLevel")] = None
    taxable_amount: Annotated[float | None, Field(alias="taxableAmount")] = None


class GenericBoardTeamReference(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    is_project_team_flag: Annotated[bool | None, Field(alias="isProjectTeamFlag")] = None
    name: str | None = None


class GenericIdIdentifierReference(AccountingPackage):
    pass


class GoogleEmailSetup(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    client_id: Annotated[str | None, Field(alias="clientId")] = None
    """
     Max length: 200;
    """
    email_connector: Annotated[EmailConnectorReference | None, Field(alias="emailConnector")] = None
    failed_folder: Annotated[str, Field(alias="failedFolder")]
    """
     Max length: 40;
    """
    id: int | None = None
    inactive_flag: Annotated[bool | None, Field(alias="inactiveFlag")] = None
    inbox_folder: Annotated[str, Field(alias="inboxFolder")]
    """
     Max length: 40;
    """
    name: str
    """
     Max length: 200;
    """
    private_key: Annotated[str | None, Field(alias="privateKey")] = None
    """
     Max length: 4000;
    """
    processed_folder: Annotated[str, Field(alias="processedFolder")]
    """
     Max length: 40;
    """
    username: str
    """
     Max length: 100;
    """


class GoogleEmailSetupReference(ActivityReference):
    pass


class Group(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    inactive_flag: Annotated[bool | None, Field(alias="inactiveFlag")] = None
    name: str
    public_description: Annotated[str | None, Field(alias="publicDescription")] = None
    """
     Max length: 255;
    """
    public_flag: Annotated[bool | None, Field(alias="publicFlag")] = None


class GroupInfo(ActivityReference):
    pass


class GroupReference(ActivityReference):
    pass


class HolidayList(ContactRelationship):
    pass


class HolidayListInfo(ActivityReference):
    pass


class HolidayListReference(ActivityReference):
    pass


class IRestIdentifiedItem(ConnectWiseModel):
    id: int | None = None


class IdCollection(ConnectWiseModel):
    ids: list[int] | None = None


class Imap(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    email_connector: Annotated[EmailConnectorReference | None, Field(alias="emailConnector")] = None
    failed_folder: Annotated[str, Field(alias="failedFolder")]
    """
     Max length: 40;
    """
    id: int | None = None
    imap_name: Annotated[str, Field(alias="imapName")]
    """
     Max length: 40;
    """
    name: str
    """
     Max length: 200;
    """
    password: str | None = None
    """
     Max length: 80;
    """
    port: int
    processed_name: Annotated[str, Field(alias="processedName")]
    """
     Max length: 40;
    """
    server: str
    """
     Max length: 200;
    """
    ssl_flag: Annotated[bool | None, Field(alias="sslFlag")] = None
    user_name: Annotated[str, Field(alias="userName")]
    """
     Max length: 80;
    """


class ImapInfo(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    email_connector: Annotated[EmailConnectorReference | None, Field(alias="emailConnector")] = None
    id: int | None = None
    name: str | None = None


class ImapSetupReference(ActivityReference):
    pass


class Impact(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    default_flag: Annotated[bool | None, Field(alias="defaultFlag")] = None
    description: str
    """
     Max length: 200;
    """
    id: int | None = None
    name: str | None = None


class ImportMassMaintenance(ConnectWiseModel):
    deleted_company_count: Annotated[int | None, Field(alias="deletedCompanyCount")] = None
    deleted_contact_count: Annotated[int | None, Field(alias="deletedContactCount")] = None
    message: str | None = None
    success: bool | None = None


class InOutType(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    description: str
    """
     Max length: 30;
    """
    id: int | None = None


class InOutTypeInfo(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    description: str | None = None
    id: int | None = None


class InOutTypeReference(ActivityReference):
    pass


class InclusiveRevenueReference(AgreementRevenueReference):
    pass


class IntegratorLoginReference(ActivityReference):
    pass


class IntegratorTag(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    text: str
    """
     Max length: 50;
    """


class IntegratorTagCollection(ConnectWiseModel):
    tags: list[str] | None = None


class InvoiceEmailTemplateInfo(ActivityReference):
    pass


class InvoiceGroupingReference(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    description: str | None = None
    group_parent_child_additions_flag: Annotated[bool | None, Field(alias="groupParentChildAdditionsFlag")] = None
    id: int | None = None
    name: str | None = None
    show_price_flag: Annotated[bool | None, Field(alias="showPriceFlag")] = None
    show_sub_items_flag: Annotated[bool | None, Field(alias="showSubItemsFlag")] = None


class InvoiceReference(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    apply_to_type: Annotated[str | None, Field(alias="applyToType")] = None
    billing_type: Annotated[str | None, Field(alias="billingType")] = None
    id: int | None = None
    identifier: str | None = None


class InvoiceTemplate(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    adjustment_agr_type_visible_flag: Annotated[bool | None, Field(alias="adjustmentAgrTypeVisibleFlag")] = None
    adjustment_amount_caption: Annotated[str | None, Field(alias="adjustmentAmountCaption")] = None
    """
     Max length: 50;
    """
    adjustment_amount_visible_flag: Annotated[bool | None, Field(alias="adjustmentAmountVisibleFlag")] = None
    adjustment_description_caption: Annotated[str | None, Field(alias="adjustmentDescriptionCaption")] = None
    """
     Max length: 50;
    """
    adjustment_description_visible_flag: Annotated[bool | None, Field(alias="adjustmentDescriptionVisibleFlag")] = None
    adjustment_price_caption: Annotated[str | None, Field(alias="adjustmentPriceCaption")] = None
    """
     Max length: 50;
    """
    adjustment_price_visible_flag: Annotated[bool | None, Field(alias="adjustmentPriceVisibleFlag")] = None
    adjustment_quantity_caption: Annotated[str | None, Field(alias="adjustmentQuantityCaption")] = None
    """
     Max length: 50;
    """
    adjustment_quantity_visible_flag: Annotated[bool | None, Field(alias="adjustmentQuantityVisibleFlag")] = None
    adjustment_total_visible_flag: Annotated[bool | None, Field(alias="adjustmentTotalVisibleFlag")] = None
    credit_credit_amount_caption: Annotated[str | None, Field(alias="creditCreditAmountCaption")] = None
    """
     Max length: 50;
    """
    credit_credit_amount_visible_flag: Annotated[bool | None, Field(alias="creditCreditAmountVisibleFlag")] = None
    credit_remaining_amount_caption: Annotated[str | None, Field(alias="creditRemainingAmountCaption")] = None
    """
     Max length: 50;
    """
    credit_remaining_amount_visible_flag: Annotated[bool | None, Field(alias="creditRemainingAmountVisibleFlag")] = None
    currency_id_visible_flag: Annotated[bool | None, Field(alias="currencyIdVisibleFlag")] = None
    currency_symbol_visible_flag: Annotated[bool | None, Field(alias="currencySymbolVisibleFlag")] = None
    expense_detail_agreement_ext_amount_visible_flag: Annotated[
        bool | None, Field(alias="expenseDetailAgreementExtAmountVisibleFlag")
    ] = None
    expense_detail_agreement_visible_flag: Annotated[
        bool | None, Field(alias="expenseDetailAgreementVisibleFlag")
    ] = None
    expense_detail_billable_visible_flag: Annotated[bool | None, Field(alias="expenseDetailBillableVisibleFlag")] = None
    expense_detail_contacts_visible_flag: Annotated[bool | None, Field(alias="expenseDetailContactsVisibleFlag")] = None
    expense_detail_ext_amount_visible_flag: Annotated[
        bool | None, Field(alias="expenseDetailExtAmountVisibleFlag")
    ] = None
    expense_detail_members_visible_flag: Annotated[bool | None, Field(alias="expenseDetailMembersVisibleFlag")] = None
    expense_detail_nonbillable_caption: Annotated[str | None, Field(alias="expenseDetailNonbillableCaption")] = None
    """
     Max length: 50;
    """
    expense_detail_notes_visible_flag: Annotated[bool | None, Field(alias="expenseDetailNotesVisibleFlag")] = None
    expense_detail_pm_phase_visible_flag: Annotated[bool | None, Field(alias="expenseDetailPmPhaseVisibleFlag")] = None
    expense_detail_pm_summary_visible_flag: Annotated[
        bool | None, Field(alias="expenseDetailPmSummaryVisibleFlag")
    ] = None
    expense_detail_primary_sort_direction: Annotated[
        str | None, Field(alias="expenseDetailPrimarySortDirection")
    ] = None
    expense_detail_primary_sort_field: Annotated[str | None, Field(alias="expenseDetailPrimarySortField")] = None
    expense_detail_secondary_sort_direction: Annotated[
        str | None, Field(alias="expenseDetailSecondarySortDirection")
    ] = None
    expense_detail_secondary_sort_field: Annotated[str | None, Field(alias="expenseDetailSecondarySortField")] = None
    expense_detail_sr_address_visible_flag: Annotated[
        bool | None, Field(alias="expenseDetailSrAddressVisibleFlag")
    ] = None
    expense_detail_sr_contact_visible_flag: Annotated[
        bool | None, Field(alias="expenseDetailSrContactVisibleFlag")
    ] = None
    expense_detail_sr_ticket_summary_visible_flag: Annotated[
        bool | None, Field(alias="expenseDetailSrTicketSummaryVisibleFlag")
    ] = None
    expense_detail_subtotal_visible_flag: Annotated[bool | None, Field(alias="expenseDetailSubtotalVisibleFlag")] = None
    expense_detail_ticket_number_visible_flag: Annotated[
        bool | None, Field(alias="expenseDetailTicketNumberVisibleFlag")
    ] = None
    expense_detail_visible_flag: Annotated[bool | None, Field(alias="expenseDetailVisibleFlag")] = None
    expenses_amount_caption: Annotated[str | None, Field(alias="expensesAmountCaption")] = None
    """
     Max length: 50;
    """
    expenses_amount_visible_flag: Annotated[bool | None, Field(alias="expensesAmountVisibleFlag")] = None
    expenses_collapsed_flag: Annotated[bool | None, Field(alias="expensesCollapsedFlag")] = None
    expenses_staff_caption: Annotated[str | None, Field(alias="expensesStaffCaption")] = None
    """
     Max length: 50;
    """
    expenses_staff_visible_flag: Annotated[bool | None, Field(alias="expensesStaffVisibleFlag")] = None
    expenses_total_visible_flag: Annotated[bool | None, Field(alias="expensesTotalVisibleFlag")] = None
    expenses_type_caption: Annotated[str | None, Field(alias="expensesTypeCaption")] = None
    """
     Max length: 50;
    """
    expenses_type_visible_flag: Annotated[bool | None, Field(alias="expensesTypeVisibleFlag")] = None
    header_account_caption: Annotated[str | None, Field(alias="headerAccountCaption")] = None
    """
     Max length: 50;
    """
    header_account_visible_flag: Annotated[bool | None, Field(alias="headerAccountVisibleFlag")] = None
    header_address_position: Annotated[
        Literal["Center", "LeftSide", "RightSide"] | None, Field(alias="headerAddressPosition")
    ] = None
    header_due_date_caption: Annotated[str | None, Field(alias="headerDueDateCaption")] = None
    """
     Max length: 50;
    """
    header_due_date_visible_flag: Annotated[bool | None, Field(alias="headerDueDateVisibleFlag")] = None
    header_hours_based_extended_amount_visible_flag: Annotated[
        bool | None, Field(alias="headerHoursBasedExtendedAmountVisibleFlag")
    ] = None
    header_logo_position: Annotated[
        Literal["Center", "LeftSide", "RightSide"] | None, Field(alias="headerLogoPosition")
    ] = None
    header_po_number_caption: Annotated[str | None, Field(alias="headerPoNumberCaption")] = None
    """
     Max length: 50;
    """
    header_po_number_visible_flag: Annotated[bool | None, Field(alias="headerPoNumberVisibleFlag")] = None
    header_reference_caption: Annotated[str | None, Field(alias="headerReferenceCaption")] = None
    """
     Max length: 50;
    """
    header_reference_visible_flag: Annotated[bool | None, Field(alias="headerReferenceVisibleFlag")] = None
    header_ship_to_caption: Annotated[str | None, Field(alias="headerShipToCaption")] = None
    """
     Max length: 50;
    """
    header_ship_to_visible_flag: Annotated[bool | None, Field(alias="headerShipToVisibleFlag")] = None
    header_tax_id_caption: Annotated[str | None, Field(alias="headerTaxIdCaption")] = None
    """
     Max length: 50;
    """
    header_tax_id_visible_flag: Annotated[bool | None, Field(alias="headerTaxIdVisibleFlag")] = None
    header_terms_caption: Annotated[str | None, Field(alias="headerTermsCaption")] = None
    """
     Max length: 50;
    """
    header_terms_visible_flag: Annotated[bool | None, Field(alias="headerTermsVisibleFlag")] = None
    header_title_caption: Annotated[str | None, Field(alias="headerTitleCaption")] = None
    """
     Max length: 50;
    """
    header_title_font: Annotated[
        Literal["Regular", "RegularBold", "Large", "LargeBold", "ExtraLarge", "ExtraLargeBold"] | None,
        Field(alias="headerTitleFont"),
    ] = None
    header_title_position: Annotated[
        Literal["Center", "LeftSide", "RightSide"] | None, Field(alias="headerTitlePosition")
    ] = None
    header_title_visible_flag: Annotated[bool | None, Field(alias="headerTitleVisibleFlag")] = None
    id: int | None = None
    invoice_balance_due_caption: Annotated[str | None, Field(alias="invoiceBalanceDueCaption")] = None
    """
     Max length: 50;
    """
    invoice_balance_due_visible_flag: Annotated[bool | None, Field(alias="invoiceBalanceDueVisibleFlag")] = None
    invoice_credit_amount_caption: Annotated[str | None, Field(alias="invoiceCreditAmountCaption")] = None
    """
     Max length: 50;
    """
    invoice_credit_amount_visible_flag: Annotated[bool | None, Field(alias="invoiceCreditAmountVisibleFlag")] = None
    invoice_payment_amount_caption: Annotated[str | None, Field(alias="invoicePaymentAmountCaption")] = None
    """
     Max length: 50;
    """
    invoice_payment_amount_visible_flag: Annotated[bool | None, Field(alias="invoicePaymentAmountVisibleFlag")] = None
    logo_visible_flag: Annotated[bool | None, Field(alias="logoVisibleFlag")] = None
    margin_bottom: Annotated[float | None, Field(alias="marginBottom")] = None
    margin_left: Annotated[float | None, Field(alias="marginLeft")] = None
    margin_right: Annotated[float | None, Field(alias="marginRight")] = None
    margin_top: Annotated[float | None, Field(alias="marginTop")] = None
    name: str
    """
     Max length: 50;
    """
    other_charges_amount_caption: Annotated[str | None, Field(alias="otherChargesAmountCaption")] = None
    """
     Max length: 50;
    """
    other_charges_amount_visible_flag: Annotated[bool | None, Field(alias="otherChargesAmountVisibleFlag")] = None
    other_charges_collapsed_flag: Annotated[bool | None, Field(alias="otherChargesCollapsedFlag")] = None
    other_charges_description_caption: Annotated[str | None, Field(alias="otherChargesDescriptionCaption")] = None
    """
     Max length: 50;
    """
    other_charges_description_visible_flag: Annotated[
        bool | None, Field(alias="otherChargesDescriptionVisibleFlag")
    ] = None
    other_charges_display_six_decimals: Annotated[bool | None, Field(alias="otherChargesDisplaySixDecimals")] = None
    other_charges_item_id_visible_flag: Annotated[bool | None, Field(alias="otherChargesItemIdVisibleFlag")] = None
    other_charges_price_caption: Annotated[str | None, Field(alias="otherChargesPriceCaption")] = None
    """
     Max length: 50;
    """
    other_charges_price_visible_flag: Annotated[bool | None, Field(alias="otherChargesPriceVisibleFlag")] = None
    other_charges_quantity_caption: Annotated[str | None, Field(alias="otherChargesQuantityCaption")] = None
    """
     Max length: 50;
    """
    other_charges_quantity_visible_flag: Annotated[bool | None, Field(alias="otherChargesQuantityVisibleFlag")] = None
    other_charges_serial_number_visible_flag: Annotated[
        bool | None, Field(alias="otherChargesSerialNumberVisibleFlag")
    ] = None
    other_charges_total_visible_flag: Annotated[bool | None, Field(alias="otherChargesTotalVisibleFlag")] = None
    payable_caption: Annotated[str | None, Field(alias="payableCaption")] = None
    """
     Max length: 1000;
    """
    portal_flag: Annotated[bool | None, Field(alias="portalFlag")] = None
    project_header_amount_caption: Annotated[str | None, Field(alias="projectHeaderAmountCaption")] = None
    """
     Max length: 50;
    """
    project_header_amount_visible_flag: Annotated[bool | None, Field(alias="projectHeaderAmountVisibleFlag")] = None
    project_header_billing_method_caption: Annotated[
        str | None, Field(alias="projectHeaderBillingMethodCaption")
    ] = None
    """
     Max length: 50;
    """
    project_header_billing_method_visible_flag: Annotated[
        bool | None, Field(alias="projectHeaderBillingMethodVisibleFlag")
    ] = None
    project_header_billing_type_caption: Annotated[str | None, Field(alias="projectHeaderBillingTypeCaption")] = None
    """
     Max length: 50;
    """
    project_header_billing_type_visible_flag: Annotated[
        bool | None, Field(alias="projectHeaderBillingTypeVisibleFlag")
    ] = None
    project_header_company_name_caption: Annotated[str | None, Field(alias="projectHeaderCompanyNameCaption")] = None
    """
     Max length: 50;
    """
    project_header_company_name_visible_flag: Annotated[
        bool | None, Field(alias="projectHeaderCompanyNameVisibleFlag")
    ] = None
    project_header_contact_name_caption: Annotated[str | None, Field(alias="projectHeaderContactNameCaption")] = None
    """
     Max length: 50;
    """
    project_header_contact_name_visible_flag: Annotated[
        bool | None, Field(alias="projectHeaderContactNameVisibleFlag")
    ] = None
    project_header_original_downpayment_caption: Annotated[
        str | None, Field(alias="projectHeaderOriginalDownpaymentCaption")
    ] = None
    """
     Max length: 50;
    """
    project_header_original_downpayment_visible_flag: Annotated[
        bool | None, Field(alias="projectHeaderOriginalDownpaymentVisibleFlag")
    ] = None
    project_header_project_name_caption: Annotated[str | None, Field(alias="projectHeaderProjectNameCaption")] = None
    """
     Max length: 50;
    """
    project_header_project_name_visible_flag: Annotated[
        bool | None, Field(alias="projectHeaderProjectNameVisibleFlag")
    ] = None
    remit_to_visible_flag: Annotated[bool | None, Field(alias="remitToVisibleFlag")] = None
    service_header_amount_caption: Annotated[str | None, Field(alias="serviceHeaderAmountCaption")] = None
    """
     Max length: 50;
    """
    service_header_amount_visible_flag: Annotated[bool | None, Field(alias="serviceHeaderAmountVisibleFlag")] = None
    service_header_billing_method_caption: Annotated[
        str | None, Field(alias="serviceHeaderBillingMethodCaption")
    ] = None
    """
     Max length: 50;
    """
    service_header_billing_method_visible_flag: Annotated[
        bool | None, Field(alias="serviceHeaderBillingMethodVisibleFlag")
    ] = None
    service_header_bundled_tickets_visible_flag: Annotated[
        bool | None, Field(alias="serviceHeaderBundledTicketsVisibleFlag")
    ] = None
    service_header_closed_tasks_visible_flag: Annotated[
        bool | None, Field(alias="serviceHeaderClosedTasksVisibleFlag")
    ] = None
    service_header_company_name_caption: Annotated[str | None, Field(alias="serviceHeaderCompanyNameCaption")] = None
    """
     Max length: 50;
    """
    service_header_company_name_visible_flag: Annotated[
        bool | None, Field(alias="serviceHeaderCompanyNameVisibleFlag")
    ] = None
    service_header_contact_name_caption: Annotated[str | None, Field(alias="serviceHeaderContactNameCaption")] = None
    """
     Max length: 50;
    """
    service_header_contact_name_visible_flag: Annotated[
        bool | None, Field(alias="serviceHeaderContactNameVisibleFlag")
    ] = None
    service_header_detail_description_caption: Annotated[
        str | None, Field(alias="serviceHeaderDetailDescriptionCaption")
    ] = None
    """
     Max length: 50;
    """
    service_header_detail_description_visible_flag: Annotated[
        bool | None, Field(alias="serviceHeaderDetailDescriptionVisibleFlag")
    ] = None
    service_header_open_tasks_visible_flag: Annotated[
        bool | None, Field(alias="serviceHeaderOpenTasksVisibleFlag")
    ] = None
    service_header_resolution_caption: Annotated[str | None, Field(alias="serviceHeaderResolutionCaption")] = None
    """
     Max length: 50;
    """
    service_header_resolution_visible_flag: Annotated[
        bool | None, Field(alias="serviceHeaderResolutionVisibleFlag")
    ] = None
    service_header_summary_caption: Annotated[str | None, Field(alias="serviceHeaderSummaryCaption")] = None
    """
     Max length: 50;
    """
    service_header_summary_visible_flag: Annotated[bool | None, Field(alias="serviceHeaderSummaryVisibleFlag")] = None
    service_header_ticket_number_caption: Annotated[str | None, Field(alias="serviceHeaderTicketNumberCaption")] = None
    """
     Max length: 50;
    """
    service_header_ticket_number_visible_flag: Annotated[
        bool | None, Field(alias="serviceHeaderTicketNumberVisibleFlag")
    ] = None
    services_amount_caption: Annotated[str | None, Field(alias="servicesAmountCaption")] = None
    """
     Max length: 50;
    """
    services_amount_visible_flag: Annotated[bool | None, Field(alias="servicesAmountVisibleFlag")] = None
    services_collapsed_flag: Annotated[bool | None, Field(alias="servicesCollapsedFlag")] = None
    services_hours_caption: Annotated[str | None, Field(alias="servicesHoursCaption")] = None
    """
     Max length: 50;
    """
    services_hours_visible_flag: Annotated[bool | None, Field(alias="servicesHoursVisibleFlag")] = None
    services_member_name_caption: Annotated[str | None, Field(alias="servicesMemberNameCaption")] = None
    """
     Max length: 50;
    """
    services_member_name_visible_flag: Annotated[bool | None, Field(alias="servicesMemberNameVisibleFlag")] = None
    services_rate_caption: Annotated[str | None, Field(alias="servicesRateCaption")] = None
    """
     Max length: 50;
    """
    services_rate_visible_flag: Annotated[bool | None, Field(alias="servicesRateVisibleFlag")] = None
    services_staff_caption: Annotated[str | None, Field(alias="servicesStaffCaption")] = None
    """
     Max length: 50;
    """
    services_staff_visible_flag: Annotated[bool | None, Field(alias="servicesStaffVisibleFlag")] = None
    services_total_visible_flag: Annotated[bool | None, Field(alias="servicesTotalVisibleFlag")] = None
    services_work_role_caption: Annotated[str | None, Field(alias="servicesWorkRoleCaption")] = None
    """
     Max length: 50;
    """
    services_work_role_visible_flag: Annotated[bool | None, Field(alias="servicesWorkRoleVisibleFlag")] = None
    services_work_type_caption: Annotated[str | None, Field(alias="servicesWorkTypeCaption")] = None
    """
     Max length: 50;
    """
    services_work_type_visible_flag: Annotated[bool | None, Field(alias="servicesWorkTypeVisibleFlag")] = None
    time_detail_agreement_visible_flag: Annotated[bool | None, Field(alias="timeDetailAgreementVisibleFlag")] = None
    time_detail_amount_based_ext_amount_visible_flag: Annotated[
        bool | None, Field(alias="timeDetailAmountBasedExtAmountVisibleFlag")
    ] = None
    time_detail_amount_based_hourly_rate_visible_flag: Annotated[
        bool | None, Field(alias="timeDetailAmountBasedHourlyRateVisibleFlag")
    ] = None
    time_detail_amount_based_hours_visible_flag: Annotated[
        bool | None, Field(alias="timeDetailAmountBasedHoursVisibleFlag")
    ] = None
    time_detail_billable_visible_flag: Annotated[bool | None, Field(alias="timeDetailBillableVisibleFlag")] = None
    time_detail_contacts_visible_flag: Annotated[bool | None, Field(alias="timeDetailContactsVisibleFlag")] = None
    time_detail_dates_visible_flag: Annotated[bool | None, Field(alias="timeDetailDatesVisibleFlag")] = None
    time_detail_dollar_amounts_on_hourse_based_visible_flag: Annotated[
        bool | None, Field(alias="timeDetailDollarAmountsOnHourseBasedVisibleFlag")
    ] = None
    time_detail_extended_amount_visible_flag: Annotated[
        bool | None, Field(alias="timeDetailExtendedAmountVisibleFlag")
    ] = None
    time_detail_hourly_rate_visible_flag: Annotated[bool | None, Field(alias="timeDetailHourlyRateVisibleFlag")] = None
    time_detail_hours_based_ext_amount_visible_flag: Annotated[
        bool | None, Field(alias="timeDetailHoursBasedExtAmountVisibleFlag")
    ] = None
    time_detail_hours_based_hours_visible_flag: Annotated[
        bool | None, Field(alias="timeDetailHoursBasedHoursVisibleFlag")
    ] = None
    time_detail_hours_visible_flag: Annotated[bool | None, Field(alias="timeDetailHoursVisibleFlag")] = None
    time_detail_hoursbased_hourly_rate_visible_flag: Annotated[
        bool | None, Field(alias="timeDetailHoursbasedHourlyRateVisibleFlag")
    ] = None
    time_detail_members_visible_flag: Annotated[bool | None, Field(alias="timeDetailMembersVisibleFlag")] = None
    time_detail_non_billable_caption: Annotated[str | None, Field(alias="timeDetailNonBillableCaption")] = None
    """
     Max length: 50;
    """
    time_detail_notes_visible_flag: Annotated[bool | None, Field(alias="timeDetailNotesVisibleFlag")] = None
    time_detail_pm_phase_visible_flag: Annotated[bool | None, Field(alias="timeDetailPmPhaseVisibleFlag")] = None
    time_detail_pm_summary_visible_flag: Annotated[bool | None, Field(alias="timeDetailPmSummaryVisibleFlag")] = None
    time_detail_primary_sort_direction: Annotated[str | None, Field(alias="timeDetailPrimarySortDirection")] = None
    time_detail_primary_sort_field: Annotated[str | None, Field(alias="timeDetailPrimarySortField")] = None
    time_detail_sr_address_visible_flag: Annotated[bool | None, Field(alias="timeDetailSRAddressVisibleFlag")] = None
    time_detail_sr_contact_visible_flag: Annotated[bool | None, Field(alias="timeDetailSRContactVisibleFlag")] = None
    time_detail_sr_ticket_summary_visible_flag: Annotated[
        bool | None, Field(alias="timeDetailSRTicketSummaryVisibleFlag")
    ] = None
    time_detail_secondary_sort_direction: Annotated[str | None, Field(alias="timeDetailSecondarySortDirection")] = None
    time_detail_secondary_sort_field: Annotated[str | None, Field(alias="timeDetailSecondarySortField")] = None
    time_detail_start_end_time_visible_flag: Annotated[
        bool | None, Field(alias="timeDetailStartEndTimeVisibleFlag")
    ] = None
    time_detail_subtotal_visible_flag: Annotated[bool | None, Field(alias="timeDetailSubtotalVisibleFlag")] = None
    time_detail_ticket_number_visible_flag: Annotated[
        bool | None, Field(alias="timeDetailTicketNumberVisibleFlag")
    ] = None
    time_detail_visible_flag: Annotated[bool | None, Field(alias="timeDetailVisibleFlag")] = None


class InvoiceTemplateDetailReference(ActivityReference):
    pass


class InvoiceTemplateReference(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    """
    Invoice Template Setup Id
    """
    name: str | None = None


class InvoiceTemplateSetup(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    custom_flag: Annotated[bool | None, Field(alias="customFlag")] = None
    id: int | None = None
    name: str | None = None


class IvItemReference(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    identifier: str | None = None
    serialized_flag: Annotated[bool | None, Field(alias="serializedFlag")] = None


class KBCategoryReference(ActivityReference):
    pass


class KPICategory(ConnectWiseModel):
    id: int | None = None
    name: str | None = None
    sort_order: Annotated[int | None, Field(alias="sortOrder")] = None


class KPICategoryReference(ActivityReference):
    pass


class KPIReference(ActivityReference):
    pass


class KnowledgeBaseArticle(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    board: BoardReference | None = None
    business_unit_id: Annotated[int | None, Field(alias="businessUnitId")] = None
    category_id: Annotated[int | None, Field(alias="categoryId")] = None
    created_by: Annotated[str | None, Field(alias="createdBy")] = None
    date_created: Annotated[datetime | None, Field(alias="dateCreated")] = None
    id: int | None = None
    issue: str
    location_id: Annotated[int | None, Field(alias="locationId")] = None
    resolution: str
    sub_category_id: Annotated[int | None, Field(alias="subCategoryId")] = None
    title: str


class LdapConfiguration(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    domain: str
    """
    Domain Name of the server. Max length: 50;
    """
    id: int | None = None
    name: str
    """
     Max length: 100;
    """
    server: str
    """
    FQDN of the Server. Max length: 200;
    """


class LdapConfigurationInfo(ActivityReference):
    pass


class LdapConfigurationReference(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    name: str | None = None
    server: str | None = None


class LdapConfigurationTestLink(ConnectWiseModel):
    server: str | None = None
    """
     Max length: 200;
    """


class LegacySubCategory(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    inactive_flag: Annotated[bool | None, Field(alias="inactiveFlag")] = None
    name: str
    """
     Max length: 50;
    """


class LegacySubCategoryInfo(CategoryInfo):
    pass


class LicenseBit(ConnectWiseModel):
    active_flag: Annotated[bool | None, Field(alias="activeFlag")] = None
    name: str | None = None


class Link(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    name: str
    """
     Max length: 50;
    """
    screen_link: Annotated[
        Literal["Company", "Contact", "Service", "Invoice", "PurchaseOrder", "SalesOrder"] | None,
        Field(alias="screenLink"),
    ] = None
    table_reference_id: Annotated[int | None, Field(alias="tableReferenceId")] = None
    url: str | None = None
    """
     Max length: 1000;
    """


class LinkClicked(ConnectWiseModel):
    campaign_id: Annotated[int | None, Field(alias="campaignId")] = None
    contact_id: Annotated[int, Field(alias="contactId")]
    date_clicked: Annotated[datetime | None, Field(alias="dateClicked")] = None
    id: int | None = None
    query_string: Annotated[str | None, Field(alias="queryString")] = None
    url: str
    """
     Max length: 2083;
    """


class LinkInfo(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    name: str | None = None
    screen_link: Annotated[
        Literal["Company", "Contact", "Service", "Invoice", "PurchaseOrder", "SalesOrder"] | None,
        Field(alias="screenLink"),
    ] = None


class LinkResolveUrlInfo(ConnectWiseModel):
    reference_id: Annotated[int, Field(alias="referenceId")]
    url: str | None = None


class LocaleInfo(ConnectWiseModel):
    id: int | None = None
    locale_code: Annotated[str | None, Field(alias="localeCode")] = None
    name: str | None = None


class LocaleReference(ActivityReference):
    pass


class LocationInfo(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    location_flag: bool | None = None
    name: str | None = None
    structure_level: Annotated[CorporateStructureLevelReference | None, Field(alias="structureLevel")] = None


class LostRevenueReference(AgreementRevenueReference):
    pass


class ManagedDevicesIntegrationInfo(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    management_it_setup_type: Annotated[str | None, Field(alias="managementItSetupType")] = None
    name: str | None = None
    solution: str | None = None


class ManagedDevicesIntegrationReference(ActivityReference):
    pass


class ManagedInformation(ConnectWiseModel):
    child_configurations_matching_on: Annotated[str | None, Field(alias="childConfigurationsMatchingOn")] = None
    inactivate_configurations_matching_on: Annotated[
        str | None, Field(alias="inactivateConfigurationsMatchingOn")
    ] = None
    inactive_configuration_status_id: Annotated[int | None, Field(alias="inactiveConfigurationStatusId")] = None
    level: str | None = None
    managed_identifier: Annotated[str | None, Field(alias="managedIdentifier")] = None
    management_solution_name: Annotated[str | None, Field(alias="managementSolutionName")] = None
    type: str | None = None


class Management(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    added_configuration_status: Annotated[
        ConfigurationStatusReference | None, Field(alias="addedConfigurationStatus")
    ] = None
    deleted_configuration_status: Annotated[
        ConfigurationStatusReference | None, Field(alias="deletedConfigurationStatus")
    ] = None
    executive_summary_report_schedule_day: Annotated[
        int | None, Field(alias="executiveSummaryReportScheduleDay")
    ] = None
    """
    This is only required when scheduleExecutiveSummaryReportFlag = true
    """
    executive_summary_report_schedule_hour: Annotated[
        int | None, Field(alias="executiveSummaryReportScheduleHour")
    ] = None
    """
    This is only required when scheduleExecutiveSummaryReportFlag = true. Input should be in 24 hour format, ie 2pm is 14
    """
    executive_summary_report_schedule_minute: Annotated[
        int | None, Field(alias="executiveSummaryReportScheduleMinute")
    ] = None
    """
    This is only required when scheduleExecutiveSummaryReportFlag = true
    """
    id: int | None = None
    integrator_login: Annotated[IntegratorLoginReference | None, Field(alias="integratorLogin")] = None
    run_time: Annotated[datetime | None, Field(alias="runTime")] = None
    schedule_executive_summary_report_flag: Annotated[bool, Field(alias="scheduleExecutiveSummaryReportFlag")]


class ManagementBackup(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    billing_level: Annotated[Literal["Detail", "Summary"], Field(alias="billingLevel")]
    id: int | None = None
    item: CatalogItemReference | None = None
    type: AgreementTypeReference | None = None


class ManagementItSolution(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    continuum_api_password: Annotated[str | None, Field(alias="continuumApiPassword")] = None
    """
    This is only required for Continuum solution Max length: 100;
    """
    continuum_api_username: Annotated[str | None, Field(alias="continuumApiUsername")] = None
    """
    This is only required for Continuum solution Max length: 100;
    """
    global_login_flag: Annotated[bool | None, Field(alias="globalLoginFlag")] = None
    global_login_password: Annotated[str | None, Field(alias="globalLoginPassword")] = None
    """
    This is only required when globalLoginFlag = true Max length: 50;
    """
    global_login_username: Annotated[str | None, Field(alias="globalLoginUsername")] = None
    """
    This is only required when globalLoginFlag = true Max length: 50;
    """
    id: int | None = None
    level_api_password: Annotated[str | None, Field(alias="levelApiPassword")] = None
    """
    This is only required for Level Platforms solution Max length: 100;
    """
    level_api_username: Annotated[str | None, Field(alias="levelApiUsername")] = None
    """
    This is only required for Level Platforms solution Max length: 100;
    """
    level_var_domain: Annotated[str | None, Field(alias="levelVarDomain")] = None
    """
    This is only required for Level Platforms solution Max length: 100;
    """
    management_it_solution_type: Annotated[
        Literal["LevelPlatforms", "NAble", "Continuum", "Custom"], Field(alias="managementItSolutionType")
    ]
    management_server_url: Annotated[str | None, Field(alias="managementServerUrl")] = None
    """
    This is only required for Level Platforms Max length: 200;
    """
    management_solution_name: Annotated[str | None, Field(alias="managementSolutionName")] = None
    """
    This is only required when managementItSolutionType is Custom Max length: 30;
    """
    n_able_password: Annotated[str | None, Field(alias="nAblePassword")] = None
    """
    This is only required for N-Able solution Max length: 50;
    """
    n_able_username: Annotated[str | None, Field(alias="nAbleUsername")] = None
    """
    This is only required for N-Able solution Max length: 50;
    """
    name: str
    """
     Max length: 30;
    """
    no_display_flag: Annotated[bool | None, Field(alias="noDisplayFlag")] = None
    override_login_location_flag: Annotated[bool | None, Field(alias="overrideLoginLocationFlag")] = None
    override_web_service_location_flag: Annotated[bool | None, Field(alias="overrideWebServiceLocationFlag")] = None
    portal_override_login_url: Annotated[str | None, Field(alias="portalOverrideLoginUrl")] = None
    """
    This is only required for Level Platforms when overrideLoginLocationFlag is true Max length: 200;
    """
    using_ssl_flag: Annotated[bool | None, Field(alias="usingSslFlag")] = None
    webservice_override_url: Annotated[str | None, Field(alias="webserviceOverrideUrl")] = None
    """
    This is only required for Level Platforms when overrideWebServiceLocationFlag is true Max length: 200;
    """


class ManagementItSolutionAgreementInterfaceParameter(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    agreement_type: Annotated[AgreementTypeReference | None, Field(alias="agreementType")] = None
    id: int | None = None
    managed_devices_integration: Annotated[
        ManagedDevicesIntegrationReference | None, Field(alias="managedDevicesIntegration")
    ] = None
    server_product: Annotated[IvItemReference | None, Field(alias="serverProduct")] = None
    spam_stats_product: Annotated[IvItemReference | None, Field(alias="spamStatsProduct")] = None
    workstation_product: Annotated[IvItemReference | None, Field(alias="workstationProduct")] = None


class ManagementLogDocumentInfo(ConnectWiseModel):
    file_size: Annotated[str | None, Field(alias="fileSize")] = None
    full_path_file_name: Annotated[str | None, Field(alias="fullPathFileName")] = None


class ManagementNetworkSecurity(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    name: str
    """
     Max length: 30;
    """
    password: str | None = None
    """
     Max length: 50;
    """
    site: str
    """
     Max length: 100;
    """
    username: str | None = None
    """
     Max length: 50;
    """


class ManagementReportSetup(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    scheduled_report_disabled_flag: Annotated[bool, Field(alias="scheduledReportDisabledFlag")]


class ManagementSolutionReference(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    name: str | None = None
    setup_name: Annotated[str | None, Field(alias="setupName")] = None


class Manufacturer(LegacySubCategory):
    pass


class ManufacturerInfo(CategoryInfo):
    pass


class ManufacturerReference(ActivityReference):
    pass


class MappedRecordReference(CorporateStructureLevel):
    pass


class MappedType(ConnectWiseModel):
    gl_type: Annotated[
        Literal[
            "AP",
            "AR",
            "EE",
            "EI",
            "EO",
            "IA",
            "IT",
            "P",
            "PF",
            "R",
            "RA",
            "RD",
            "RE",
            "RP",
            "ST",
            "SD",
            "ET",
            "FT",
            "PT",
        ]
        | None,
        Field(alias="glType"),
    ] = None
    id: int | None = None
    name: str | None = None
    rec_id_field: Annotated[str | None, Field(alias="recIdField")] = None
    sort_order: Annotated[int | None, Field(alias="sortOrder")] = None
    table: str | None = None


class MappedTypeReference(ActivityReference):
    pass


class MarketDescription(ContactRelationship):
    pass


class MarketDescriptionInfo(ActivityReference):
    pass


class MarketDescriptionReference(ActivityReference):
    pass


class MarketingCompany(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    all_contacts_flag: Annotated[bool | None, Field(alias="allContactsFlag")] = None
    default_contact_flag: Annotated[bool | None, Field(alias="defaultContactFlag")] = None
    group_id: Annotated[int | None, Field(alias="groupId")] = None
    id: int | None = None
    unsubscribe_flag: Annotated[bool | None, Field(alias="unsubscribeFlag")] = None


class MarketingContact(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    group_id: Annotated[int | None, Field(alias="groupId")] = None
    id: int | None = None
    note: str | None = None
    """
     Max length: 50;
    """
    unsubscribe_flag: Annotated[bool | None, Field(alias="unsubscribeFlag")] = None


class MarketplaceImport(ConnectWiseModel):
    id: int | None = None
    marketplace_import_type: Annotated[
        Literal[
            "Agreements",
            "Configurations",
            "CRMSurveys",
            "CustomReports",
            "CustomerPortalTypes",
            "HTMLEmailTemplates",
            "Products",
            "ProjectBoards",
            "ProjectTemplates",
            "ReportWriterReports",
            "ServiceBoards",
            "TicketTemplates",
            "Views",
        ]
        | None,
        Field(alias="marketplaceImportType"),
    ] = None
    marketplace_object: Annotated[list | None, Field(alias="marketplaceObject")] = None
    required_fields: Annotated[list[str] | None, Field(alias="requiredFields")] = None


class MemberInfo(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    default_email: Annotated[str | None, Field(alias="defaultEmail")] = None
    first_name: Annotated[str | None, Field(alias="firstName")] = None
    full_name: Annotated[str | None, Field(alias="fullName")] = None
    id: int | None = None
    identifier: str | None = None
    inactive_flag: Annotated[bool | None, Field(alias="inactiveFlag")] = None
    last_name: Annotated[str | None, Field(alias="lastName")] = None
    license_class: Annotated[Literal["A", "C", "F", "X"] | None, Field(alias="licenseClass")] = None
    """
    F = Full Member, A = API Member, C = StreamlineIT Member, X = Subcontractor Member
    """
    middle_initial: Annotated[str | None, Field(alias="middleInitial")] = None
    photo: DocumentReference | None = None


class MemberLinkSsoUser(ConnectWiseModel):
    sso_user_id: Annotated[str | None, Field(alias="ssoUserId")] = None
    """
     Max length: 100;
    """


class MemberNotificationSetting(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    notification_trigger: Annotated[
        Literal[
            "ActivityStatusReq",
            "CustomerUpdated",
            "ExpenseReport",
            "TicketStatusChange",
            "TicketStatusRequest",
            "TimeNagApprover",
            "TimeNagMember",
            "TimeSheet",
            "WorkflowRules",
        ],
        Field(alias="notificationTrigger"),
    ]
    notification_type: Annotated[Literal["Email", "Push"], Field(alias="notificationType")]


class MemberOffice365(ConnectWiseModel):
    id: str | None = None
    name: str | None = None


class MemberReference(CatalogItemReference):
    pass


class MemberSsoSettingsReference(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    email: str | None = None
    id: int | None = None
    sso_user_id: Annotated[str | None, Field(alias="ssoUserId")] = None
    user_name: Annotated[str | None, Field(alias="userName")] = None


class MemberSsoToken(ConnectWiseModel):
    token: str | None = None


class MemberType(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    inactive_flag: Annotated[bool | None, Field(alias="inactiveFlag")] = None
    name: str
    """
     Max length: 30;
    """


class MemberTypeInfo(CategoryInfo):
    pass


class MemberTypeReference(ActivityReference):
    pass


class MenuLocationReference(ActivityReference):
    pass


class MySecurity(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    add_level: Annotated[Literal["None", "My", "All"] | None, Field(alias="addLevel")] = None
    custom_flag: Annotated[bool | None, Field(alias="customFlag")] = None
    delete_level: Annotated[Literal["None", "My", "All"] | None, Field(alias="deleteLevel")] = None
    edit_level: Annotated[Literal["None", "My", "All"] | None, Field(alias="editLevel")] = None
    id: int | None = None
    inquire_level: Annotated[Literal["None", "My", "All"] | None, Field(alias="inquireLevel")] = None
    member: MemberReference | None = None
    module_description: Annotated[str | None, Field(alias="moduleDescription")] = None
    module_function_description: Annotated[str | None, Field(alias="moduleFunctionDescription")] = None
    module_function_identifier: Annotated[str | None, Field(alias="moduleFunctionIdentifier")] = None
    module_function_name: Annotated[str | None, Field(alias="moduleFunctionName")] = None
    module_identifier: Annotated[str | None, Field(alias="moduleIdentifier")] = None
    module_name: Annotated[str | None, Field(alias="moduleName")] = None
    my_all_flag: Annotated[bool | None, Field(alias="myAllFlag")] = None
    report_flag: Annotated[bool | None, Field(alias="reportFlag")] = None
    restrict_flag: Annotated[bool | None, Field(alias="restrictFlag")] = None
    sort_order: Annotated[int | None, Field(alias="sortOrder")] = None


class MySecurityCustomizeItem(ConnectWiseModel):
    customize_identifier: Annotated[
        Literal[
            "CompanyReports",
            "FinanceReports",
            "MarketingReports",
            "ProcurementReports",
            "ProjectReports",
            "SalesReports",
            "ServiceReports",
            "SystemReports",
            "TimeAndExpenseReports",
            "CompanyConfigurations",
            "FinanceAgreements",
            "ProjectScheduling",
            "ServiceResourceScheduling",
            "SystemManageHostedApi",
            "SystemMyAccount",
            "SystemCustomMenuEntry",
            "SystemMassMaintenance",
            "SystemTableSetup",
        ]
        | None,
        Field(alias="customizeIdentifier"),
    ] = None
    id: int | None = None
    item_identifier: Annotated[str | None, Field(alias="itemIdentifier")] = None


class NoteTypeReference(ActivityReference):
    pass


class NotificationRecipient(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    agreement_flag: Annotated[bool | None, Field(alias="agreementFlag")] = None
    config_flag: Annotated[bool | None, Field(alias="configFlag")] = None
    external_flag: Annotated[bool | None, Field(alias="externalFlag")] = None
    id: int | None = None
    identifier: str | None = None
    invoice_flag: Annotated[bool | None, Field(alias="invoiceFlag")] = None
    knowledge_base_flag: Annotated[bool | None, Field(alias="knowledgeBaseFlag")] = None
    member_flag: Annotated[bool | None, Field(alias="memberFlag")] = None
    msp_flag: Annotated[bool | None, Field(alias="mspFlag")] = None
    name: str | None = None
    procurement_flag: Annotated[bool | None, Field(alias="procurementFlag")] = None
    project_flag: Annotated[bool | None, Field(alias="projectFlag")] = None
    sales_flag: Annotated[bool | None, Field(alias="salesFlag")] = None
    service_flag: Annotated[bool | None, Field(alias="serviceFlag")] = None
    track_flag: Annotated[bool | None, Field(alias="trackFlag")] = None


class NotificationRecipientReference(CatalogItemReference):
    pass


class NotifyTypeReference(CatalogItemReference):
    pass


class Office365EmailSetup(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    authorized_flag: Annotated[bool | None, Field(alias="authorizedFlag")] = None
    client_id: Annotated[str | None, Field(alias="clientId")] = None
    """
     Max length: 36;
    """
    client_secret: Annotated[str | None, Field(alias="clientSecret")] = None
    """
     Max length: 4000;
    """
    email_connector: Annotated[EmailConnectorReference | None, Field(alias="emailConnector")] = None
    failed_folder: Annotated[str, Field(alias="failedFolder")]
    """
     Max length: 40;
    """
    id: int | None = None
    inactive_flag: Annotated[bool | None, Field(alias="inactiveFlag")] = None
    inbox_folder: Annotated[str, Field(alias="inboxFolder")]
    """
     Max length: 40;
    """
    name: str
    """
     Max length: 200;
    """
    processed_folder: Annotated[str, Field(alias="processedFolder")]
    """
     Max length: 40;
    """
    tenant_id: Annotated[str | None, Field(alias="tenantId")] = None
    """
     Max length: 36;
    """
    username: str
    """
     Max length: 100;
    """


class Office365EmailSetupReference(ActivityReference):
    pass


class OnHandSerialNumberReference(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    serial_number: Annotated[str | None, Field(alias="serialNumber")] = None


class OpenRevenueReference(AgreementRevenueReference):
    pass


class OpportunityNote(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    entered_by: Annotated[str | None, Field(alias="enteredBy")] = None
    flagged: bool | None = None
    id: int | None = None
    mobile_guid: Annotated[UUID | None, Field(alias="mobileGuid")] = None
    opportunity_id: Annotated[int | None, Field(alias="opportunityId")] = None
    text: str
    type: NoteTypeReference | None = None


class OpportunityPriorityReference(ActivityReference):
    pass


class OpportunityProbabilityReference(ActivityReference):
    pass


class OpportunityRating(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    name: str
    """
     Max length: 50;
    """
    sort_order: Annotated[int | None, Field(alias="sortOrder")] = None


class OpportunityRatingInfo(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    name: str | None = None
    sort_order: Annotated[int | None, Field(alias="sortOrder")] = None


class OpportunityRatingReference(ActivityReference):
    pass


class OpportunityReference(ActivityReference):
    pass


class OpportunitySalesRoleReference(ActivityReference):
    pass


class OpportunityStage(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    color: str | None = None
    """
     Max length: 25;
    """
    id: int | None = None
    name: str
    """
     Max length: 50;
    """
    probability: OpportunityProbabilityReference | None = None
    sequence_number: Annotated[int | None, Field(alias="sequenceNumber")] = None


class OpportunityStageInfo(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    color: str | None = None
    id: int | None = None
    name: str | None = None
    probability: OpportunityProbabilityReference | None = None
    sequence_number: Annotated[int | None, Field(alias="sequenceNumber")] = None


class OpportunityStageReference(ActivityReference):
    pass


class OpportunityStatus(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    closed_flag: Annotated[bool | None, Field(alias="closedFlag")] = None
    date_entered: Annotated[datetime | None, Field(alias="dateEntered")] = None
    default_flag: Annotated[bool | None, Field(alias="defaultFlag")] = None
    entered_by: Annotated[str | None, Field(alias="enteredBy")] = None
    id: int | None = None
    inactive_flag: Annotated[bool | None, Field(alias="inactiveFlag")] = None
    lost_flag: Annotated[bool | None, Field(alias="lostFlag")] = None
    name: str
    """
     Max length: 30;
    """
    won_flag: Annotated[bool | None, Field(alias="wonFlag")] = None


class OpportunityStatusInfo(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    closed_flag: Annotated[bool | None, Field(alias="closedFlag")] = None
    id: int | None = None
    inactive_flag: Annotated[bool | None, Field(alias="inactiveFlag")] = None
    name: str | None = None


class OpportunityStatusReference(ActivityReference):
    pass


class OpportunityToAgreementConversion(ConnectWiseModel):
    agreement_id: Annotated[int | None, Field(alias="agreementId")] = None
    bill_cycle_id: Annotated[int | None, Field(alias="billCycleId")] = None
    bill_one_time_flag: Annotated[bool | None, Field(alias="billOneTimeFlag")] = None
    business_unit_id: Annotated[int | None, Field(alias="businessUnitId")] = None
    end_date: Annotated[datetime | None, Field(alias="endDate")] = None
    include_all_documents_flag: Annotated[bool | None, Field(alias="includeAllDocumentsFlag")] = None
    include_all_notes_flag: Annotated[bool | None, Field(alias="includeAllNotesFlag")] = None
    include_all_products_flag: Annotated[bool | None, Field(alias="includeAllProductsFlag")] = None
    include_document_ids: Annotated[list[int] | None, Field(alias="includeDocumentIds")] = None
    include_note_ids: Annotated[list[int] | None, Field(alias="includeNoteIds")] = None
    include_product_ids: Annotated[list[int] | None, Field(alias="includeProductIds")] = None
    location_id: Annotated[int | None, Field(alias="locationId")] = None
    name: str | None = None
    no_ending_date_flag: Annotated[bool | None, Field(alias="noEndingDateFlag")] = None
    start_date: Annotated[datetime | None, Field(alias="startDate")] = None
    type: AgreementTypeReference | None = None


class OpportunityToSalesOrderConversion(ConnectWiseModel):
    include_all_documents_flag: Annotated[bool | None, Field(alias="includeAllDocumentsFlag")] = None
    include_all_notes_flag: Annotated[bool | None, Field(alias="includeAllNotesFlag")] = None
    include_all_products_flag: Annotated[bool | None, Field(alias="includeAllProductsFlag")] = None
    include_document_ids: Annotated[list[int] | None, Field(alias="includeDocumentIds")] = None
    include_note_ids: Annotated[list[int] | None, Field(alias="includeNoteIds")] = None
    include_product_ids: Annotated[list[int] | None, Field(alias="includeProductIds")] = None
    name: str | None = None
    sales_order_id: Annotated[int | None, Field(alias="salesOrderId")] = None


class OpportunityToServiceTicketConversion(ConnectWiseModel):
    include_all_documents_flag: Annotated[bool | None, Field(alias="includeAllDocumentsFlag")] = None
    include_all_notes_flag: Annotated[bool | None, Field(alias="includeAllNotesFlag")] = None
    include_all_products_flag: Annotated[bool | None, Field(alias="includeAllProductsFlag")] = None
    include_document_ids: Annotated[list[int] | None, Field(alias="includeDocumentIds")] = None
    include_note_ids: Annotated[list[int] | None, Field(alias="includeNoteIds")] = None
    include_product_ids: Annotated[list[int] | None, Field(alias="includeProductIds")] = None
    summary: str | None = None
    ticket_id: Annotated[int | None, Field(alias="ticketId")] = None


class OpportunityType(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    description: str
    """
     Max length: 50;
    """
    id: int | None = None
    inactive_flag: Annotated[bool | None, Field(alias="inactiveFlag")] = None


class OpportunityTypeInfo(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    description: str | None = None
    id: int | None = None
    inactive_flag: Annotated[bool | None, Field(alias="inactiveFlag")] = None


class OpportunityTypeReference(ActivityReference):
    pass


class OrderStatusEmailTemplateReference(ActivityReference):
    pass


class OrderStatusInfo(CategoryInfo):
    pass


class OrderStatusReference(ActivityReference):
    pass


class OsGradeWeight(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    os_grade_weight: Annotated[float | None, Field(alias="osGradeWeight")] = None
    os_name: Annotated[str | None, Field(alias="osName")] = None


class Other1RevenueReference(AgreementRevenueReference):
    pass


class Other2RevenueReference(AgreementRevenueReference):
    pass


class OwnershipType(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    core_entity_ownership_type: Annotated[
        Literal[
            "CharitableOrganization",
            "Clinic",
            "Government",
            "Hospital",
            "PrivateSchoolForProfit",
            "PrivateSchoolNonProfit",
            "PublicCompany",
            "PublicSchool",
            "Regulator",
            "Reseller",
            "SmallBusiness",
        ]
        | None,
        Field(alias="coreEntityOwnershipType"),
    ] = None
    id: int | None = None
    name: str
    """
     Max length: 200;
    """


class OwnershipTypeInfo(ActivityReference):
    pass


class OwnershipTypeReference(ActivityReference):
    pass


class PageValues(ConnectWiseModel):
    page: int | None = None
    page_id: Annotated[int | None, Field(alias="pageId")] = None
    page_size: Annotated[int | None, Field(alias="pageSize")] = None


class ParsingType(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    default_flag: Annotated[bool | None, Field(alias="defaultFlag")] = None
    id: int | None = None
    name: str | None = None
    parse_rule: Annotated[str | None, Field(alias="parseRule")] = None


class ParsingVariable(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    code: str | None = None
    id: int | None = None
    name: str | None = None


class PatchOperation(ConnectWiseModel):
    op: str | None = None
    path: str | None = None
    value: dict[str, Any] | None = None


class Payment(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    amount: float | None = None
    applied_by: Annotated[str | None, Field(alias="appliedBy")] = None
    credit: InvoiceReference | None = None
    id: int | None = None
    invoice: InvoiceReference | None = None
    payment_date: Annotated[datetime | None, Field(alias="paymentDate")] = None
    type: str | None = None


class PaymentMethodReference(ActivityReference):
    pass


class PaymentType(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    classification: ClassificationReference | None = None
    company_flag: Annotated[bool | None, Field(alias="companyFlag")] = None
    default_flag: Annotated[bool | None, Field(alias="defaultFlag")] = None
    id: int | None = None
    name: str
    """
     Max length: 30;
    """


class PaymentTypeInfo(AddressFormatInfo):
    pass


class PersonasInfo(CorporateStructureLevel):
    pass


class PhaseStatusReference(ActivityReference):
    pass


class PortalCalendar(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    adjust1_end: Annotated[str | None, Field(alias="adjust1End")] = None
    adjust1_hours: Annotated[float | None, Field(alias="adjust1Hours")] = None
    adjust1_start: Annotated[str | None, Field(alias="adjust1Start")] = None
    adjust2_end: Annotated[str | None, Field(alias="adjust2End")] = None
    adjust2_hours: Annotated[float | None, Field(alias="adjust2Hours")] = None
    adjust2_start: Annotated[str | None, Field(alias="adjust2Start")] = None
    adjust3_end: Annotated[str | None, Field(alias="adjust3End")] = None
    adjust3_hours: Annotated[float | None, Field(alias="adjust3Hours")] = None
    adjust3_start: Annotated[str | None, Field(alias="adjust3Start")] = None
    id: int | None = None
    week_start: Annotated[
        Literal["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], Field(alias="weekStart")
    ]


class PortalConfiguration(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    agreement_type_ids: Annotated[list[int] | None, Field(alias="agreementTypeIds")] = None
    board_ids: Annotated[list[int] | None, Field(alias="boardIds")] = None
    button_color: Annotated[str | None, Field(alias="buttonColor")] = None
    """
     Max length: 7;
    """
    company: CompanyReference | None = None
    config_type_ids: Annotated[list[int] | None, Field(alias="configTypeIds")] = None
    default_flag: Annotated[bool | None, Field(alias="defaultFlag")] = None
    display_vendor_flag: Annotated[bool | None, Field(alias="displayVendorFlag")] = None
    header_color: Annotated[str | None, Field(alias="headerColor")] = None
    """
     Max length: 7;
    """
    id: int | None = None
    """
    An existing Portal Configuration id is required when copying a Portal Configuration.
    """
    language: Literal[
        "English",
        "Spanish",
        "French",
        "British",
        "Australian",
        "BrazilianPortuguese",
        "CanadianFrench",
        "German",
        "NewZealand",
        "Dutch",
    ] | None = None
    location_ids: Annotated[list[int] | None, Field(alias="locationIds")] = None
    login_background_color: Annotated[str | None, Field(alias="loginBackgroundColor")] = None
    """
     Max length: 7;
    """
    menu_color: Annotated[str | None, Field(alias="menuColor")] = None
    """
     Max length: 7;
    """
    name: str
    """
     Max length: 150;
    """
    portal_background_color: Annotated[str | None, Field(alias="portalBackgroundColor")] = None
    """
     Max length: 7;
    """
    portal_image_copy_success_flag: Annotated[bool | None, Field(alias="portalImageCopySuccessFlag")] = None
    url: str | None = None
    """
     Max length: 1000;
    """
    welcome_text: Annotated[str | None, Field(alias="welcomeText")] = None
    """
     Max length: 4000;
    """


class PortalConfigurationOpportunitySetup(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    acceptance_change_status_flag: Annotated[bool | None, Field(alias="acceptanceChangeStatusFlag")] = None
    acceptance_create_activity_flag: Annotated[bool | None, Field(alias="acceptanceCreateActivityFlag")] = None
    acceptance_email_activity_type: Annotated[
        ActivityTypeReference | None, Field(alias="acceptanceEmailActivityType")
    ] = None
    acceptance_email_assigned_by_member: Annotated[
        MemberReference | None, Field(alias="acceptanceEmailAssignedByMember")
    ] = None
    acceptance_email_body: Annotated[str | None, Field(alias="acceptanceEmailBody")] = None
    acceptance_email_from_first_name: Annotated[str | None, Field(alias="acceptanceEmailFromFirstName")] = None
    acceptance_email_from_last_name: Annotated[str | None, Field(alias="acceptanceEmailFromLastName")] = None
    acceptance_email_subject: Annotated[str | None, Field(alias="acceptanceEmailSubject")] = None
    acceptance_from_email: Annotated[str | None, Field(alias="acceptanceFromEmail")] = None
    """
    Required when acceptanceSendEmailFlag is true
    """
    acceptance_opportunity_status: Annotated[
        OpportunityStatusReference | None, Field(alias="acceptanceOpportunityStatus")
    ] = None
    acceptance_send_email_flag: Annotated[bool | None, Field(alias="acceptanceSendEmailFlag")] = None
    add_all_opportunity_statuses: Annotated[bool | None, Field(alias="addAllOpportunityStatuses")] = None
    add_all_opportunity_types: Annotated[bool | None, Field(alias="addAllOpportunityTypes")] = None
    confirmation_email_body: Annotated[str | None, Field(alias="confirmationEmailBody")] = None
    confirmation_email_from_first_name: Annotated[str | None, Field(alias="confirmationEmailFromFirstName")] = None
    confirmation_email_from_last_name: Annotated[str | None, Field(alias="confirmationEmailFromLastName")] = None
    confirmation_email_subject: Annotated[str | None, Field(alias="confirmationEmailSubject")] = None
    confirmation_email_use_default_company_email_address_flag: Annotated[
        bool | None, Field(alias="confirmationEmailUseDefaultCompanyEmailAddressFlag")
    ] = None
    confirmation_from_email: Annotated[str | None, Field(alias="confirmationFromEmail")] = None
    """
    Required when confirmationSendEmailFlag is true
    """
    confirmation_send_email_flag: Annotated[bool | None, Field(alias="confirmationSendEmailFlag")] = None
    id: int | None = None
    opportunity_status_rec_i_ds: Annotated[list[int] | None, Field(alias="opportunityStatusRecIDs")] = None
    opportunity_type_rec_i_ds: Annotated[list[int] | None, Field(alias="opportunityTypeRecIDs")] = None
    rejection_change_status_flag: Annotated[bool | None, Field(alias="rejectionChangeStatusFlag")] = None
    rejection_create_activity_flag: Annotated[bool | None, Field(alias="rejectionCreateActivityFlag")] = None
    rejection_email_activity_type: Annotated[
        ActivityTypeReference | None, Field(alias="rejectionEmailActivityType")
    ] = None
    rejection_email_assigned_by_member: Annotated[
        MemberReference | None, Field(alias="rejectionEmailAssignedByMember")
    ] = None
    rejection_email_body: Annotated[str | None, Field(alias="rejectionEmailBody")] = None
    rejection_email_from_first_name: Annotated[str | None, Field(alias="rejectionEmailFromFirstName")] = None
    rejection_email_from_last_name: Annotated[str | None, Field(alias="rejectionEmailFromLastName")] = None
    rejection_email_subject: Annotated[str | None, Field(alias="rejectionEmailSubject")] = None
    rejection_from_email: Annotated[str | None, Field(alias="rejectionFromEmail")] = None
    """
    Required when rejectionSendEmailFlag is true
    """
    rejection_opportunity_status: Annotated[
        OpportunityStatusReference | None, Field(alias="rejectionOpportunityStatus")
    ] = None
    rejection_send_email_flag: Annotated[bool | None, Field(alias="rejectionSendEmailFlag")] = None
    remove_all_opportunity_statuses: Annotated[bool | None, Field(alias="removeAllOpportunityStatuses")] = None
    remove_all_opportunity_types: Annotated[bool | None, Field(alias="removeAllOpportunityTypes")] = None
    restrict_view_by_opportunity_status_flag: Annotated[
        bool | None, Field(alias="restrictViewByOpportunityStatusFlag")
    ] = None
    restrict_view_by_opportunity_type_flag: Annotated[
        bool | None, Field(alias="restrictViewByOpportunityTypeFlag")
    ] = None


class PortalConfigurationPasswordEmailSetup(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    invalid_password_email_body: Annotated[str | None, Field(alias="invalidPasswordEmailBody")] = None
    invalid_password_email_from_email: Annotated[str | None, Field(alias="invalidPasswordEmailFromEmail")] = None
    """
    Required when invalidPasswordEmailUseCustomEmailFlag is true
    """
    invalid_password_email_from_first_name: Annotated[
        str | None, Field(alias="invalidPasswordEmailFromFirstName")
    ] = None
    invalid_password_email_from_last_name: Annotated[str | None, Field(alias="invalidPasswordEmailFromLastName")] = None
    invalid_password_email_subject: Annotated[str | None, Field(alias="invalidPasswordEmailSubject")] = None
    invalid_password_email_use_custom_email_flag: Annotated[
        bool | None, Field(alias="invalidPasswordEmailUseCustomEmailFlag")
    ] = None
    valid_password_email_body: Annotated[str | None, Field(alias="validPasswordEmailBody")] = None
    valid_password_email_from_email: Annotated[str | None, Field(alias="validPasswordEmailFromEmail")] = None
    """
    Required when validPasswordEmailUseCustomEmailFlag is true
    """
    valid_password_email_from_first_name: Annotated[str | None, Field(alias="validPasswordEmailFromFirstName")] = None
    valid_password_email_from_last_name: Annotated[str | None, Field(alias="validPasswordEmailFromLastName")] = None
    valid_password_email_subject: Annotated[str | None, Field(alias="validPasswordEmailSubject")] = None
    valid_password_email_use_custom_email_flag: Annotated[
        bool | None, Field(alias="validPasswordEmailUseCustomEmailFlag")
    ] = None


class PortalConfigurationPaymentProcessor(ConnectWiseModel):
    id: int | None = None
    name: str | None = None
    test_url: Annotated[str | None, Field(alias="testURL")] = None


class PortalConfigurationPaymentProcessorReference(ActivityReference):
    pass


class PortalConfigurationReference(ActivityReference):
    pass


class PortalReport(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    custom_flag: Annotated[bool | None, Field(alias="customFlag")] = None
    display_flag: Annotated[bool | None, Field(alias="displayFlag")] = None
    id: int | None = None
    name: str
    """
     Max length: 255;
    """
    open_same_window_flag: Annotated[bool | None, Field(alias="openSameWindowFlag")] = None
    portal_configuration: Annotated[PortalConfigurationReference | None, Field(alias="portalConfiguration")] = None
    url: str
    """
     Max length: 255;
    """


class PortalSecurity(ConnectWiseModel):
    enabled: bool | None = None
    identifier: str | None = None


class PortalSecurityLevel(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    caption: str | None = None
    """
     Max length: 50;
    """
    caption_identifier: Annotated[str | None, Field(alias="captionIdentifier")] = None
    id: int | None = None
    is_default_flag: Annotated[bool | None, Field(alias="isDefaultFlag")] = None


class PortalSecuritySetting(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    function_description: Annotated[str | None, Field(alias="functionDescription")] = None
    function_identifier: Annotated[str | None, Field(alias="functionIdentifier")] = None
    id: int | None = None
    level_five: Annotated[bool | None, Field(alias="levelFive")] = None
    level_four: Annotated[bool | None, Field(alias="levelFour")] = None
    level_one: Annotated[bool | None, Field(alias="levelOne")] = None
    level_six: Annotated[bool | None, Field(alias="levelSix")] = None
    level_three: Annotated[bool | None, Field(alias="levelThree")] = None
    level_two: Annotated[bool | None, Field(alias="levelTwo")] = None


class PricingBreak(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    amount: float | None = None
    detail_id: Annotated[int | None, Field(alias="detailId")] = None
    id: int | None = None
    price_method: Annotated[
        Literal["FlatRateForRange", "PercentMarkupFromCost", "PercentMarkdownFromPrice", "PricePerUnit"],
        Field(alias="priceMethod"),
    ]
    quantity_end: Annotated[float | None, Field(alias="quantityEnd")] = None
    quantity_start: Annotated[float, Field(alias="quantityStart")]
    unlimited: bool | None = None


class PricingSchedule(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    companies: list[int] | None = None
    currency: CurrencyReference | None = None
    default_flag: Annotated[bool | None, Field(alias="defaultFlag")] = None
    id: int | None = None
    inactive_flag: Annotated[bool | None, Field(alias="inactiveFlag")] = None
    name: str
    """
     Max length: 30;
    """
    remove_all_companies_flag: Annotated[bool | None, Field(alias="removeAllCompaniesFlag")] = None
    set_all_companies_flag: Annotated[bool | None, Field(alias="setAllCompaniesFlag")] = None


class PricingScheduleReference(ActivityReference):
    pass


class Priority(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    color: Literal[
        "Black", "Blue", "Cyan", "Gray", "Green", "Lime", "Orange", "Pink", "Purple", "Red", "White", "Yellow", "Custom"
    ]
    default_flag: Annotated[bool | None, Field(alias="defaultFlag")] = None
    id: int | None = None
    image_link: Annotated[str | None, Field(alias="imageLink")] = None
    name: str
    """
     Max length: 50;
    """
    sort_order: Annotated[int | None, Field(alias="sortOrder")] = None


class PriorityInfo(OpportunityRatingInfo):
    pass


class PriorityReference(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    name: str | None = None
    sort: int | None = None


class ProcurementSetting(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    auto_approve_purchase_order_flag: Annotated[bool | None, Field(alias="autoApprovePurchaseOrderFlag")] = None
    auto_close_purchase_order_flag: Annotated[bool | None, Field(alias="autoClosePurchaseOrderFlag")] = None
    auto_close_purchase_order_item_flag: Annotated[bool | None, Field(alias="autoClosePurchaseOrderItemFlag")] = None
    costing_method: Annotated[Literal["FIFO", "LIFO", "AverageCosting"], Field(alias="costingMethod")]
    default_product_taxable_flag: Annotated[bool | None, Field(alias="defaultProductTaxableFlag")] = None
    disable_auto_pick_flag: Annotated[bool | None, Field(alias="disableAutoPickFlag")] = None
    disable_cost_updates_flag: Annotated[bool | None, Field(alias="disableCostUpdatesFlag")] = None
    disable_negative_inventory_flag: Annotated[bool | None, Field(alias="disableNegativeInventoryFlag")] = None
    eori_number: Annotated[str | None, Field(alias="eoriNumber")] = None
    """
     Max length: 50;
    """
    id: int | None = None
    num_decimal_places: Annotated[int | None, Field(alias="numDecimalPlaces")] = None
    prefix_suffix_type: Annotated[Literal["Prefix", "Suffix"] | None, Field(alias="prefixSuffixType")] = None
    purchase_order_prefix: Annotated[str | None, Field(alias="purchaseOrderPrefix")] = None
    """
     Max length: 5;
    """
    purchase_order_suffix: Annotated[str | None, Field(alias="purchaseOrderSuffix")] = None
    """
     Max length: 5;
    """
    starting_purchase_order_num: Annotated[int, Field(alias="startingPurchaseOrderNum")]
    tax_freight_flag: Annotated[bool | None, Field(alias="taxFreightFlag")] = None
    tax_purchase_order_flag: Annotated[bool | None, Field(alias="taxPurchaseOrderFlag")] = None
    use_vendor_tax_code_flag: Annotated[bool | None, Field(alias="useVendorTaxCodeFlag")] = None


class ProductCategoryReference(ActivityReference):
    pass


class ProductDemand(ConnectWiseModel):
    cost: float | None = None
    product_rec_id: Annotated[int | None, Field(alias="productRecId")] = None
    quantity: int | None = None


class ProductDetach(ConnectWiseModel):
    remove_from_invoice: Annotated[bool | None, Field(alias="removeFromInvoice")] = None
    remove_from_opportunity: Annotated[bool | None, Field(alias="removeFromOpportunity")] = None
    remove_from_project: Annotated[bool | None, Field(alias="removeFromProject")] = None
    remove_from_sales_order: Annotated[bool | None, Field(alias="removeFromSalesOrder")] = None
    remove_from_ticket: Annotated[bool | None, Field(alias="removeFromTicket")] = None


class ProductItemReference(ActivityReference):
    pass


class ProductRecurring(ConnectWiseModel):
    bill_cycle_id: Annotated[int | None, Field(alias="billCycleId")] = None
    cycle_type: Annotated[Literal["ContractYear", "CalendarYear"] | None, Field(alias="cycleType")] = None
    cycles: int | None = None
    end_date: Annotated[datetime | None, Field(alias="endDate")] = None
    """
    The Recurring End Date is calculated based on the
                start date, number of cycles, and cycle type.
    """
    recurring_cost: Annotated[float | None, Field(alias="recurringCost")] = None
    recurring_revenue: Annotated[float | None, Field(alias="recurringRevenue")] = None
    start_date: Annotated[datetime | None, Field(alias="startDate")] = None


class ProductReference(InOutTypeInfo):
    pass


class ProductRevenueReference(AgreementRevenueReference):
    pass


class ProductSubCategoryReference(ActivityReference):
    pass


class ProductType(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    default_flag: Annotated[bool | None, Field(alias="defaultFlag")] = None
    id: int | None = None
    inactive_flag: Annotated[bool | None, Field(alias="inactiveFlag")] = None
    name: str
    """
     Max length: 50;
    """
    type_xref: Annotated[
        Literal["InventoryPart", "NonInventoryPart", "OtherCharge", "Service"] | None, Field(alias="typeXref")
    ] = None


class ProductTypeInfo(CategoryInfo):
    pass


class ProductTypeReference(ActivityReference):
    pass


class ProjectBoardReference(ActivityReference):
    pass


class ProjectBoardTeamInfo(ActivityReference):
    pass


class ProjectContact(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    contact: ContactReference | None = None
    id: int | None = None
    project_id: Annotated[int | None, Field(alias="projectId")] = None


class ProjectNote(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    flagged: bool | None = None
    id: int | None = None
    project_id: Annotated[int | None, Field(alias="projectId")] = None
    text: str
    type: NoteTypeReference | None = None


class ProjectPhaseReference(ActivityReference):
    pass


class ProjectReference(ActivityReference):
    pass


class ProjectRoleReference(AdjustmentTypeReference):
    pass


class ProjectSecurityRole(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    default_contact_flag: Annotated[bool | None, Field(alias="defaultContactFlag")] = None
    id: int | None = None
    manager_role_flag: Annotated[bool | None, Field(alias="managerRoleFlag")] = None
    name: str
    """
     Max length: 30;
    """


class ProjectSecurityRoleSetting(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    add_level: Annotated[Literal["None", "My", "All"] | None, Field(alias="addLevel")] = None
    delete_level: Annotated[Literal["None", "My", "All"] | None, Field(alias="deleteLevel")] = None
    edit_level: Annotated[Literal["None", "My", "All"] | None, Field(alias="editLevel")] = None
    id: int | None = None
    inquire_level: Annotated[Literal["None", "My", "All"] | None, Field(alias="inquireLevel")] = None
    module_identifier: Annotated[str | None, Field(alias="moduleIdentifier")] = None
    """
     Max length: 50;
    """
    my_flag: Annotated[bool | None, Field(alias="myFlag")] = None


class ProjectStatusInfo(CategoryInfo):
    pass


class ProjectStatusReference(ActivityReference):
    pass


class ProjectType(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    default_flag: Annotated[bool | None, Field(alias="defaultFlag")] = None
    id: int | None = None
    inactive_flag: Annotated[bool | None, Field(alias="inactiveFlag")] = None
    integration_xref: Annotated[str | None, Field(alias="integrationXref")] = None
    """
     Max length: 50;
    """
    name: str
    """
     Max length: 30;
    """


class ProjectTypeInfo(ActivityReference):
    pass


class ProjectTypeReference(ActivityReference):
    pass


class PurchaseOrderLineItemReference(AdjustmentTypeReference):
    pass


class PurchaseOrderReference(ActivityReference):
    pass


class PurchaseOrderStatusEmailTemplateReference(ActivityReference):
    pass


class PurchaseOrderStatusReference(ActivityReference):
    pass


class RelationshipReference(ActivityReference):
    pass


class ReminderReference(ActivityReference):
    pass


class Report(ConnectWiseModel):
    name: str | None = None


class ReportCard(ContactRelationship):
    pass


class ReportCardInfo(ActivityReference):
    pass


class ReportCardReference(ActivityReference):
    pass


class ReportColumnDefinition(ConnectWiseModel):
    identity_column: Annotated[bool | None, Field(alias="identityColumn")] = None
    is_nullable: Annotated[bool | None, Field(alias="isNullable")] = None
    type: str | None = None


class ReportDataResponse(ConnectWiseModel):
    column_definitions: list[list] | None = None
    row_values: list[list] | None = None


class ReportingService(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    reporting_domain: Annotated[str | None, Field(alias="reportingDomain")] = None
    """
     Max length: 50;
    """
    reporting_password: Annotated[str | None, Field(alias="reportingPassword")] = None
    """
    To blank out the password, enter an empty string here. Max length: 50;
    """
    reporting_url: Annotated[str | None, Field(alias="reportingUrl")] = None
    """
     Max length: 100;
    """
    reporting_user_name: Annotated[str | None, Field(alias="reportingUserName")] = None
    """
     Max length: 50;
    """


class RequestPasswordRequest(ConnectWiseModel):
    email: str


class RmaAction(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    default_flag: Annotated[bool | None, Field(alias="defaultFlag")] = None
    id: int | None = None
    name: str
    """
     Max length: 50;
    """


class RmaActionInfo(ActivityReference):
    pass


class RmaActionReference(ActivityReference):
    pass


class RmaDisposition(RmaAction):
    pass


class RmaDispositionInfo(ActivityReference):
    pass


class RmaDispositionReference(ActivityReference):
    pass


class RmaStatusEmailTemplateReference(ActivityReference):
    pass


class RmaStatusInfo(OpportunityRatingInfo):
    pass


class RmaStatusReference(ActivityReference):
    pass


class Role(ContactRelationship):
    pass


class SLA(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    application_order: Annotated[int | None, Field(alias="applicationOrder")] = None
    based_on: Annotated[Literal["AllHours", "Customer", "MyCalendar", "Custom"], Field(alias="basedOn")]
    custom_calendar: Annotated[CalendarReference | None, Field(alias="customCalendar")] = None
    default_flag: Annotated[bool | None, Field(alias="defaultFlag")] = None
    hi_impact_hi_urgency: Annotated[PriorityReference | None, Field(alias="hiImpactHiUrgency")] = None
    hi_impact_low_urgency: Annotated[PriorityReference | None, Field(alias="hiImpactLowUrgency")] = None
    hi_impact_med_urgency: Annotated[PriorityReference | None, Field(alias="hiImpactMedUrgency")] = None
    id: int | None = None
    low_impact_hi_urgency: Annotated[PriorityReference | None, Field(alias="lowImpactHiUrgency")] = None
    low_impact_low_urgency: Annotated[PriorityReference | None, Field(alias="lowImpactLowUrgency")] = None
    low_impact_med_urgency: Annotated[PriorityReference | None, Field(alias="lowImpactMedUrgency")] = None
    med_impact_hi_urgency: Annotated[PriorityReference | None, Field(alias="medImpactHiUrgency")] = None
    med_impact_low_urgency: Annotated[PriorityReference | None, Field(alias="medImpactLowUrgency")] = None
    med_impact_med_urgency: Annotated[PriorityReference | None, Field(alias="medImpactMedUrgency")] = None
    name: str
    """
     Max length: 25;
    """
    plan_within: Annotated[float | None, Field(alias="planWithin")] = None
    plan_within_percent: Annotated[int | None, Field(alias="planWithinPercent")] = None
    resolution_hours: Annotated[float | None, Field(alias="resolutionHours")] = None
    resolution_percent: Annotated[int | None, Field(alias="resolutionPercent")] = None
    respond_hours: Annotated[float | None, Field(alias="respondHours")] = None
    respond_percent: Annotated[int | None, Field(alias="respondPercent")] = None


class SLAInfo(ActivityReference):
    pass


class SLAReference(ActivityReference):
    pass


class SalesOrderReference(AdjustmentTypeReference):
    pass


class SalesProbability(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    probability: int


class SalesProbabilityInfo(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    probability: int | None = None


class SalesTeamReference(AdjustmentTypeReference):
    pass


class ScheduleColor(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    color: str
    """
    Must be a valid Hexadecimal Color Code
    """
    end_percent: Annotated[int | None, Field(alias="endPercent")] = None
    """
    A endPercent is required if startPercent has value
    """
    id: int | None = None
    start_percent: Annotated[int | None, Field(alias="startPercent")] = None
    """
    A startPercent (0 or higher) is required if endPercent has value
    """


class ScheduleEntryReference(InOutTypeInfo):
    pass


class ScheduleReminderTime(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    default_flag: Annotated[bool | None, Field(alias="defaultFlag")] = None
    id: int | None = None
    name: str | None = None
    """
     Max length: 10;
    """
    time: int | None = None
    """
    Time is calculated in minutes
    """


class ScheduleSpanReference(AdjustmentTypeReference):
    pass


class ScheduleStatus(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    default_flag: Annotated[bool | None, Field(alias="defaultFlag")] = None
    id: int | None = None
    name: str
    """
     Max length: 30;
    """
    show_as_tentative_flag: Annotated[bool | None, Field(alias="showAsTentativeFlag")] = None


class ScheduleStatusReference(ActivityReference):
    pass


class ScheduleTypeReference(AdjustmentTypeReference):
    pass


class SchedulingMemberInfo(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    default_email: Annotated[str | None, Field(alias="defaultEmail")] = None
    first_name: Annotated[str | None, Field(alias="firstName")] = None
    full_name: Annotated[str | None, Field(alias="fullName")] = None
    id: int | None = None
    identifier: str | None = None
    inactive_flag: Annotated[bool | None, Field(alias="inactiveFlag")] = None
    last_name: Annotated[str | None, Field(alias="lastName")] = None
    middle_initial: Annotated[str | None, Field(alias="middleInitial")] = None


class SecurityRole(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    admin_flag: Annotated[bool | None, Field(alias="adminFlag")] = None
    id: int | None = None
    inactive_flag: Annotated[bool | None, Field(alias="inactiveFlag")] = None
    name: str
    """
     Max length: 30;
    """


class SecurityRoleInfo(CategoryInfo):
    pass


class SecurityRoleReference(ActivityReference):
    pass


class SecurityRoleSetting(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    add_level: Annotated[Literal["None", "My", "All"] | None, Field(alias="addLevel")] = None
    custom_flag: Annotated[bool | None, Field(alias="customFlag")] = None
    delete_level: Annotated[Literal["None", "My", "All"] | None, Field(alias="deleteLevel")] = None
    edit_level: Annotated[Literal["None", "My", "All"] | None, Field(alias="editLevel")] = None
    id: int | None = None
    inquire_level: Annotated[Literal["None", "My", "All"] | None, Field(alias="inquireLevel")] = None
    module_description: Annotated[str | None, Field(alias="moduleDescription")] = None
    module_function_description: Annotated[str | None, Field(alias="moduleFunctionDescription")] = None
    module_function_identifier: Annotated[str | None, Field(alias="moduleFunctionIdentifier")] = None
    module_function_name: Annotated[str | None, Field(alias="moduleFunctionName")] = None
    module_identifier: Annotated[str | None, Field(alias="moduleIdentifier")] = None
    module_name: Annotated[str | None, Field(alias="moduleName")] = None
    my_all_flag: Annotated[bool | None, Field(alias="myAllFlag")] = None
    report_flag: Annotated[bool | None, Field(alias="reportFlag")] = None
    restrict_flag: Annotated[bool | None, Field(alias="restrictFlag")] = None
    sort_order: Annotated[int | None, Field(alias="sortOrder")] = None


class Service(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    allow_cc_flag: Annotated[bool | None, Field(alias="allowCCFlag")] = None
    allow_to_flag: Annotated[bool | None, Field(alias="allowTOFlag")] = None
    calendar_setup: Annotated[CalendarSetupReference | None, Field(alias="calendarSetup")] = None
    contact_color: Annotated[str | None, Field(alias="contactColor")] = None
    """
     Max length: 50;
    """
    contact_color_disable_flag: Annotated[bool | None, Field(alias="contactColorDisableFlag")] = None
    header_color: Annotated[str | None, Field(alias="headerColor")] = None
    """
     Max length: 50;
    """
    header_color_disable_flag: Annotated[bool | None, Field(alias="headerColorDisableFlag")] = None
    hide_delimiter_flag: Annotated[bool | None, Field(alias="hideDelimiterFlag")] = None
    id: int | None = None
    member_color: Annotated[str | None, Field(alias="memberColor")] = None
    """
     Max length: 50;
    """
    member_color_disable_flag: Annotated[bool | None, Field(alias="memberColorDisableFlag")] = None
    schedule_span: Annotated[Literal["Standard", "OfficeHours", "Overnight"], Field(alias="scheduleSpan")]
    sr_notify: Annotated[
        Literal["All", "NewAndClosedRequests", "ClosedRequestsOnly", "NewRequestsOnly", "None"], Field(alias="srNotify")
    ]
    unknown_color: Annotated[str | None, Field(alias="unknownColor")] = None
    """
     Max length: 50;
    """
    unknown_color_disable_flag: Annotated[bool | None, Field(alias="unknownColorDisableFlag")] = None


class ServiceCodeReference(ActivityReference):
    pass


class ServiceEmailTemplateReference(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    identifier: str | None = None
    name: str | None = None
    type: str | None = None


class ServiceInfo(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    contact_color: Annotated[str | None, Field(alias="contactColor")] = None
    header_color: Annotated[str | None, Field(alias="headerColor")] = None
    id: int | None = None
    member_color: Annotated[str | None, Field(alias="memberColor")] = None
    unknown_color: Annotated[str | None, Field(alias="unknownColor")] = None


class ServiceItemReference(ActivityReference):
    pass


class ServiceLocation(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    default_flag: Annotated[bool | None, Field(alias="defaultFlag")] = None
    id: int | None = None
    name: str
    """
     Max length: 30;
    """
    where: Literal["OnSite", "Remote", "InHouse"]


class ServiceLocationInfo(AddressFormatInfo):
    pass


class ServiceLocationReference(ActivityReference):
    pass


class ServiceNote(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    contact: ContactReference | None = None
    created_by: Annotated[str | None, Field(alias="createdBy")] = None
    customer_updated_flag: Annotated[bool | None, Field(alias="customerUpdatedFlag")] = None
    date_created: Annotated[datetime | None, Field(alias="dateCreated")] = None
    detail_description_flag: Annotated[bool | None, Field(alias="detailDescriptionFlag")] = None
    external_flag: Annotated[bool | None, Field(alias="externalFlag")] = None
    id: int | None = None
    internal_analysis_flag: Annotated[bool | None, Field(alias="internalAnalysisFlag")] = None
    internal_flag: Annotated[bool | None, Field(alias="internalFlag")] = None
    issue_flag: Annotated[bool | None, Field(alias="issueFlag")] = None
    member: MemberReference | None = None
    process_notifications: Annotated[bool | None, Field(alias="processNotifications")] = None
    resolution_flag: Annotated[bool | None, Field(alias="resolutionFlag")] = None
    text: str | None = None
    ticket_id: Annotated[int | None, Field(alias="ticketId")] = None


class ServiceRevenueReference(AgreementRevenueReference):
    pass


class ServiceSignoff(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    billing_methods_text: Annotated[str | None, Field(alias="billingMethodsText")] = None
    """
     Max length: 2000;
    """
    billing_methods_text_flag: Annotated[bool | None, Field(alias="billingMethodsTextFlag")] = None
    """
    On add/post, if billingMethodsText.Length > 0, this is set to true
    """
    billing_terms_flag: Annotated[bool | None, Field(alias="billingTermsFlag")] = None
    company_info_flag: Annotated[bool | None, Field(alias="companyInfoFlag")] = None
    configurations_flag: Annotated[bool | None, Field(alias="configurationsFlag")] = None
    credit_card_fields_flag: Annotated[bool | None, Field(alias="creditCardFieldsFlag")] = None
    customer_signoff_fields_flag: Annotated[bool | None, Field(alias="customerSignoffFieldsFlag")] = None
    customer_signoff_text: Annotated[str | None, Field(alias="customerSignoffText")] = None
    """
     Max length: 4000;
    """
    customer_signoff_text_flag: Annotated[bool | None, Field(alias="customerSignoffTextFlag")] = None
    """
    On add/post, if customerSignoffText.Length > 0, this is set to true
    """
    default_ff_flag: Annotated[bool | None, Field(alias="defaultFFFlag")] = None
    default_flag: Annotated[bool | None, Field(alias="defaultFlag")] = None
    discussion_flag: Annotated[bool | None, Field(alias="discussionFlag")] = None
    expense_agreement_flag: Annotated[bool | None, Field(alias="expenseAgreementFlag")] = None
    expense_amount_flag: Annotated[bool | None, Field(alias="expenseAmountFlag")] = None
    expense_bill_flag: Annotated[bool | None, Field(alias="expenseBillFlag")] = None
    expense_date_flag: Annotated[bool | None, Field(alias="expenseDateFlag")] = None
    expense_flag: Annotated[bool | None, Field(alias="expenseFlag")] = None
    """
    On add/post, if any expense related flag is set to true, this is also set to true
    """
    expense_manual_entry: Annotated[int | None, Field(alias="expenseManualEntry")] = None
    expense_manual_flag: Annotated[bool | None, Field(alias="expenseManualFlag")] = None
    expense_member_flag: Annotated[bool | None, Field(alias="expenseMemberFlag")] = None
    expense_notes_flag: Annotated[bool | None, Field(alias="expenseNotesFlag")] = None
    expense_tax_flag: Annotated[bool | None, Field(alias="expenseTaxFlag")] = None
    expense_type_flag: Annotated[bool | None, Field(alias="expenseTypeFlag")] = None
    id: int | None = None
    internal_notes_flag: Annotated[bool | None, Field(alias="internalNotesFlag")] = None
    name: str
    """
     Max length: 50;
    """
    product_agreement_flag: Annotated[bool | None, Field(alias="productAgreementFlag")] = None
    product_bill_flag: Annotated[bool | None, Field(alias="productBillFlag")] = None
    product_description_flag: Annotated[bool | None, Field(alias="productDescriptionFlag")] = None
    product_extended_amount_flag: Annotated[bool | None, Field(alias="productExtendedAmountFlag")] = None
    product_flag: Annotated[bool | None, Field(alias="productFlag")] = None
    """
    On add/post, if any product related flag is set to true, this is also set to true
    """
    product_manual_entry: Annotated[int | None, Field(alias="productManualEntry")] = None
    product_manual_flag: Annotated[bool | None, Field(alias="productManualFlag")] = None
    product_price_flag: Annotated[bool | None, Field(alias="productPriceFlag")] = None
    product_quantity_flag: Annotated[bool | None, Field(alias="productQuantityFlag")] = None
    product_tax_flag: Annotated[bool | None, Field(alias="productTaxFlag")] = None
    resolution_flag: Annotated[bool | None, Field(alias="resolutionFlag")] = None
    summary_flag: Annotated[bool | None, Field(alias="summaryFlag")] = None
    task: Literal["All", "Closed", "Open"] | None = None
    """
    On add/post, if this is set but no value is set for taskFlag, taskFlag is set to true
    """
    task_flag: Annotated[bool | None, Field(alias="taskFlag")] = None
    """
    On add/post, if this is set to true but no value is set for task, task is defaulted to ServiceTasks.All
    """
    technician_signoff_flag: Annotated[bool | None, Field(alias="technicianSignoffFlag")] = None
    time_agreement_flag: Annotated[bool | None, Field(alias="timeAgreementFlag")] = None
    time_bill_flag: Annotated[bool | None, Field(alias="timeBillFlag")] = None
    time_date_flag: Annotated[bool | None, Field(alias="timeDateFlag")] = None
    time_extended_amount_flag: Annotated[bool | None, Field(alias="timeExtendedAmountFlag")] = None
    time_flag: Annotated[bool | None, Field(alias="timeFlag")] = None
    """
    On add/post, if any time related flag is set to true, this is also set to true
    """
    time_hours_flag: Annotated[bool | None, Field(alias="timeHoursFlag")] = None
    time_manual_entry: Annotated[int | None, Field(alias="timeManualEntry")] = None
    time_manual_flag: Annotated[bool | None, Field(alias="timeManualFlag")] = None
    time_member_flag: Annotated[bool | None, Field(alias="timeMemberFlag")] = None
    time_notes_flag: Annotated[bool | None, Field(alias="timeNotesFlag")] = None
    time_rate_flag: Annotated[bool | None, Field(alias="timeRateFlag")] = None
    time_start_end_flag: Annotated[bool | None, Field(alias="timeStartEndFlag")] = None
    time_tax_flag: Annotated[bool | None, Field(alias="timeTaxFlag")] = None
    time_work_type_flag: Annotated[bool | None, Field(alias="timeWorkTypeFlag")] = None
    visible_logo_flag: Annotated[bool | None, Field(alias="visibleLogoFlag")] = None


class ServiceSignoffInfo(AddressFormatInfo):
    pass


class ServiceSignoffReference(ActivityReference):
    pass


class ServiceSourceReference(ActivityReference):
    pass


class ServiceStatusReference(ActivityReference):
    pass


class ServiceSubTypeReference(ActivityReference):
    pass


class ServiceSurvey(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    footer_text: Annotated[str | None, Field(alias="footerText")] = None
    """
     Max length: 500;
    """
    footer_text_visible_flag: Annotated[bool | None, Field(alias="footerTextVisibleFlag")] = None
    header_include_logo_flag: Annotated[bool | None, Field(alias="headerIncludeLogoFlag")] = None
    header_text: Annotated[str | None, Field(alias="headerText")] = None
    """
     Max length: 4000;
    """
    header_text_visible_flag: Annotated[bool | None, Field(alias="headerTextVisibleFlag")] = None
    id: int | None = None
    inactive_flag: Annotated[bool | None, Field(alias="inactiveFlag")] = None
    name: str
    """
     Max length: 50;
    """
    notify_member: Annotated[MemberReference | None, Field(alias="notifyMember")] = None
    notify_who: Annotated[GenericIdIdentifierReference | None, Field(alias="notifyWho")] = None
    notify_who_visible_flag: Annotated[bool | None, Field(alias="notifyWhoVisibleFlag")] = None
    thank_you_text: Annotated[str | None, Field(alias="thankYouText")] = None
    """
     Max length: 4000;
    """


class ServiceSurveyQuestionOption(ConnectWiseModel):
    caption: str | None = None
    include_flag: Annotated[bool | None, Field(alias="includeFlag")] = None
    points: int | None = None


class ServiceSurveyReference(ActivityReference):
    pass


class ServiceTeamReference(ActivityReference):
    pass


class ServiceTemplateInfo(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    name: str | None = None
    template_flag: Annotated[bool | None, Field(alias="templateFlag")] = None


class ServiceTemplateReference(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    name: str | None = None
    summary: str | None = None


class ServiceTicketLink(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    enabled_flag: Annotated[bool | None, Field(alias="enabledFlag")] = None
    id: int | None = None
    link_text: Annotated[str, Field(alias="linkText")]
    """
     Max length: 50;
    """
    name: str
    """
     Max length: 50;
    """
    url: str
    """
     Max length: 1000;
    """


class ServiceTicketLinkInfo(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    link_text: Annotated[str | None, Field(alias="linkText")] = None
    name: str | None = None
    url: str | None = None


class ServiceTypeReference(ActivityReference):
    pass


class SetupScreen(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    category: str | None = None
    description: str | None = None
    id: int | None = None
    module_description: Annotated[str | None, Field(alias="moduleDescription")] = None
    module_identifier: Annotated[str | None, Field(alias="moduleIdentifier")] = None
    module_name: Annotated[str | None, Field(alias="moduleName")] = None
    name: str | None = None


class Severity(Impact):
    pass


class ShipmentMethod(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    default_flag: Annotated[bool | None, Field(alias="defaultFlag")] = None
    id: int | None = None
    name: str
    """
     Max length: 50;
    """
    tracking_url: Annotated[str | None, Field(alias="trackingUrl")] = None
    """
     Max length: 200;
    """


class ShipmentMethodInfo(ActivityReference):
    pass


class ShipmentMethodReference(ActivityReference):
    pass


class SicCodeReference(ActivityReference):
    pass


class SiteReference(ActivityReference):
    pass


class SkillCategory(ContactDepartment):
    pass


class SkillCategoryReference(ActivityReference):
    pass


class SkillInfo(ActivityReference):
    pass


class SkillReference(ActivityReference):
    pass


class Source(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    date_entered: Annotated[datetime | None, Field(alias="dateEntered")] = None
    default_flag: Annotated[bool | None, Field(alias="defaultFlag")] = None
    entered_by: Annotated[str | None, Field(alias="enteredBy")] = None
    id: int | None = None
    name: str
    """
     Max length: 50;
    """


class SourceInfo(ActivityReference):
    pass


class SsoConfiguration(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    all_members_submitted: Annotated[bool | None, Field(alias="allMembersSubmitted")] = None
    client_id: Annotated[str | None, Field(alias="clientId")] = None
    """
    Client identity for this configuration of ConnectWise SSO Max length: 1000;
    """
    id: int | None = None
    """
    Unique identifier of the SSO Configuration
    """
    inactive_flag: Annotated[bool | None, Field(alias="inactiveFlag")] = None
    """
    Whether the SSO configuration is not active
    """
    is_sso_on_by_default: Annotated[bool | None, Field(alias="isSsoOnByDefault")] = None
    location_ids: Annotated[list[int], Field(alias="locationIds")]
    """
    The locations where the SAML Idp Configuration is used
    """
    name: str
    """
    Descriptor of the SSO Configuration Max length: 100;
    """
    saml_certificate_issued_to: Annotated[str | None, Field(alias="samlCertificateIssuedTo")] = None
    """
    Who the SAML certificate was issued to. Metadata on SAML_Idp_Certificate
    """
    saml_certificate_name: Annotated[str | None, Field(alias="samlCertificateName")] = None
    """
    Name of the SAML certificate. Metadata on SAML_Idp_Certificate
    """
    saml_certificate_thumbprint: Annotated[str | None, Field(alias="samlCertificateThumbprint")] = None
    """
    Thumbprint of the SAML certificate. Metadata on SAML_Idp_Certificate
    """
    saml_certificate_valid_from: Annotated[datetime | None, Field(alias="samlCertificateValidFrom")] = None
    """
    Date when the SAML certificate becomes valid. Metadata on SAML_Idp_Certificate
    """
    saml_certificate_valid_to: Annotated[datetime | None, Field(alias="samlCertificateValidTo")] = None
    """
    Date when the SAML certificate is no longer valid. Metadata on SAML_Idp_Certificate
    """
    saml_entity_id: Annotated[str | None, Field(alias="samlEntityId")] = None
    """
    SAML Identity Provider Id Max length: 1000;
    """
    saml_idp_certificate: Annotated[str | None, Field(alias="samlIdpCertificate")] = None
    """
    Public certificate for Identity Provider signatures
    """
    saml_sign_in_url: Annotated[str | None, Field(alias="samlSignInUrl")] = None
    """
    Sign in url for the SAML Identity Provider Max length: 1000;
    """
    sso_type: Annotated[Literal["CWSSO", "SAML"], Field(alias="ssoType")]
    """
    Type of SSO Configuration
    """
    sts_base_url: Annotated[str | None, Field(alias="stsBaseUrl")] = None
    """
    Sign in URL for ConnectWise SSO
    """
    sts_user_admin_url: Annotated[str | None, Field(alias="stsUserAdminUrl")] = None
    """
    User Admin Url for ConnectWise SSO
    """
    submitted_member_count: Annotated[int | None, Field(alias="submittedMemberCount")] = None
    token: str | None = None


class SsoUser(ConnectWiseModel):
    date_entered: Annotated[datetime | None, Field(alias="dateEntered")] = None
    disabled_flag: Annotated[bool | None, Field(alias="disabledFlag")] = None
    email: str | None = None
    email_confirmed: Annotated[bool | None, Field(alias="emailConfirmed")] = None
    first_name: Annotated[str | None, Field(alias="firstName")] = None
    id: int | None = None
    last_name: Annotated[str | None, Field(alias="lastName")] = None
    last_updated: Annotated[datetime | None, Field(alias="lastUpdated")] = None
    linked_flag: Annotated[bool | None, Field(alias="linkedFlag")] = None
    linked_member: Annotated[MemberReference | None, Field(alias="linkedMember")] = None
    sso_user_id: Annotated[str | None, Field(alias="ssoUserId")] = None
    user_name: Annotated[str | None, Field(alias="userName")] = None


class State(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    country: CountryReference | None = None
    id: int | None = None
    identifier: str
    """
     Max length: 50;
    """
    name: str
    """
     Max length: 50;
    """


class StateInfo(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    country: CountryReference | None = None
    id: int | None = None
    identifier: str | None = None
    name: str | None = None


class StateReference(CatalogItemReference):
    pass


class StatusIndicator(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    color: str | None = None
    icon: str | None = None
    id: int | None = None
    identifier: str | None = None
    name: str | None = None


class StatusIndicatorReference(CatalogItemReference):
    pass


class StructureReference(ActivityReference):
    pass


class SubCategory(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    category: ProductCategoryReference
    default_flag: Annotated[bool | None, Field(alias="defaultFlag")] = None
    id: int | None = None
    inactive_flag: Annotated[bool | None, Field(alias="inactiveFlag")] = None
    integration_xref: Annotated[str | None, Field(alias="integrationXref")] = None
    """
     Max length: 50;
    """
    name: str
    """
     Max length: 50;
    """


class SubCategoryInfo(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    category: ProductCategoryReference | None = None
    id: int | None = None
    inactive_flag: Annotated[bool | None, Field(alias="inactiveFlag")] = None
    name: str | None = None


class SuccessResponse(ConnectWiseModel):
    message: str | None = None
    success: bool | None = None


class Survey(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    inactive_flag: Annotated[bool | None, Field(alias="inactiveFlag")] = None
    instructions: str | None = None
    """
     Max length: 1000;
    """
    name: str
    """
     Max length: 50;
    """


class SurveyInfo(CategoryInfo):
    pass


class SurveyOption(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    caption: str
    """
     Max length: 100;
    """
    id: int | None = None
    points: int
    visibleflag: bool | None = None


class SurveyQuestionReference(ConfigurationTypeQuestionReference):
    pass


class SurveyReference(ActivityReference):
    pass


class SurveyResultDetail(ConnectWiseModel):
    answer: dict[str, Any] | None = None
    """
    If question type is Selection, this should be the option array index
    """
    question_id: Annotated[int | None, Field(alias="questionId")] = None


class SystemDepartmentReference(CatalogItemReference):
    pass


class SystemLocationReference(ActivityReference):
    pass


class SystemMenuEntryReference(ActivityReference):
    pass


class SystemSetting(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    description: str | None = None
    id: int | None = None
    value: str
    value_type: Annotated[str | None, Field(alias="valueType")] = None


class Task(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    child_schedule_action: Annotated[
        Literal["Transfer", "Delete", "Done"] | None, Field(alias="childScheduleAction")
    ] = None
    child_ticket_id: Annotated[int | None, Field(alias="childTicketId")] = None
    closed_flag: Annotated[bool | None, Field(alias="closedFlag")] = None
    code: ServiceCodeReference | None = None
    id: int | None = None
    notes: str | None = None
    priority: int | None = None
    resolution: str | None = None
    schedule: ScheduleEntryReference | None = None
    ticket_id: Annotated[int | None, Field(alias="ticketId")] = None


class TaxCode(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    add_all_expense_types: Annotated[bool | None, Field(alias="addAllExpenseTypes")] = None
    add_all_product_types: Annotated[bool | None, Field(alias="addAllProductTypes")] = None
    add_all_work_roles: Annotated[bool | None, Field(alias="addAllWorkRoles")] = None
    canada_calculate_gst_flag: Annotated[bool | None, Field(alias="canadaCalculateGSTFlag")] = None
    cancel_date: Annotated[datetime | None, Field(alias="cancelDate")] = None
    country: CountryReference | None = None
    default_flag: Annotated[bool | None, Field(alias="defaultFlag")] = None
    description: str
    """
     Max length: 50;
    """
    display_on_invoice_flag: Annotated[bool | None, Field(alias="displayOnInvoiceFlag")] = None
    effective_date: Annotated[datetime, Field(alias="effectiveDate")]
    expense_type_ids: Annotated[list[int] | None, Field(alias="expenseTypeIds")] = None
    """
    Array of expense type exemptions for the tax code
    """
    id: int | None = None
    identifier: str
    """
     Max length: 8;
    """
    invoice_caption: Annotated[str, Field(alias="invoiceCaption")]
    """
     Max length: 25;
    """
    level_five_agency_xref: Annotated[str | None, Field(alias="levelFiveAgencyXref")] = None
    """
     Max length: 100;
    """
    level_five_apply_single_unit_flag: Annotated[bool | None, Field(alias="levelFiveApplySingleUnitFlag")] = None
    level_five_apply_single_unit_max: Annotated[float | None, Field(alias="levelFiveApplySingleUnitMax")] = None
    level_five_apply_single_unit_min: Annotated[float | None, Field(alias="levelFiveApplySingleUnitMin")] = None
    level_five_caption: Annotated[str | None, Field(alias="levelFiveCaption")] = None
    """
     Max length: 25;
    """
    level_five_expenses_flag: Annotated[bool | None, Field(alias="levelFiveExpensesFlag")] = None
    level_five_products_flag: Annotated[bool | None, Field(alias="levelFiveProductsFlag")] = None
    level_five_rate: Annotated[float | None, Field(alias="levelFiveRate")] = None
    level_five_rate_type: Annotated[Literal["Amount", "Percent"] | None, Field(alias="levelFiveRateType")] = None
    level_five_services_flag: Annotated[bool | None, Field(alias="levelFiveServicesFlag")] = None
    level_five_tax_code_xref: Annotated[str | None, Field(alias="levelFiveTaxCodeXref")] = None
    """
     Max length: 50;
    """
    level_five_taxable_max: Annotated[float | None, Field(alias="levelFiveTaxableMax")] = None
    level_four_agency_xref: Annotated[str | None, Field(alias="levelFourAgencyXref")] = None
    """
     Max length: 100;
    """
    level_four_apply_single_unit_flag: Annotated[bool | None, Field(alias="levelFourApplySingleUnitFlag")] = None
    level_four_apply_single_unit_max: Annotated[float | None, Field(alias="levelFourApplySingleUnitMax")] = None
    level_four_apply_single_unit_min: Annotated[float | None, Field(alias="levelFourApplySingleUnitMin")] = None
    level_four_caption: Annotated[str | None, Field(alias="levelFourCaption")] = None
    """
     Max length: 25;
    """
    level_four_expenses_flag: Annotated[bool | None, Field(alias="levelFourExpensesFlag")] = None
    level_four_products_flag: Annotated[bool | None, Field(alias="levelFourProductsFlag")] = None
    level_four_rate: Annotated[float | None, Field(alias="levelFourRate")] = None
    level_four_rate_type: Annotated[Literal["Amount", "Percent"] | None, Field(alias="levelFourRateType")] = None
    level_four_services_flag: Annotated[bool | None, Field(alias="levelFourServicesFlag")] = None
    level_four_tax_code_xref: Annotated[str | None, Field(alias="levelFourTaxCodeXref")] = None
    """
     Max length: 50;
    """
    level_four_taxable_max: Annotated[float | None, Field(alias="levelFourTaxableMax")] = None
    level_one_agency_xref: Annotated[str | None, Field(alias="levelOneAgencyXref")] = None
    """
     Max length: 100;
    """
    level_one_apply_single_unit_flag: Annotated[bool | None, Field(alias="levelOneApplySingleUnitFlag")] = None
    level_one_apply_single_unit_max: Annotated[float | None, Field(alias="levelOneApplySingleUnitMax")] = None
    level_one_apply_single_unit_min: Annotated[float | None, Field(alias="levelOneApplySingleUnitMin")] = None
    level_one_caption: Annotated[str | None, Field(alias="levelOneCaption")] = None
    """
     Max length: 25;
    """
    level_one_expenses_flag: Annotated[bool | None, Field(alias="levelOneExpensesFlag")] = None
    level_one_products_flag: Annotated[bool | None, Field(alias="levelOneProductsFlag")] = None
    level_one_rate: Annotated[float | None, Field(alias="levelOneRate")] = None
    level_one_rate_type: Annotated[Literal["Amount", "Percent"] | None, Field(alias="levelOneRateType")] = None
    level_one_services_flag: Annotated[bool | None, Field(alias="levelOneServicesFlag")] = None
    level_one_tax_code_xref: Annotated[str | None, Field(alias="levelOneTaxCodeXref")] = None
    """
     Max length: 50;
    """
    level_one_taxable_max: Annotated[float | None, Field(alias="levelOneTaxableMax")] = None
    level_six_agency_xref: Annotated[str | None, Field(alias="levelSixAgencyXref")] = None
    """
     Max length: 100;
    """
    level_six_apply_single_unit_flag: Annotated[bool | None, Field(alias="levelSixApplySingleUnitFlag")] = None
    level_six_apply_single_unit_max: Annotated[float | None, Field(alias="levelSixApplySingleUnitMax")] = None
    level_six_apply_single_unit_min: Annotated[float | None, Field(alias="levelSixApplySingleUnitMin")] = None
    level_six_caption: Annotated[str | None, Field(alias="levelSixCaption")] = None
    """
     Max length: 25;
    """
    level_six_expenses_flag: Annotated[bool | None, Field(alias="levelSixExpensesFlag")] = None
    level_six_products_flag: Annotated[bool | None, Field(alias="levelSixProductsFlag")] = None
    level_six_rate: Annotated[float | None, Field(alias="levelSixRate")] = None
    level_six_rate_type: Annotated[Literal["Amount", "Percent"] | None, Field(alias="levelSixRateType")] = None
    level_six_services_flag: Annotated[bool | None, Field(alias="levelSixServicesFlag")] = None
    level_six_tax_code_xref: Annotated[str | None, Field(alias="levelSixTaxCodeXref")] = None
    """
     Max length: 50;
    """
    level_six_taxable_max: Annotated[float | None, Field(alias="levelSixTaxableMax")] = None
    level_three_agency_xref: Annotated[str | None, Field(alias="levelThreeAgencyXref")] = None
    """
     Max length: 100;
    """
    level_three_apply_single_unit_flag: Annotated[bool | None, Field(alias="levelThreeApplySingleUnitFlag")] = None
    level_three_apply_single_unit_max: Annotated[float | None, Field(alias="levelThreeApplySingleUnitMax")] = None
    level_three_apply_single_unit_min: Annotated[float | None, Field(alias="levelThreeApplySingleUnitMin")] = None
    level_three_caption: Annotated[str | None, Field(alias="levelThreeCaption")] = None
    """
     Max length: 25;
    """
    level_three_expenses_flag: Annotated[bool | None, Field(alias="levelThreeExpensesFlag")] = None
    level_three_products_flag: Annotated[bool | None, Field(alias="levelThreeProductsFlag")] = None
    level_three_rate: Annotated[float | None, Field(alias="levelThreeRate")] = None
    level_three_rate_type: Annotated[Literal["Amount", "Percent"] | None, Field(alias="levelThreeRateType")] = None
    level_three_services_flag: Annotated[bool | None, Field(alias="levelThreeServicesFlag")] = None
    level_three_tax_code_xref: Annotated[str | None, Field(alias="levelThreeTaxCodeXref")] = None
    """
     Max length: 50;
    """
    level_three_taxable_max: Annotated[float | None, Field(alias="levelThreeTaxableMax")] = None
    level_two_agency_xref: Annotated[str | None, Field(alias="levelTwoAgencyXref")] = None
    """
     Max length: 100;
    """
    level_two_apply_single_unit_flag: Annotated[bool | None, Field(alias="levelTwoApplySingleUnitFlag")] = None
    level_two_apply_single_unit_max: Annotated[float | None, Field(alias="levelTwoApplySingleUnitMax")] = None
    level_two_apply_single_unit_min: Annotated[float | None, Field(alias="levelTwoApplySingleUnitMin")] = None
    level_two_caption: Annotated[str | None, Field(alias="levelTwoCaption")] = None
    """
     Max length: 25;
    """
    level_two_expenses_flag: Annotated[bool | None, Field(alias="levelTwoExpensesFlag")] = None
    level_two_products_flag: Annotated[bool | None, Field(alias="levelTwoProductsFlag")] = None
    level_two_rate: Annotated[float | None, Field(alias="levelTwoRate")] = None
    level_two_rate_type: Annotated[Literal["Amount", "Percent"] | None, Field(alias="levelTwoRateType")] = None
    level_two_services_flag: Annotated[bool | None, Field(alias="levelTwoServicesFlag")] = None
    level_two_tax_code_xref: Annotated[str | None, Field(alias="levelTwoTaxCodeXref")] = None
    """
     Max length: 50;
    """
    level_two_taxable_max: Annotated[float | None, Field(alias="levelTwoTaxableMax")] = None
    product_type_ids: Annotated[list[int] | None, Field(alias="productTypeIds")] = None
    """
    Array of product type exemptions for the tax code
    """
    remove_all_expense_types: Annotated[bool | None, Field(alias="removeAllExpenseTypes")] = None
    remove_all_product_types: Annotated[bool | None, Field(alias="removeAllProductTypes")] = None
    remove_all_work_roles: Annotated[bool | None, Field(alias="removeAllWorkRoles")] = None
    work_role_ids: Annotated[list[int] | None, Field(alias="workRoleIds")] = None
    """
    Array of work role exemptions for the tax code
    """


class TaxCodeInfo(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    cancel_date: Annotated[datetime | None, Field(alias="cancelDate")] = None
    description: str | None = None
    effective_date: Annotated[datetime | None, Field(alias="effectiveDate")] = None
    id: int | None = None
    identifier: str | None = None


class TaxCodeLevel(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    agency_xref: Annotated[str | None, Field(alias="agencyXref")] = None
    """
     Max length: 100;
    """
    caption: str | None = None
    """
     Max length: 25;
    """
    id: int | None = None
    rate_type: Annotated[Literal["Amount", "Percent"], Field(alias="rateType")]
    single_unit_flag: Annotated[bool | None, Field(alias="singleUnitFlag")] = None
    single_unit_maximum: Annotated[float | None, Field(alias="singleUnitMaximum")] = None
    single_unit_minimum: Annotated[float | None, Field(alias="singleUnitMinimum")] = None
    tax_code_xref: Annotated[str | None, Field(alias="taxCodeXref")] = None
    """
     Max length: 50;
    """
    tax_expenses_flag: Annotated[bool | None, Field(alias="taxExpensesFlag")] = None
    tax_level: Annotated[int | None, Field(alias="taxLevel")] = None
    tax_products_flag: Annotated[bool | None, Field(alias="taxProductsFlag")] = None
    tax_rate: Annotated[float, Field(alias="taxRate")]
    tax_services_flag: Annotated[bool | None, Field(alias="taxServicesFlag")] = None
    taxable_max: Annotated[float | None, Field(alias="taxableMax")] = None


class TaxCodeLevelReference(ActivityReference):
    pass


class TaxCodeReference(ActivityReference):
    pass


class TaxCodeXRef(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    default_flag: Annotated[bool | None, Field(alias="defaultFlag")] = None
    description: str
    """
     Max length: 50;
    """
    id: int | None = None
    level_five: Annotated[Literal["NonTaxable", "Taxable"] | None, Field(alias="levelFive")] = None
    level_four: Annotated[Literal["NonTaxable", "Taxable"] | None, Field(alias="levelFour")] = None
    level_one: Annotated[Literal["NonTaxable", "Taxable"] | None, Field(alias="levelOne")] = None
    level_six: Annotated[Literal["NonTaxable", "Taxable"] | None, Field(alias="levelSix")] = None
    level_three: Annotated[Literal["NonTaxable", "Taxable"] | None, Field(alias="levelThree")] = None
    level_two: Annotated[Literal["NonTaxable", "Taxable"] | None, Field(alias="levelTwo")] = None
    tax_code: Annotated[TaxCodeReference | None, Field(alias="taxCode")] = None
    taxable_levels: Annotated[list[int] | None, Field(alias="taxableLevels")] = None


class TaxIntegration(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    account_number: Annotated[str | None, Field(alias="accountNumber")] = None
    """
     Max length: 50;
    """
    accounting_integration_flag: Annotated[bool | None, Field(alias="accountingIntegrationFlag")] = None
    commit_transactions_flag: Annotated[bool | None, Field(alias="commitTransactionsFlag")] = None
    company_code: Annotated[str | None, Field(alias="companyCode")] = None
    """
     Max length: 50;
    """
    enabled_flag: Annotated[bool | None, Field(alias="enabledFlag")] = None
    expense_tax_code: Annotated[str | None, Field(alias="expenseTaxCode")] = None
    """
     Max length: 50;
    """
    freight_tax_code: Annotated[str | None, Field(alias="freightTaxCode")] = None
    """
     Max length: 50;
    """
    id: int | None = None
    invoice_amount_tax_code: Annotated[str | None, Field(alias="invoiceAmountTaxCode")] = None
    """
     Max length: 50;
    """
    license_key: Annotated[str | None, Field(alias="licenseKey")] = None
    """
     Max length: 50;
    """
    product_tax_code: Annotated[str | None, Field(alias="productTaxCode")] = None
    """
     Max length: 50;
    """
    sales_invoice_flag: Annotated[bool | None, Field(alias="salesInvoiceFlag")] = None
    service_url: Annotated[str | None, Field(alias="serviceUrl")] = None
    """
     Max length: 250;
    """
    tax_integration_type: Annotated[Literal["Avalara"] | None, Field(alias="taxIntegrationType")] = None
    tax_line_flag: Annotated[bool | None, Field(alias="taxLineFlag")] = None
    time_tax_code: Annotated[str | None, Field(alias="timeTaxCode")] = None
    """
     Max length: 50;
    """


class TaxIntegrationInfo(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    enabled_flag: Annotated[bool | None, Field(alias="enabledFlag")] = None
    id: int | None = None
    tax_integration_type: Annotated[Literal["Avalara"] | None, Field(alias="taxIntegrationType")] = None


class TaxableExpenseTypeLevel(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    tax_code_level: Annotated[TaxCodeLevelReference | None, Field(alias="taxCodeLevel")] = None


class TaxableProductTypeLevel(TaxableExpenseTypeLevel):
    pass


class TaxableWorkRoleLevel(TaxableExpenseTypeLevel):
    pass


class TaxableXRefLevel(TaxableExpenseTypeLevel):
    pass


class Team(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    commission_percent: Annotated[int | None, Field(alias="commissionPercent")] = None
    id: int | None = None
    member: MemberReference | None = None
    opportunity_id: Annotated[int | None, Field(alias="opportunityId")] = None
    referral_flag: Annotated[bool | None, Field(alias="referralFlag")] = None
    responsible_flag: Annotated[bool | None, Field(alias="responsibleFlag")] = None
    sales_team: Annotated[SalesTeamReference | None, Field(alias="salesTeam")] = None
    type: Literal["Individual", "Team"]


class TeamMember(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    board: BoardReference | None = None
    id: int | None = None
    member: MemberReference | None = None
    team: ServiceTeamReference | None = None
    team_leader_flag: Annotated[bool | None, Field(alias="teamLeaderFlag")] = None


class TeamRole(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    account_manager_flag: Annotated[bool | None, Field(alias="accountManagerFlag")] = None
    id: int | None = None
    name: str
    """
     Max length: 20;
    """
    sales_flag: Annotated[bool | None, Field(alias="salesFlag")] = None
    tech_flag: Annotated[bool | None, Field(alias="techFlag")] = None


class TeamRoleInfo(ActivityReference):
    pass


class TeamRoleReference(ActivityReference):
    pass


class TemplateGeneratedCountsModel(ConnectWiseModel):
    schedule_count: Annotated[int | None, Field(alias="scheduleCount")] = None
    service_count: Annotated[int | None, Field(alias="serviceCount")] = None


class TicketBundle(ConnectWiseModel):
    child_ticket_ids: Annotated[list[int] | None, Field(alias="childTicketIds")] = None


class TicketInfo(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    company: CompanyReference | None = None
    id: int | None = None
    summary: str | None = None


class TicketMerge(ConnectWiseModel):
    merge_ticket_ids: Annotated[list[int], Field(alias="mergeTicketIds")]
    status: ServiceStatusReference | None = None


class TicketNote(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    contact: ContactReference | None = None
    customer_updated_flag: Annotated[bool | None, Field(alias="customerUpdatedFlag")] = None
    detail_description_flag: Annotated[bool | None, Field(alias="detailDescriptionFlag")] = None
    external_flag: Annotated[bool | None, Field(alias="externalFlag")] = None
    id: int | None = None
    internal_analysis_flag: Annotated[bool | None, Field(alias="internalAnalysisFlag")] = None
    internal_flag: Annotated[bool | None, Field(alias="internalFlag")] = None
    issue_flag: Annotated[bool | None, Field(alias="issueFlag")] = None
    member: MemberReference | None = None
    process_notifications: Annotated[bool | None, Field(alias="processNotifications")] = None
    resolution_flag: Annotated[bool | None, Field(alias="resolutionFlag")] = None
    text: str | None = None
    ticket_id: Annotated[int | None, Field(alias="ticketId")] = None


class TicketReference(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    summary: str | None = None


class TicketSync(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    company: CompanyReference | None = None
    id: int | None = None
    integrator_login: Annotated[IntegratorLoginReference | None, Field(alias="integratorLogin")] = None
    internal_analysis_flag: Annotated[bool | None, Field(alias="internalAnalysisFlag")] = None
    name: str
    """
     Max length: 80;
    """
    password: str | None = None
    problem_description_flag: Annotated[bool | None, Field(alias="problemDescriptionFlag")] = None
    psg: str | None = None
    resolution_flag: Annotated[bool | None, Field(alias="resolutionFlag")] = None
    url: str
    user_name: Annotated[str | None, Field(alias="userName")] = None
    vendor_type: Annotated[Literal["Zenith"], Field(alias="vendorType")]


class TicketTask(Task):
    pass


class TimeAccrual(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    holiday_available_type: Annotated[
        Literal["AnniversaryYear", "CalendarYear"] | None, Field(alias="holidayAvailableType")
    ] = None
    holiday_carryover_allowed_flag: Annotated[bool | None, Field(alias="holidayCarryoverAllowedFlag")] = None
    holiday_carryover_limit: Annotated[float | None, Field(alias="holidayCarryoverLimit")] = None
    holiday_flag: Annotated[bool | None, Field(alias="holidayFlag")] = None
    """
    if holidayFlag is set to false, system will clear out or ignore the values of holidayAvailableType, holidayCarryoverAllowedFlag, holidayCarryoverLimit
    """
    id: int | None = None
    location: SystemLocationReference | None = None
    pto_available_type: Annotated[
        Literal["AnniversaryYear", "CalendarYear"] | None, Field(alias="ptoAvailableType")
    ] = None
    pto_carryover_allowed_flag: Annotated[bool | None, Field(alias="ptoCarryoverAllowedFlag")] = None
    pto_carryover_limit: Annotated[float | None, Field(alias="ptoCarryoverLimit")] = None
    pto_flag: Annotated[bool | None, Field(alias="ptoFlag")] = None
    """
    if ptoFlag is set to false, system will clear out or ignore the values of ptoAvailableType, ptoCarryoverAllowedFlag, ptoCarryoverLimit
    """
    sick_available_type: Annotated[
        Literal["AnniversaryYear", "CalendarYear"] | None, Field(alias="sickAvailableType")
    ] = None
    sick_carryover_allowed_flag: Annotated[bool | None, Field(alias="sickCarryoverAllowedFlag")] = None
    sick_carryover_limit: Annotated[float | None, Field(alias="sickCarryoverLimit")] = None
    sick_flag: Annotated[bool | None, Field(alias="sickFlag")] = None
    """
    if sickFlag is set to false, system will clear out or ignore the values of sickAvailableType, sickCarryoverAllowedFlag, sickCarryoverLimit
    """
    vacation_available_type: Annotated[
        Literal["AnniversaryYear", "CalendarYear"] | None, Field(alias="vacationAvailableType")
    ] = None
    vacation_carryover_allowed_flag: Annotated[bool | None, Field(alias="vacationCarryoverAllowedFlag")] = None
    vacation_carryover_limit: Annotated[float | None, Field(alias="vacationCarryoverLimit")] = None
    vacation_flag: Annotated[bool | None, Field(alias="vacationFlag")] = None
    """
    if vacationFlag is set to false, system will clear out or ingore the values of vacationAvailableType, vacationCarryoverAllowedFlag, vacationCarryoverLimit
    """


class TimeAccrualReference(ActivityReference):
    pass


class TimeEntryAudit(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    member: MemberReference | None = None
    message: str | None = None
    new_value: Annotated[str | None, Field(alias="newValue")] = None
    old_value: Annotated[str | None, Field(alias="oldValue")] = None
    source: Literal[
        "None",
        "Member",
        "API",
        "Workflow",
        "Portal",
        "Mobile",
        "Network",
        "EmailConnector",
        "MassMaintenance",
        "Application",
        "SystemAPI",
        "Conversion",
    ] | None = None
    type: Literal[
        "Activity",
        "CloseDate",
        "Company",
        "Contact",
        "Conversion",
        "Document",
        "Forecast",
        "Note",
        "Notes",
        "Opportunity",
        "Products",
        "Stage",
        "Status",
        "Surveys",
        "Team",
        "Tracks",
        "Configuration",
        "ConfigurationQuestions",
        "DeviceBackupDetails",
        "Tickets",
        "Subject",
        "ActivityOverview",
        "Schedule",
        "Resources",
        "ExpenseEntry",
        "Member",
        "Date",
        "Classification",
        "Amount",
        "ExpenseType",
        "WorkType",
        "WorkRole",
        "Mileage",
        "Billing",
        "ExpenseHeader",
        "Project",
        "TimeEntry",
        "TicketStatus",
        "DateTime",
        "DeductHours",
        "ActualHours",
        "Invoice",
        "CompanyFinance",
        "Billable",
        "SalesOrder",
        "Shipping",
        "Profile",
        "Group",
        "GroupContact",
        "GroupCompany",
        "Options",
        "Site",
        "Agreement",
        "Addition",
        "Adjustment",
        "API",
        "ProjectFinance",
        "CompanyProfile",
        "CompanyTeam",
        "CompanyMgmt",
        "InvoiceTotal",
        "BillingInformation",
        "ShippingInformation",
        "BillingStatus",
        "Location",
        "Department",
        "Territory",
        "Payment",
        "Credit",
        "SubcontractorInformation",
        "InvoicingParameters",
        "ApplicationParameters",
        "Finance",
        "Invoicing",
        "Email",
        "Batching",
        "KnowledgeBase",
        "KbArticle",
        "KnowledgeBaseApproval",
        "KnowledgeBaseTicket",
        "ManageNetwork",
        "Tasks",
        "CustomField",
        "ScreenConnect",
        "SLA",
        "Ticket",
        "Workflow",
        "Record",
        "CombinedTickets",
        "Template",
        "PurchaseOrder",
        "Meeting",
        "RmaOverview",
        "ReturnedBy",
        "PurchasedFromVendor",
        "WarrantyVendor",
        "RepairVendor",
        "AdditionalDetails",
        "TicketTemplate",
        "AutoGeneration",
        "TimeInternalNote",
        "TimeDiscussion",
        "TimeInternal",
        "TimeResolution",
    ] | None = None
    value: str | None = None


class TimeEntryReference(CalendarSetupReference):
    pass


class TimeExpense(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    default_special_invoice_type: Annotated[
        Literal["Agreement", "CreditMemo", "DownPayment", "Miscellaneous", "Progress", "Standard"] | None,
        Field(alias="defaultSpecialInvoiceType"),
    ] = None
    disable_time_entry_flag: Annotated[bool | None, Field(alias="disableTimeEntryFlag")] = None
    id: int | None = None
    internal_company: Annotated[CompanyReference | None, Field(alias="internalCompany")] = None
    invoice_start: Annotated[int | None, Field(alias="invoiceStart")] = None
    require_expense_note_flag: Annotated[bool | None, Field(alias="requireExpenseNoteFlag")] = None
    require_time_note_flag: Annotated[bool | None, Field(alias="requireTimeNoteFlag")] = None
    rounding_factor: Annotated[float | None, Field(alias="roundingFactor")] = None
    tier1_approval_flag: Annotated[bool | None, Field(alias="tier1ApprovalFlag")] = None
    tier2_approval_flag: Annotated[bool | None, Field(alias="tier2ApprovalFlag")] = None


class TimePeriodSetup(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    days_past_end_date: Annotated[int, Field(alias="daysPastEndDate")]
    description: str | None = None
    """
     Max length: 100;
    """
    first_period_end_date: Annotated[date, Field(alias="firstPeriodEndDate")]
    id: int | None = None
    last_day_flag: Annotated[bool | None, Field(alias="lastDayFlag")] = None
    """
    Only needed when type is monthly
    """
    monthly_period_ends: Annotated[int | None, Field(alias="monthlyPeriodEnds")] = None
    """
    Only needed when type is monthly
    """
    number_future_periods: Annotated[int, Field(alias="numberFuturePeriods")]
    period_apply_to: Annotated[Literal["Both", "Expense", "Time"], Field(alias="periodApplyTo")]
    semi_monthly_first_period: Annotated[int | None, Field(alias="semiMonthlyFirstPeriod")] = None
    """
    Only needed when type is semi-monthly
    """
    semi_monthly_last_day_flag: Annotated[bool | None, Field(alias="semiMonthlyLastDayFlag")] = None
    semi_monthly_second_period: Annotated[int | None, Field(alias="semiMonthlySecondPeriod")] = None
    """
    Only needed when type is semi-monthly
    """
    type: Literal["Weekly", "BiWeekly", "SemiMonthly", "Monthly"]
    year: int


class TimePeriodSetupDefaults(GLExportSettings):
    pass


class TimePeriodSetupReference(CalendarSetupReference):
    pass


class TimeRevenueReference(AgreementRevenueReference):
    pass


class TimeSheet(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    date_end: Annotated[datetime | None, Field(alias="dateEnd")] = None
    date_start: Annotated[datetime | None, Field(alias="dateStart")] = None
    deadline: datetime | None = None
    hours: float | None = None
    id: int | None = None
    member: MemberReference | None = None
    period: int | None = None
    status: Literal[
        "Open",
        "Rejected",
        "PendingApproval",
        "ErrorsCorrected",
        "PendingProjectApproval",
        "ApprovedByTierOne",
        "RejectBySecondTier",
        "ApprovedByTierTwo",
        "ReadyToBill",
        "Billed",
        "WrittenOff",
        "BilledAgreement",
    ] | None = None
    year: int | None = None


class TimeSheetAudit(TimeEntryAudit):
    pass


class TimeSheetReference(ActivityReference):
    pass


class TimeSheetTierUpdate(ConnectWiseModel):
    approval_type: Annotated[
        Literal[
            "DataEntry",
            "Tier1Update",
            "Tier2Update",
            "Billing",
            "Service",
            "Project",
            "MonthlySummary",
            "SalesActivity",
            "Schedule",
        ]
        | None,
        Field(alias="approvalType"),
    ] = None
    id: int | None = None


class TimeZoneReference(ActivityReference):
    pass


class TimeZoneSetup(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    daylight_savings_flag: Annotated[bool | None, Field(alias="daylightSavingsFlag")] = None
    """
    Determined based on system library value for specified timeZone.
                Not able to be used in query params at this time
    """
    default_flag: Annotated[bool | None, Field(alias="defaultFlag")] = None
    """
    Identifies the default system time zone setup
    """
    id: int | None = None
    name: str
    """
     Max length: 50;
    """
    offset: float | None = None
    """
    The hours offset from UTC (+/-)
    """
    time_zone: Annotated[TimeZoneReference | None, Field(alias="timeZone")] = None


class TimeZoneSetupInfo(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    name: str | None = None
    offset: float | None = None


class TimeZoneSetupReference(ActivityReference):
    pass


class TodayPageCategory(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    location: SystemLocationReference | None = None
    name: str
    """
     Max length: 30;
    """
    sort_order: Annotated[int, Field(alias="sortOrder")]


class Token(ConnectWiseModel):
    expiration: str | None = None
    private_key: Annotated[str | None, Field(alias="privateKey")] = None
    public_key: Annotated[str | None, Field(alias="publicKey")] = None


class Track(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    inactive_flag: Annotated[bool | None, Field(alias="inactiveFlag")] = None
    name: str
    """
     Max length: 100;
    """
    notify_action_ids: Annotated[list[int] | None, Field(alias="notifyActionIds")] = None


class TrackReference(ActivityReference):
    pass


class TypeCampaignSubType(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    name: str | None = None
    type_id: Annotated[int | None, Field(alias="typeId")] = None


class UnitOfMeasure(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    default_flag: Annotated[bool | None, Field(alias="defaultFlag")] = None
    id: int | None = None
    inactive_flag: Annotated[bool | None, Field(alias="inactiveFlag")] = None
    name: str
    """
     Max length: 50;
    """
    uom_schedule_xref: Annotated[str | None, Field(alias="uomScheduleXref")] = None
    """
     Max length: 31;
    """


class UnitOfMeasureReference(ActivityReference):
    pass


class UnpostedExpense(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    account_number: Annotated[str | None, Field(alias="accountNumber")] = None
    agreement: AgreementReference | None = None
    agreement_amount_covered: Annotated[float | None, Field(alias="agreementAmountCovered")] = None
    avalara_tax_flag: Annotated[bool | None, Field(alias="avalaraTaxFlag")] = None
    """
    Used to determine if Avalara tax is enabled.
    """
    billable_amount: Annotated[float | None, Field(alias="billableAmount")] = None
    charge_code: Annotated[ChargeCodeReference | None, Field(alias="chargeCode")] = None
    charge_description: Annotated[str | None, Field(alias="chargeDescription")] = None
    city_tax_amount: Annotated[float | None, Field(alias="cityTaxAmount")] = None
    city_tax_flag: Annotated[bool | None, Field(alias="cityTaxFlag")] = None
    """
    Set to true if transaction is taxable at the city level.
    """
    city_tax_xref: Annotated[str | None, Field(alias="cityTaxXref")] = None
    classification: Literal["NonReimbursable", "Reimbursable", "Personal"] | None = None
    company: CompanyReference | None = None
    composite_tax_amount: Annotated[float | None, Field(alias="compositeTaxAmount")] = None
    composite_tax_flag: Annotated[bool | None, Field(alias="compositeTaxFlag")] = None
    """
    Set to true if transaction is taxable at the composite level.
    """
    composite_tax_xref: Annotated[str | None, Field(alias="compositeTaxXref")] = None
    country_tax_amount: Annotated[float | None, Field(alias="countryTaxAmount")] = None
    country_tax_flag: Annotated[bool | None, Field(alias="countryTaxFlag")] = None
    """
    Set to true if transaction is taxable at the country level.
    """
    country_tax_xref: Annotated[str | None, Field(alias="countryTaxXref")] = None
    county_tax_amount: Annotated[float | None, Field(alias="countyTaxAmount")] = None
    county_tax_flag: Annotated[bool | None, Field(alias="countyTaxFlag")] = None
    """
    Set to true if transaction is taxable at the county level.
    """
    county_tax_xref: Annotated[str | None, Field(alias="countyTaxXref")] = None
    credit_account: Annotated[str | None, Field(alias="creditAccount")] = None
    currency: CurrencyReference | None = None
    date_closed: Annotated[datetime | None, Field(alias="dateClosed")] = None
    date_expense: Annotated[datetime | None, Field(alias="dateExpense")] = None
    department_id: Annotated[int | None, Field(alias="departmentId")] = None
    expense_detail_id: Annotated[int | None, Field(alias="expenseDetailId")] = None
    expense_type: Annotated[ExpenseTypeReference | None, Field(alias="expenseType")] = None
    gl_type: Annotated[
        Literal[
            "AP",
            "AR",
            "EE",
            "EI",
            "EO",
            "IA",
            "IT",
            "P",
            "PF",
            "R",
            "RA",
            "RD",
            "RE",
            "RP",
            "ST",
            "SD",
            "ET",
            "FT",
            "PT",
        ]
        | None,
        Field(alias="glType"),
    ] = None
    id: int | None = None
    in_policy: Annotated[bool | None, Field(alias="inPolicy")] = None
    item_taxable_flag: Annotated[bool | None, Field(alias="itemTaxableFlag")] = None
    level_six_tax_amount: Annotated[float | None, Field(alias="levelSixTaxAmount")] = None
    level_six_tax_flag: Annotated[bool | None, Field(alias="levelSixTaxFlag")] = None
    """
    Set to true if transaction is taxable at level six.
    """
    level_six_tax_xref: Annotated[str | None, Field(alias="levelSixTaxXref")] = None
    location_id: Annotated[int | None, Field(alias="locationId")] = None
    member: MemberReference | None = None
    non_billable_amount: Annotated[float | None, Field(alias="nonBillableAmount")] = None
    payment_method: Annotated[PaymentMethodReference | None, Field(alias="paymentMethod")] = None
    project: ProjectReference | None = None
    project_phase: Annotated[ProjectPhaseReference | None, Field(alias="projectPhase")] = None
    sales_tax_amount: Annotated[float | None, Field(alias="salesTaxAmount")] = None
    state_tax_amount: Annotated[float | None, Field(alias="stateTaxAmount")] = None
    state_tax_flag: Annotated[bool | None, Field(alias="stateTaxFlag")] = None
    """
    Set to true if transaction is taxable at the state level.
    """
    state_tax_xref: Annotated[str | None, Field(alias="stateTaxXref")] = None
    tax_code: Annotated[TaxCodeReference | None, Field(alias="taxCode")] = None
    ticket: TicketReference | None = None
    total: float | None = None


class UnpostedExpenseTaxableLevel(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    tax_amount: Annotated[float | None, Field(alias="taxAmount")] = None
    tax_code_xref: Annotated[str | None, Field(alias="taxCodeXref")] = None
    tax_level: Annotated[int | None, Field(alias="taxLevel")] = None


class UnpostedInvoice(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    account_number: Annotated[str | None, Field(alias="accountNumber")] = None
    avalara_tax_flag: Annotated[bool | None, Field(alias="avalaraTaxFlag")] = None
    """
    Used to determine if Avalara tax is enabled.
    """
    bill_to_company: Annotated[CompanyReference | None, Field(alias="billToCompany")] = None
    bill_to_site: Annotated[SiteReference | None, Field(alias="billToSite")] = None
    billing_log_id: Annotated[int | None, Field(alias="billingLogId")] = None
    billing_terms: Annotated[BillingTermsReference | None, Field(alias="billingTerms")] = None
    city_tax_amount: Annotated[float | None, Field(alias="cityTaxAmount")] = None
    city_tax_flag: Annotated[bool | None, Field(alias="cityTaxFlag")] = None
    """
    Set to true if transaction is taxable at the city level.
    """
    city_tax_xref: Annotated[str | None, Field(alias="cityTaxXref")] = None
    company: CompanyReference | None = None
    composite_tax_amount: Annotated[float | None, Field(alias="compositeTaxAmount")] = None
    composite_tax_flag: Annotated[bool | None, Field(alias="compositeTaxFlag")] = None
    """
    Set to true if transaction is taxable at the composite level.
    """
    composite_tax_xref: Annotated[str | None, Field(alias="compositeTaxXref")] = None
    country_tax_amount: Annotated[float | None, Field(alias="countryTaxAmount")] = None
    country_tax_flag: Annotated[bool | None, Field(alias="countryTaxFlag")] = None
    """
    Set to true if transaction is taxable at the country level.
    """
    country_tax_xref: Annotated[str | None, Field(alias="countryTaxXref")] = None
    county_tax_amount: Annotated[float | None, Field(alias="countyTaxAmount")] = None
    county_tax_flag: Annotated[bool | None, Field(alias="countyTaxFlag")] = None
    """
    Set to true if transaction is taxable at the county level.
    """
    county_tax_xref: Annotated[str | None, Field(alias="countyTaxXref")] = None
    created_by: Annotated[str | None, Field(alias="createdBy")] = None
    currency: CurrencyReference | None = None
    date_closed: Annotated[datetime | None, Field(alias="dateClosed")] = None
    department_id: Annotated[int | None, Field(alias="departmentId")] = None
    description: str | None = None
    due_date: Annotated[datetime | None, Field(alias="dueDate")] = None
    due_days: Annotated[str | None, Field(alias="dueDays")] = None
    id: int | None = None
    invoice_date: Annotated[datetime | None, Field(alias="invoiceDate")] = None
    invoice_number: Annotated[str | None, Field(alias="invoiceNumber")] = None
    invoice_taxable_flag: Annotated[bool | None, Field(alias="invoiceTaxableFlag")] = None
    invoice_type: Annotated[
        Literal["Agreement", "CreditMemo", "DownPayment", "Miscellaneous", "Progress", "Standard"] | None,
        Field(alias="invoiceType"),
    ] = None
    item_taxable_flag: Annotated[bool | None, Field(alias="itemTaxableFlag")] = None
    level_six_tax_amount: Annotated[float | None, Field(alias="levelSixTaxAmount")] = None
    level_six_tax_flag: Annotated[bool | None, Field(alias="levelSixTaxFlag")] = None
    """
    Set to true if transaction is taxable at level six.
    """
    level_six_tax_xref: Annotated[str | None, Field(alias="levelSixTaxXref")] = None
    location_id: Annotated[int | None, Field(alias="locationId")] = None
    sales_tax_amount: Annotated[float | None, Field(alias="salesTaxAmount")] = None
    ship_to_company: Annotated[CompanyReference | None, Field(alias="shipToCompany")] = None
    ship_to_site: Annotated[SiteReference | None, Field(alias="shipToSite")] = None
    state_tax_amount: Annotated[float | None, Field(alias="stateTaxAmount")] = None
    state_tax_flag: Annotated[bool | None, Field(alias="stateTaxFlag")] = None
    """
    Set to true if transaction is taxable at the state level.
    """
    state_tax_xref: Annotated[str | None, Field(alias="stateTaxXref")] = None
    sub_total: Annotated[float | None, Field(alias="subTotal")] = None
    tax_code: Annotated[TaxCodeReference | None, Field(alias="taxCode")] = None
    total: float | None = None


class UnpostedInvoiceTaxableLevel(UnpostedExpenseTaxableLevel):
    pass


class UnpostedProcurement(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    avalara_tax_flag: Annotated[bool | None, Field(alias="avalaraTaxFlag")] = None
    """
    Used to determine if Avalara tax is enabled.
    """
    billing_terms: Annotated[BillingTermsReference | None, Field(alias="billingTerms")] = None
    city_tax_amount: Annotated[float | None, Field(alias="cityTaxAmount")] = None
    city_tax_flag: Annotated[bool | None, Field(alias="cityTaxFlag")] = None
    """
    Set to true if transaction is taxable at the city level.
    """
    city_tax_xref: Annotated[str | None, Field(alias="cityTaxXref")] = None
    composite_tax_amount: Annotated[float | None, Field(alias="compositeTaxAmount")] = None
    composite_tax_flag: Annotated[bool | None, Field(alias="compositeTaxFlag")] = None
    """
    Set to true if transaction is taxable at the composite level.
    """
    composite_tax_xref: Annotated[str | None, Field(alias="compositeTaxXref")] = None
    country_tax_amount: Annotated[float | None, Field(alias="countryTaxAmount")] = None
    country_tax_flag: Annotated[bool | None, Field(alias="countryTaxFlag")] = None
    """
    Set to true if transaction is taxable at the country level.
    """
    country_tax_xref: Annotated[str | None, Field(alias="countryTaxXref")] = None
    county_tax_amount: Annotated[float | None, Field(alias="countyTaxAmount")] = None
    county_tax_flag: Annotated[bool | None, Field(alias="countyTaxFlag")] = None
    """
    Set to true if transaction is taxable at the county level.
    """
    county_tax_xref: Annotated[str | None, Field(alias="countyTaxXref")] = None
    currency: CurrencyReference | None = None
    customer: CompanyReference | None = None
    date_closed: Annotated[datetime | None, Field(alias="dateClosed")] = None
    department_id: Annotated[int | None, Field(alias="departmentId")] = None
    description: str | None = None
    freight_cost: Annotated[float | None, Field(alias="freightCost")] = None
    freight_tax_total: Annotated[float | None, Field(alias="freightTaxTotal")] = None
    id: int | None = None
    item_taxable_flag: Annotated[bool | None, Field(alias="itemTaxableFlag")] = None
    level_six_tax_amount: Annotated[float | None, Field(alias="levelSixTaxAmount")] = None
    level_six_tax_flag: Annotated[bool | None, Field(alias="levelSixTaxFlag")] = None
    """
    Set to true if transaction is taxable at level six.
    """
    level_six_tax_xref: Annotated[str | None, Field(alias="levelSixTaxXref")] = None
    location_id: Annotated[int | None, Field(alias="locationId")] = None
    procurement_type: Annotated[
        Literal["Purchase", "Adjustment", "Transfer"] | None, Field(alias="procurementType")
    ] = None
    purchase_date: Annotated[datetime | None, Field(alias="purchaseDate")] = None
    purchase_order: Annotated[PurchaseOrderReference | None, Field(alias="purchaseOrder")] = None
    purchase_order_taxable_flag: Annotated[bool | None, Field(alias="purchaseOrderTaxableFlag")] = None
    state_tax_amount: Annotated[float | None, Field(alias="stateTaxAmount")] = None
    state_tax_flag: Annotated[bool | None, Field(alias="stateTaxFlag")] = None
    """
    Set to true if transaction is taxable at the state level.
    """
    state_tax_xref: Annotated[str | None, Field(alias="stateTaxXref")] = None
    tax_code: Annotated[TaxCodeReference | None, Field(alias="taxCode")] = None
    tax_freight_flag: Annotated[bool | None, Field(alias="taxFreightFlag")] = None
    tax_total: Annotated[float | None, Field(alias="taxTotal")] = None
    total: float | None = None
    tracking_number: Annotated[str | None, Field(alias="trackingNumber")] = None
    unposted_product_id: Annotated[str | None, Field(alias="unpostedProductId")] = None
    vendor: CompanyReference | None = None
    vendor_account_number: Annotated[str | None, Field(alias="vendorAccountNumber")] = None
    vendor_invoice_date: Annotated[datetime | None, Field(alias="vendorInvoiceDate")] = None
    vendor_invoice_number: Annotated[str | None, Field(alias="vendorInvoiceNumber")] = None


class UnpostedProcurementTaxableLevel(UnpostedExpenseTaxableLevel):
    pass


class Usage(ConnectWiseModel):
    count: int | None = None
    description: str | None = None
    hyperlink: str | None = None
    id: int | None = None
    type: str | None = None
    type_key: Annotated[str | None, Field(alias="typeKey")] = None


class UserDefinedFieldOption(ConnectWiseModel):
    default_flag: Annotated[bool | None, Field(alias="defaultFlag")] = None
    id: int | None = None
    inactive_flag: Annotated[bool | None, Field(alias="inactiveFlag")] = None
    option_value: Annotated[str | None, Field(alias="optionValue")] = None
    sort_order: Annotated[int | None, Field(alias="sortOrder")] = None


class UserDefinedFieldReference(ActivityReference):
    pass


class ValidatePortalRequest(ConnectWiseModel):
    email: str
    password: str


class ValidatePortalResponse(ConnectWiseModel):
    contact_id: Annotated[int | None, Field(alias="contactId")] = None
    success: bool | None = None


class ValidationError(ConnectWiseModel):
    code: str | None = None
    details: str | None = None
    field: str | None = None
    message: str | None = None
    resource: str | None = None


class Warehouse(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    company: CompanyReference | None = None
    contact: ContactReference | None = None
    currency: CurrencyReference | None = None
    department: SystemDepartmentReference | None = None
    id: int | None = None
    inactive_flag: Annotated[bool | None, Field(alias="inactiveFlag")] = None
    location: SystemLocationReference | None = None
    location_default_flag: Annotated[bool | None, Field(alias="locationDefaultFlag")] = None
    location_xref: Annotated[str | None, Field(alias="locationXref")] = None
    """
     Max length: 10;
    """
    locked_flag: Annotated[bool | None, Field(alias="lockedFlag")] = None
    manager: MemberReference | None = None
    name: str
    """
     Max length: 50;
    """
    overall_default_flag: Annotated[bool | None, Field(alias="overallDefaultFlag")] = None
    site: SiteReference | None = None


class WarehouseBinReference(ActivityReference):
    pass


class WarehouseInfo(CategoryInfo):
    pass


class WarehouseReference(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    locked_flag: Annotated[bool | None, Field(alias="lockedFlag")] = None
    name: str | None = None


class WonRevenueReference(AgreementRevenueReference):
    pass


class WorkRole(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    add_all_agreement_exclusions: Annotated[bool | None, Field(alias="addAllAgreementExclusions")] = None
    """
    Used only on create to add the work role to all agreement and agreement type exclusion lists
    """
    add_all_locations: Annotated[bool | None, Field(alias="addAllLocations")] = None
    hourly_rate: Annotated[float | None, Field(alias="hourlyRate")] = None
    id: int | None = None
    inactive_flag: Annotated[bool | None, Field(alias="inactiveFlag")] = None
    integration_xref: Annotated[str | None, Field(alias="integrationXref")] = None
    """
     Max length: 50;
    """
    location_ids: Annotated[list[int] | None, Field(alias="locationIds")] = None
    name: str
    """
     Max length: 50;
    """
    remove_all_locations: Annotated[bool | None, Field(alias="removeAllLocations")] = None


class WorkRoleInfo(CategoryInfo):
    pass


class WorkRoleReference(ActivityReference):
    pass


class WorkType(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    accrual_type: Annotated[Literal["Holiday", "PTO", "Sick", "Vacation"] | None, Field(alias="accrualType")] = None
    activity_default_flag: Annotated[bool | None, Field(alias="activityDefaultFlag")] = None
    add_all_agreement_exclusions: Annotated[bool | None, Field(alias="addAllAgreementExclusions")] = None
    """
    Used only on create to add the work type to all agreement and agreement type exclusion lists
    """
    bill_time: Annotated[Literal["Billable", "DoNotBill", "NoCharge"], Field(alias="billTime")]
    cost_multiplier: Annotated[float | None, Field(alias="costMultiplier")] = None
    hours_max: Annotated[float | None, Field(alias="hoursMax")] = None
    hours_min: Annotated[float | None, Field(alias="hoursMin")] = None
    id: int | None = None
    inactive_flag: Annotated[bool | None, Field(alias="inactiveFlag")] = None
    integration_x_ref: Annotated[str | None, Field(alias="integrationXRef")] = None
    """
     Max length: 50;
    """
    name: str
    """
     Max length: 50;
    """
    overall_default_flag: Annotated[bool | None, Field(alias="overallDefaultFlag")] = None
    rate: float
    rate_type: Annotated[Literal["AdjAmount", "Custom", "Multiplier"], Field(alias="rateType")]
    round_bill_hours_to: Annotated[float | None, Field(alias="roundBillHoursTo")] = None
    utilization_flag: Annotated[bool | None, Field(alias="utilizationFlag")] = None


class WorkTypeInfo(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    activity_default_flag: Annotated[bool | None, Field(alias="activityDefaultFlag")] = None
    default_flag: Annotated[bool | None, Field(alias="defaultFlag")] = None
    id: int | None = None
    inactive_flag: Annotated[bool | None, Field(alias="inactiveFlag")] = None
    name: str | None = None


class WorkTypeReference(ActivityReference):
    pass


class WorkflowAction(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    activity_status: Annotated[ActivityStatusReference | None, Field(alias="activityStatus")] = None
    activity_type: Annotated[ActivityTypeReference | None, Field(alias="activityType")] = None
    attach_configurations_for: Annotated[
        Literal["Company", "Contact"] | None, Field(alias="attachConfigurationsFor")
    ] = None
    """
    Required when notifyType is set to: "Attach Configuration"
    """
    attached_track: Annotated[TrackReference | None, Field(alias="attachedTrack")] = None
    attachments: list[int] | None = None
    audit_notes_flag: Annotated[bool | None, Field(alias="auditNotesFlag")] = None
    automate_script: Annotated[AutomateScriptReference | None, Field(alias="automateScript")] = None
    bcc_contact: Annotated[ContactReference | None, Field(alias="bccContact")] = None
    board: BoardReference | None = None
    board_status: Annotated[ServiceStatusReference | None, Field(alias="boardStatus")] = None
    cc_contact: Annotated[ContactReference | None, Field(alias="ccContact")] = None
    company_status: Annotated[CompanyStatusReference | None, Field(alias="companyStatus")] = None
    configuration_status: Annotated[ConfigurationStatusReference | None, Field(alias="configurationStatus")] = None
    configuration_type: Annotated[ConfigurationTypeReference | None, Field(alias="configurationType")] = None
    days_to_execute: Annotated[int | None, Field(alias="daysToExecute")] = None
    detail_notes_flag: Annotated[bool | None, Field(alias="detailNotesFlag")] = None
    email_from: Annotated[str | None, Field(alias="emailFrom")] = None
    """
    Required when notifyFrom is set to: "Email Address" Max length: 250;
    """
    email_recipient: Annotated[str | None, Field(alias="emailRecipient")] = None
    """
    Required when notifyWho is set to: "Email Address" Max length: 250;
    """
    group: GroupReference | None = None
    id: int | None = None
    internal_notes_flag: Annotated[bool | None, Field(alias="internalNotesFlag")] = None
    invoice_min_days: Annotated[int | None, Field(alias="invoiceMinDays")] = None
    notes: str | None = None
    notify_from: Annotated[NotificationRecipientReference | None, Field(alias="notifyFrom")] = None
    notify_type: Annotated[NotifyTypeReference, Field(alias="notifyType")]
    notify_who: Annotated[NotificationRecipientReference | None, Field(alias="notifyWho")] = None
    project_status: Annotated[ProjectStatusReference | None, Field(alias="projectStatus")] = None
    sales_order_status: Annotated[OrderStatusReference | None, Field(alias="salesOrderStatus")] = None
    script_fail_status: Annotated[ServiceStatusReference | None, Field(alias="scriptFailStatus")] = None
    script_success_status: Annotated[ServiceStatusReference | None, Field(alias="scriptSuccessStatus")] = None
    service_item: Annotated[ServiceItemReference | None, Field(alias="serviceItem")] = None
    service_priority: Annotated[PriorityReference | None, Field(alias="servicePriority")] = None
    service_sub_type: Annotated[ServiceSubTypeReference | None, Field(alias="serviceSubType")] = None
    service_survey: Annotated[ServiceSurveyReference | None, Field(alias="serviceSurvey")] = None
    service_template: Annotated[ServiceTemplateReference | None, Field(alias="serviceTemplate")] = None
    service_type: Annotated[ServiceTypeReference | None, Field(alias="serviceType")] = None
    specific_member_from: Annotated[MemberReference | None, Field(alias="specificMemberFrom")] = None
    specific_member_to: Annotated[MemberReference | None, Field(alias="specificMemberTo")] = None
    specific_team_to: Annotated[GenericBoardTeamReference | None, Field(alias="specificTeamTo")] = None
    subject: str | None = None
    """
    Required when notifyType is set to: "Create Activity", "Send Email", "Assign Resource" Max length: 100;
    """
    update_owner_flag: Annotated[bool | None, Field(alias="updateOwnerFlag")] = None


class WorkflowActionAutomateParameter(ConnectWiseModel):
    id: int | None = None
    name: str
    value: str | None = None


class WorkflowActionUserDefinedField(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    action_id: Annotated[int | None, Field(alias="actionId")] = None
    caption: str | None = None
    entry_type_id: Annotated[str | None, Field(alias="entryTypeId")] = None
    event_id: Annotated[int | None, Field(alias="eventId")] = None
    field_type_id: Annotated[str | None, Field(alias="fieldTypeId")] = None
    id: int | None = None
    inactive_flag: Annotated[bool | None, Field(alias="inactiveFlag")] = None
    overwrite_flag: Annotated[bool | None, Field(alias="overwriteFlag")] = None
    pod_description: Annotated[str | None, Field(alias="podDescription")] = None
    required_flag: Annotated[bool | None, Field(alias="requiredFlag")] = None
    user_defined_field_id: Annotated[int | None, Field(alias="userDefinedFieldId")] = None
    value: str | None = None


class WorkflowAttachment(ActivityReference):
    pass


class WorkflowEvent(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    event_condition: Annotated[str, Field(alias="eventCondition")]
    execution_time: Annotated[
        Literal["Once", "MultipleTimes", "Continuously"] | None, Field(alias="executionTime")
    ] = None
    """
    Defaults to Once when not specified
    """
    frequency_of_execution: Annotated[int | None, Field(alias="frequencyOfExecution")] = None
    """
    Required when exectionTimes is set to MultipleTimes or Continuously
    """
    frequency_unit: Annotated[Literal["Minutes", "Hours", "Days", "Months"] | None, Field(alias="frequencyUnit")] = None
    """
    Required when exectionTimes is set to MultipleTimes or Continuously
    """
    id: int | None = None
    max_number_of_execution: Annotated[int | None, Field(alias="maxNumberOfExecution")] = None
    """
    Required when exectionTimes is set to MultipleTimes
    """
    name: str | None = None


class WorkflowNotifyType(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    external_flag: Annotated[bool | None, Field(alias="externalFlag")] = None
    """
    If the current action effects external objects e.g. integrations or sending an email
    """
    id: int | None = None
    identifier: str | None = None
    is_setup_flag: Annotated[bool | None, Field(alias="isSetupFlag")] = None
    """
    If the current action is available because it is already set up. Pertains to integrations such as Automate
    """
    name: str | None = None


class WorkflowNotifyTypeInfo(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    identifier: str | None = None
    is_setup_flag: Annotated[bool | None, Field(alias="isSetupFlag")] = None
    name: str | None = None


class WorkflowTableType(CatalogItemReference):
    pass


class WorkflowTableTypeInfo(CatalogItemReference):
    pass


class WorkflowTableTypeReference(CatalogItemReference):
    pass


class WorkflowTrigger(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    custom_field: Annotated[UserDefinedFieldReference | None, Field(alias="customField")] = None
    description: str | None = None
    expected_type: Annotated[str | None, Field(alias="expectedType")] = None
    has_operator_flag: Annotated[bool | None, Field(alias="hasOperatorFlag")] = None
    has_options_flag: Annotated[bool | None, Field(alias="hasOptionsFlag")] = None
    id: int | None = None
    name: str | None = None


class WorkflowTriggerOption(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    custom_field: Annotated[UserDefinedFieldReference | None, Field(alias="customField")] = None
    name: str | None = None
    value: str | None = None


class Activity(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    agreement: AgreementReference | None = None
    assign_to: Annotated[MemberReference | None, Field(alias="assignTo")] = None
    assigned_by: Annotated[MemberReference | None, Field(alias="assignedBy")] = None
    campaign: CampaignReference | None = None
    company: CompanyReference | None = None
    contact: ContactReference | None = None
    currency: CurrencyReference | None = None
    custom_fields: Annotated[list[CustomFieldValue] | None, Field(alias="customFields")] = None
    date_end: Annotated[datetime | None, Field(alias="dateEnd")] = None
    date_start: Annotated[datetime | None, Field(alias="dateStart")] = None
    email: str | None = None
    """
     Max length: 250;
    """
    id: int | None = None
    mobile_guid: Annotated[UUID | None, Field(alias="mobileGuid")] = None
    name: str
    """
     Max length: 100;
    """
    notes: str | None = None
    notify_flag: Annotated[bool | None, Field(alias="notifyFlag")] = None
    opportunity: OpportunityReference | None = None
    phone_number: Annotated[str | None, Field(alias="phoneNumber")] = None
    """
     Max length: 30;
    """
    reminder: ReminderReference | None = None
    schedule_status: Annotated[ScheduleStatusReference | None, Field(alias="scheduleStatus")] = None
    status: ActivityStatusReference | None = None
    ticket: TicketReference | None = None
    type: ActivityTypeReference | None = None
    where: ServiceLocationReference | None = None


class ActivityStopwatch(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    activity_id: Annotated[int, Field(alias="activityId")]
    activity_mobile_guid: Annotated[UUID | None, Field(alias="activityMobileGuid")] = None
    agreement: AgreementReference | None = None
    billable_option: Annotated[
        Literal["Billable", "DoNotBill", "NoCharge", "NoDefault"] | None, Field(alias="billableOption")
    ] = None
    business_unit_id: Annotated[int | None, Field(alias="businessUnitId")] = None
    date_entered: Annotated[datetime | None, Field(alias="dateEntered")] = None
    end_time: Annotated[datetime | None, Field(alias="endTime")] = None
    id: int | None = None
    internal_notes: Annotated[str | None, Field(alias="internalNotes")] = None
    location_id: Annotated[int | None, Field(alias="locationId")] = None
    member: MemberReference | None = None
    mobile_guid: Annotated[UUID | None, Field(alias="mobileGuid")] = None
    notes: str | None = None
    """
     Max length: 4000;
    """
    start_time: Annotated[datetime | None, Field(alias="startTime")] = None
    status: Literal["Reset", "Running", "Paused", "Stopped"]
    total_pause_time: Annotated[int | None, Field(alias="totalPauseTime")] = None
    work_role: Annotated[WorkRoleReference | None, Field(alias="workRole")] = None
    work_type: Annotated[WorkTypeReference | None, Field(alias="workType")] = None


class Addition(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    agreement_id: Annotated[int | None, Field(alias="agreementId")] = None
    agreement_status: Annotated[
        Literal["Active", "Cancelled", "Expired", "Inactive"] | None, Field(alias="agreementStatus")
    ] = None
    bill_customer: Annotated[Literal["Billable", "DoNotBill", "NoCharge"], Field(alias="billCustomer")]
    billed_quantity: Annotated[float | None, Field(alias="billedQuantity")] = None
    cancelled_date: Annotated[datetime | None, Field(alias="cancelledDate")] = None
    custom_fields: Annotated[list[CustomFieldValue] | None, Field(alias="customFields")] = None
    description: str | None = None
    effective_date: Annotated[datetime | None, Field(alias="effectiveDate")] = None
    ext_cost: Annotated[float | None, Field(alias="extCost")] = None
    ext_price: Annotated[float | None, Field(alias="extPrice")] = None
    extended_prorate_cost: Annotated[float | None, Field(alias="extendedProrateCost")] = None
    extended_prorate_price: Annotated[float | None, Field(alias="extendedProratePrice")] = None
    id: int | None = None
    invoice_description: Annotated[str | None, Field(alias="invoiceDescription")] = None
    """
     Max length: 6000;
    """
    invoice_grouping: Annotated[InvoiceGroupingReference | None, Field(alias="invoiceGrouping")] = None
    less_included: Annotated[float | None, Field(alias="lessIncluded")] = None
    margin: float | None = None
    opportunity: OpportunityReference | None = None
    product: IvItemReference | None = None
    prorate_cost: Annotated[float | None, Field(alias="prorateCost")] = None
    prorate_current_period_flag: Annotated[bool | None, Field(alias="prorateCurrentPeriodFlag")] = None
    prorate_price: Annotated[float | None, Field(alias="proratePrice")] = None
    purchase_item_flag: Annotated[bool | None, Field(alias="purchaseItemFlag")] = None
    quantity: float | None = None
    sequence_number: Annotated[float | None, Field(alias="sequenceNumber")] = None
    serial_number: Annotated[str | None, Field(alias="serialNumber")] = None
    """
     Max length: 50;
    """
    special_order_flag: Annotated[bool | None, Field(alias="specialOrderFlag")] = None
    taxable_flag: Annotated[bool | None, Field(alias="taxableFlag")] = None
    unit_cost: Annotated[float | None, Field(alias="unitCost")] = None
    unit_price: Annotated[float | None, Field(alias="unitPrice")] = None
    uom: str | None = None


class AdjustmentDetail(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    adjustment: AdjustmentReference | None = None
    catalog_item: Annotated[CatalogItemReference | None, Field(alias="catalogItem")] = None
    description: str | None = None
    """
     Max length: 50;
    """
    id: int | None = None
    quantity_adjusted: Annotated[int, Field(alias="quantityAdjusted")]
    quantity_on_hand: Annotated[float | None, Field(alias="quantityOnHand")] = None
    serial_number: Annotated[str | None, Field(alias="serialNumber")] = None
    """
     Max length: 1000;
    """
    unit_cost: Annotated[float | None, Field(alias="unitCost")] = None
    warehouse: WarehouseReference | None = None
    warehouse_bin: Annotated[WarehouseBinReference | None, Field(alias="warehouseBin")] = None


class Agreement(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    agreement_status: Annotated[
        Literal["Active", "Cancelled", "Expired", "Inactive"] | None, Field(alias="agreementStatus")
    ] = None
    allow_overruns: Annotated[bool | None, Field(alias="allowOverruns")] = None
    application_cycle: Annotated[
        Literal[
            "Contract2Weeks",
            "Contract4Weeks",
            "ContractYear",
            "CalendarMonth",
            "CalendarQuarter",
            "CalendarWeek",
            "ContractQuarter",
            "CalendarYear",
        ]
        | None,
        Field(alias="applicationCycle"),
    ] = None
    application_limit: Annotated[float | None, Field(alias="applicationLimit")] = None
    application_units: Annotated[Literal["Amount", "Hours", "Incidents"] | None, Field(alias="applicationUnits")] = None
    application_unlimited_flag: Annotated[bool | None, Field(alias="applicationUnlimitedFlag")] = None
    auto_invoice_flag: Annotated[bool | None, Field(alias="autoInvoiceFlag")] = None
    bill_amount: Annotated[float | None, Field(alias="billAmount")] = None
    bill_expenses: Annotated[
        Literal["Billable", "DoNotBill", "NoCharge", "NoDefault"] | None, Field(alias="billExpenses")
    ] = None
    """
     Required On Updates;
    """
    bill_one_time_flag: Annotated[bool | None, Field(alias="billOneTimeFlag")] = None
    bill_products: Annotated[
        Literal["Billable", "DoNotBill", "NoCharge", "NoDefault"] | None, Field(alias="billProducts")
    ] = None
    """
     Required On Updates;
    """
    bill_start_date: Annotated[datetime | None, Field(alias="billStartDate")] = None
    bill_time: Annotated[
        Literal["Billable", "DoNotBill", "NoCharge", "NoDefault"] | None, Field(alias="billTime")
    ] = None
    """
     Required On Updates;
    """
    bill_to_company: Annotated[CompanyReference | None, Field(alias="billToCompany")] = None
    bill_to_contact: Annotated[ContactReference | None, Field(alias="billToContact")] = None
    bill_to_site: Annotated[SiteReference | None, Field(alias="billToSite")] = None
    billable_expense_invoice: Annotated[bool | None, Field(alias="billableExpenseInvoice")] = None
    billable_product_invoice: Annotated[bool | None, Field(alias="billableProductInvoice")] = None
    billable_time_invoice: Annotated[bool | None, Field(alias="billableTimeInvoice")] = None
    billing_cycle: Annotated[BillingCycleReference | None, Field(alias="billingCycle")] = None
    billing_terms: Annotated[BillingTermsReference | None, Field(alias="billingTerms")] = None
    bottom_comment: Annotated[bool | None, Field(alias="bottomComment")] = None
    cancelled_flag: Annotated[bool | None, Field(alias="cancelledFlag")] = None
    carry_over_unused: Annotated[bool | None, Field(alias="carryOverUnused")] = None
    charge_to_firm: Annotated[bool | None, Field(alias="chargeToFirm")] = None
    comp_hourly_rate: Annotated[float | None, Field(alias="compHourlyRate")] = None
    comp_limit_amount: Annotated[float | None, Field(alias="compLimitAmount")] = None
    company: CompanyReference | None = None
    company_location: Annotated[SystemLocationReference | None, Field(alias="companyLocation")] = None
    contact: ContactReference | None = None
    cover_agreement_expense: Annotated[bool | None, Field(alias="coverAgreementExpense")] = None
    cover_agreement_product: Annotated[bool | None, Field(alias="coverAgreementProduct")] = None
    cover_agreement_time: Annotated[bool | None, Field(alias="coverAgreementTime")] = None
    cover_sales_tax: Annotated[bool | None, Field(alias="coverSalesTax")] = None
    currency: CurrencyReference | None = None
    custom_fields: Annotated[list[CustomFieldValue] | None, Field(alias="customFields")] = None
    customer_po: Annotated[str | None, Field(alias="customerPO")] = None
    """
     Max length: 50;
    """
    date_cancelled: Annotated[datetime | None, Field(alias="dateCancelled")] = None
    department: SystemDepartmentReference | None = None
    employee_comp_not_exceed: Annotated[
        Literal["Billing", "Amount", "Percent"] | None, Field(alias="employeeCompNotExceed")
    ] = None
    employee_comp_rate: Annotated[Literal["Actual", "Hourly"] | None, Field(alias="employeeCompRate")] = None
    """
     Required On Updates;
    """
    end_date: Annotated[datetime | None, Field(alias="endDate")] = None
    expire_when_zero: Annotated[bool | None, Field(alias="expireWhenZero")] = None
    expired_days: Annotated[int | None, Field(alias="expiredDays")] = None
    id: int | None = None
    internal_notes: Annotated[str | None, Field(alias="internalNotes")] = None
    invoice_description: Annotated[str | None, Field(alias="invoiceDescription")] = None
    invoice_template: Annotated[InvoiceTemplateReference | None, Field(alias="invoiceTemplate")] = None
    invoicing_cycle: Annotated[Literal["ContractYear", "CalendarYear"] | None, Field(alias="invoicingCycle")] = None
    """
     Required On Updates;
    """
    limit: int | None = None
    location: SystemLocationReference | None = None
    name: str
    """
     Max length: 100;
    """
    next_invoice_date: Annotated[datetime | None, Field(alias="nextInvoiceDate")] = None
    no_ending_date_flag: Annotated[bool | None, Field(alias="noEndingDateFlag")] = None
    one_time_flag: Annotated[bool | None, Field(alias="oneTimeFlag")] = None
    opportunity: OpportunityReference | None = None
    parent_agreement: Annotated[AgreementReference | None, Field(alias="parentAgreement")] = None
    period_type: Annotated[Literal["Current", "Future", "Both", "Undefined"] | None, Field(alias="periodType")] = None
    project_type: Annotated[ProjectTypeReference | None, Field(alias="projectType")] = None
    prorate_first_bill: Annotated[float | None, Field(alias="prorateFirstBill")] = None
    prorate_flag: Annotated[bool | None, Field(alias="prorateFlag")] = None
    reason_cancelled: Annotated[str | None, Field(alias="reasonCancelled")] = None
    """
     Max length: 100;
    """
    restrict_department_flag: Annotated[bool | None, Field(alias="restrictDepartmentFlag")] = None
    restrict_down_payment: Annotated[bool | None, Field(alias="restrictDownPayment")] = None
    restrict_location_flag: Annotated[bool | None, Field(alias="restrictLocationFlag")] = None
    site: SiteReference | None = None
    sla: SLAReference | None = None
    start_date: Annotated[datetime | None, Field(alias="startDate")] = None
    sub_contract_company: Annotated[CompanyReference | None, Field(alias="subContractCompany")] = None
    sub_contract_contact: Annotated[ContactReference | None, Field(alias="subContractContact")] = None
    tax_code: Annotated[TaxCodeReference | None, Field(alias="taxCode")] = None
    taxable: bool | None = None
    top_comment: Annotated[bool | None, Field(alias="topComment")] = None
    type: AgreementTypeReference | None = None
    work_order: Annotated[str | None, Field(alias="workOrder")] = None
    """
     Max length: 20;
    """
    work_role: Annotated[WorkRoleReference | None, Field(alias="workRole")] = None
    work_type: Annotated[WorkTypeReference | None, Field(alias="workType")] = None


class AgreementAdjustment(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    agreement_id: Annotated[int | None, Field(alias="agreementId")] = None
    amount: float | None = None
    custom_fields: Annotated[list[CustomFieldValue] | None, Field(alias="customFields")] = None
    description: str | None = None
    """
     Max length: 1000;
    """
    effective_date: Annotated[datetime | None, Field(alias="effectiveDate")] = None
    id: int | None = None


class AgreementSite(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    agreement_id: Annotated[int | None, Field(alias="agreementId")] = None
    company: CompanyReference | None = None
    custom_fields: Annotated[list[CustomFieldValue] | None, Field(alias="customFields")] = None
    id: int | None = None
    site: SiteReference | None = None


class AgreementType(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    add_all_work_role_exclusions: Annotated[bool | None, Field(alias="addAllWorkRoleExclusions")] = None
    add_all_work_type_exclusions: Annotated[bool | None, Field(alias="addAllWorkTypeExclusions")] = None
    allow_overruns_flag: Annotated[bool | None, Field(alias="allowOverrunsFlag")] = None
    application_cycle: Annotated[
        Literal[
            "Contract2Weeks",
            "Contract4Weeks",
            "ContractYear",
            "CalendarMonth",
            "CalendarQuarter",
            "CalendarWeek",
            "ContractQuarter",
            "CalendarYear",
        ]
        | None,
        Field(alias="applicationCycle"),
    ] = None
    application_limit: Annotated[float | None, Field(alias="applicationLimit")] = None
    application_units: Annotated[Literal["Amount", "Hours", "Incidents"] | None, Field(alias="applicationUnits")] = None
    application_unlimited_flag: Annotated[bool | None, Field(alias="applicationUnlimitedFlag")] = None
    auto_invoice_flag: Annotated[bool | None, Field(alias="autoInvoiceFlag")] = None
    bill_amount: Annotated[float | None, Field(alias="billAmount")] = None
    bill_expenses: Annotated[Literal["Billable", "DoNotBill", "NoCharge", "NoDefault"], Field(alias="billExpenses")]
    bill_one_time_flag: Annotated[bool | None, Field(alias="billOneTimeFlag")] = None
    bill_products: Annotated[Literal["Billable", "DoNotBill", "NoCharge", "NoDefault"], Field(alias="billProducts")]
    bill_time: Annotated[Literal["Billable", "DoNotBill", "NoCharge", "NoDefault"], Field(alias="billTime")]
    billable_expense_invoice_flag: Annotated[bool | None, Field(alias="billableExpenseInvoiceFlag")] = None
    billable_product_invoice_flag: Annotated[bool | None, Field(alias="billableProductInvoiceFlag")] = None
    billable_time_invoice_flag: Annotated[bool | None, Field(alias="billableTimeInvoiceFlag")] = None
    billing_cycle: Annotated[BillingCycleReference | None, Field(alias="billingCycle")] = None
    billing_terms: Annotated[BillingTermsReference | None, Field(alias="billingTerms")] = None
    bottom_comment_flag: Annotated[bool | None, Field(alias="bottomCommentFlag")] = None
    carry_over_unused_flag: Annotated[bool | None, Field(alias="carryOverUnusedFlag")] = None
    charge_to_firm_flag: Annotated[bool | None, Field(alias="chargeToFirmFlag")] = None
    comp_hourly_rate: Annotated[float | None, Field(alias="compHourlyRate")] = None
    comp_limit_amount: Annotated[float | None, Field(alias="compLimitAmount")] = None
    copy_work_roles_flag: Annotated[bool | None, Field(alias="copyWorkRolesFlag")] = None
    copy_work_types_flag: Annotated[bool | None, Field(alias="copyWorkTypesFlag")] = None
    cover_agreement_expense_flag: Annotated[bool | None, Field(alias="coverAgreementExpenseFlag")] = None
    cover_agreement_product_flag: Annotated[bool | None, Field(alias="coverAgreementProductFlag")] = None
    cover_agreement_time_flag: Annotated[bool | None, Field(alias="coverAgreementTimeFlag")] = None
    cover_sales_tax_flag: Annotated[bool | None, Field(alias="coverSalesTaxFlag")] = None
    default_flag: Annotated[bool | None, Field(alias="defaultFlag")] = None
    department: SystemDepartmentReference | None = None
    email_template: Annotated[EmailTemplateReference | None, Field(alias="emailTemplate")] = None
    employee_comp_not_exceed: Annotated[Literal["Billing", "Amount", "Percent"], Field(alias="employeeCompNotExceed")]
    employee_comp_rate: Annotated[Literal["Actual", "Hourly"], Field(alias="employeeCompRate")]
    exclusion_work_role_ids: Annotated[list[int] | None, Field(alias="exclusionWorkRoleIds")] = None
    exclusion_work_type_ids: Annotated[list[int] | None, Field(alias="exclusionWorkTypeIds")] = None
    expire_when_zero: Annotated[bool | None, Field(alias="expireWhenZero")] = None
    expired_days: Annotated[int | None, Field(alias="expiredDays")] = None
    id: int | None = None
    inactive_flag: Annotated[bool | None, Field(alias="inactiveFlag")] = None
    integration_x_ref: Annotated[str | None, Field(alias="integrationXRef")] = None
    """
     Max length: 50;
    """
    invoice_description: Annotated[str | None, Field(alias="invoiceDescription")] = None
    """
     Max length: 4000;
    """
    invoice_pre_suffix: Annotated[str | None, Field(alias="invoicePreSuffix")] = None
    """
     Max length: 5;
    """
    invoice_template: Annotated[InvoiceTemplateReference | None, Field(alias="invoiceTemplate")] = None
    invoicing_cycle: Annotated[Literal["ContractYear", "CalendarYear"], Field(alias="invoicingCycle")]
    limit: int | None = None
    location: SystemLocationReference | None = None
    name: str
    """
     Max length: 50;
    """
    one_time_flag: Annotated[bool | None, Field(alias="oneTimeFlag")] = None
    pre_payment_flag: Annotated[bool | None, Field(alias="prePaymentFlag")] = None
    prefix_suffix_option: Annotated[Literal["Prefix", "Suffix"] | None, Field(alias="prefixSuffixOption")] = None
    project_type: Annotated[ProjectTypeReference | None, Field(alias="projectType")] = None
    prorate_flag: Annotated[bool | None, Field(alias="prorateFlag")] = None
    remove_all_work_role_exclusions: Annotated[bool | None, Field(alias="removeAllWorkRoleExclusions")] = None
    remove_all_work_type_exclusions: Annotated[bool | None, Field(alias="removeAllWorkTypeExclusions")] = None
    restrict_department_flag: Annotated[bool | None, Field(alias="restrictDepartmentFlag")] = None
    restrict_down_payment_flag: Annotated[bool | None, Field(alias="restrictDownPaymentFlag")] = None
    restrict_location_flag: Annotated[bool | None, Field(alias="restrictLocationFlag")] = None
    sla: SLAReference | None = None
    taxable_flag: Annotated[bool | None, Field(alias="taxableFlag")] = None
    top_comment_flag: Annotated[bool | None, Field(alias="topCommentFlag")] = None
    work_role: Annotated[WorkRoleReference | None, Field(alias="workRole")] = None
    work_type: Annotated[WorkTypeReference | None, Field(alias="workType")] = None


class AgreementTypeBoardDefault(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    board: BoardReference | None = None
    default_flag: Annotated[bool | None, Field(alias="defaultFlag")] = None
    department: SystemDepartmentReference | None = None
    id: int | None = None
    location: SystemLocationReference
    service_type: Annotated[ServiceTypeReference | None, Field(alias="serviceType")] = None
    type: AgreementTypeReference | None = None


class AgreementTypeWorkRole(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    effective_date: Annotated[datetime | None, Field(alias="effectiveDate")] = None
    ending_date: Annotated[datetime | None, Field(alias="endingDate")] = None
    id: int | None = None
    limit_to: Annotated[float | None, Field(alias="limitTo")] = None
    rate: float | None = None
    rate_type: Annotated[Literal["AdjAmount", "Custom", "Multiplier"], Field(alias="rateType")]
    type: AgreementTypeReference | None = None
    work_role: Annotated[WorkRoleReference | None, Field(alias="workRole")] = None


class AgreementTypeWorkRoleExclusion(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    type: AgreementTypeReference | None = None
    work_role: Annotated[WorkRoleReference | None, Field(alias="workRole")] = None


class AgreementTypeWorkRoleInfo(AgreementTypeWorkRoleExclusion):
    pass


class AgreementTypeWorkType(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    bill_time: Annotated[Literal["Billable", "DoNotBill", "NoCharge", "NoDefault"], Field(alias="billTime")]
    effective_date: Annotated[datetime | None, Field(alias="effectiveDate")] = None
    ending_date: Annotated[datetime | None, Field(alias="endingDate")] = None
    hours_max: Annotated[float | None, Field(alias="hoursMax")] = None
    hours_min: Annotated[float | None, Field(alias="hoursMin")] = None
    id: int | None = None
    limit_to: Annotated[float | None, Field(alias="limitTo")] = None
    overage_rate: Annotated[float | None, Field(alias="overageRate")] = None
    overage_rate_type: Annotated[Literal["AdjAmount", "Custom", "Multiplier"], Field(alias="overageRateType")]
    rate: float | None = None
    rate_type: Annotated[Literal["AdjAmount", "Custom", "Multiplier"], Field(alias="rateType")]
    round_bill_hours: Annotated[float | None, Field(alias="roundBillHours")] = None
    type: AgreementTypeReference | None = None
    work_type: Annotated[WorkTypeReference | None, Field(alias="workType")] = None


class AgreementTypeWorkTypeExclusion(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    type: AgreementTypeReference | None = None
    work_type: Annotated[WorkTypeReference | None, Field(alias="workType")] = None


class AgreementWorkRole(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    agreement_id: Annotated[int | None, Field(alias="agreementId")] = None
    effective_date: Annotated[datetime | None, Field(alias="effectiveDate")] = None
    ending_date: Annotated[datetime | None, Field(alias="endingDate")] = None
    id: int | None = None
    limit_to: Annotated[float | None, Field(alias="limitTo")] = None
    location_id: Annotated[int | None, Field(alias="locationId")] = None
    rate: float | None = None
    rate_type: Annotated[Literal["AdjAmount", "Custom", "Multiplier"], Field(alias="rateType")]
    work_role: Annotated[WorkRoleReference | None, Field(alias="workRole")] = None


class AgreementWorkRoleExclusion(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    agreement_id: Annotated[int | None, Field(alias="agreementId")] = None
    id: int | None = None
    work_role: Annotated[WorkRoleReference | None, Field(alias="workRole")] = None


class AgreementWorkType(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    agreement_id: Annotated[int | None, Field(alias="agreementId")] = None
    agreement_limit: Annotated[float | None, Field(alias="agreementLimit")] = None
    bill_time: Annotated[Literal["Billable", "DoNotBill", "NoCharge", "NoDefault"], Field(alias="billTime")]
    company: CompanyReference | None = None
    effective_date: Annotated[datetime | None, Field(alias="effectiveDate")] = None
    ending_date: Annotated[datetime | None, Field(alias="endingDate")] = None
    hours_max: Annotated[float | None, Field(alias="hoursMax")] = None
    hours_min: Annotated[float | None, Field(alias="hoursMin")] = None
    id: int | None = None
    location_id: Annotated[int | None, Field(alias="locationId")] = None
    overage_rate: Annotated[float | None, Field(alias="overageRate")] = None
    overage_rate_type: Annotated[
        Literal["AdjAmount", "Custom", "Multiplier"] | None, Field(alias="overageRateType")
    ] = None
    rate: float | None = None
    rate_type: Annotated[Literal["AdjAmount", "Custom", "Multiplier"], Field(alias="rateType")]
    round_bill_hours: Annotated[float | None, Field(alias="roundBillHours")] = None
    site: SiteReference | None = None
    work_type: Annotated[WorkTypeReference | None, Field(alias="workType")] = None


class AgreementWorkTypeExclusion(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    agreement_id: Annotated[int | None, Field(alias="agreementId")] = None
    id: int | None = None
    work_type: Annotated[WorkTypeReference | None, Field(alias="workType")] = None


class ApiMember(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    block_cost_flag: Annotated[bool | None, Field(alias="blockCostFlag")] = None
    block_price_flag: Annotated[bool | None, Field(alias="blockPriceFlag")] = None
    default_department: Annotated[SystemDepartmentReference | None, Field(alias="defaultDepartment")] = None
    default_location: Annotated[SystemLocationReference | None, Field(alias="defaultLocation")] = None
    email_address: Annotated[str | None, Field(alias="emailAddress")] = None
    """
     Max length: 250;
    """
    excluded_service_board_ids: Annotated[list[int] | None, Field(alias="excludedServiceBoardIds")] = None
    id: int | None = None
    identifier: str
    """
     Max length: 15;
    """
    inactive_date: Annotated[datetime | None, Field(alias="inactiveDate")] = None
    inactive_flag: Annotated[bool | None, Field(alias="inactiveFlag")] = None
    name: str | None = None
    """
     Max length: 30; Required On Updates;
    """
    notes: str | None = None
    sales_default_location: Annotated[SystemLocationReference | None, Field(alias="salesDefaultLocation")] = None
    security_location: Annotated[SystemLocationReference | None, Field(alias="securityLocation")] = None
    security_role: Annotated[SecurityRoleReference | None, Field(alias="securityRole")] = None
    service_default_board: Annotated[BoardReference | None, Field(alias="serviceDefaultBoard")] = None
    structure_level: Annotated[StructureReference | None, Field(alias="structureLevel")] = None
    time_zone: Annotated[TimeZoneSetupReference | None, Field(alias="timeZone")] = None


class ApiRequest(ConnectWiseModel):
    entity: IRestIdentifiedItem | None = None
    external_id: Annotated[str | None, Field(alias="externalId")] = None
    fields: str | None = None
    filters: FilterValues | None = None
    format: str | None = None
    grand_parent_id: Annotated[int | None, Field(alias="grandParentId")] = None
    id: int | None = None
    member_context: Annotated[str | None, Field(alias="memberContext")] = None
    misc_properties: Annotated[dict[str, dict[str, Any]] | None, Field(alias="miscProperties")] = None
    page: PageValues | None = None
    parent_id: Annotated[int | None, Field(alias="parentId")] = None


class AutoSyncTime(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    sync_time: Annotated[str, Field(alias="syncTime")]
    time_zone: Annotated[TimeZoneSetupReference | None, Field(alias="timeZone")] = None


class BatchEntry(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    account_number: Annotated[str | None, Field(alias="accountNumber")] = None
    account_type: Annotated[str | None, Field(alias="accountType")] = None
    adjustment_detail: Annotated[AdjustmentDetailReference | None, Field(alias="adjustmentDetail")] = None
    cost: float | None = None
    cost_of_goods_sold_account_number: Annotated[str | None, Field(alias="costOfGoodsSoldAccountNumber")] = None
    credit: float | None = None
    debit: float | None = None
    expense: ExpenseDetailReference | None = None
    id: int | None = None
    invoice: InvoiceReference | None = None
    item: str | None = None
    line_item: Annotated[PurchaseOrderLineItemReference | None, Field(alias="lineItem")] = None
    name: str | None = None
    purchase_order: Annotated[PurchaseOrderReference | None, Field(alias="purchaseOrder")] = None
    sales_code: Annotated[str | None, Field(alias="salesCode")] = None
    transfer: str | None = None


class BillingSetup(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    address_one: Annotated[str | None, Field(alias="addressOne")] = None
    """
     Max length: 50;
    """
    address_two: Annotated[str | None, Field(alias="addressTwo")] = None
    """
     Max length: 50;
    """
    agreement_invoice: Annotated[InvoiceTemplateReference | None, Field(alias="agreementInvoice")] = None
    allow_restricted_dept_on_routing_flag: Annotated[
        bool | None, Field(alias="allowRestrictedDeptOnRoutingFlag")
    ] = None
    bill_product_after_ship_flag: Annotated[bool | None, Field(alias="billProductAfterShipFlag")] = None
    bill_project_complete_flag: Annotated[bool | None, Field(alias="billProjectCompleteFlag")] = None
    bill_project_unapproved_flag: Annotated[bool | None, Field(alias="billProjectUnapprovedFlag")] = None
    bill_sales_order_complete_flag: Annotated[bool | None, Field(alias="billSalesOrderCompleteFlag")] = None
    bill_ticket_complete_flag: Annotated[bool | None, Field(alias="billTicketCompleteFlag")] = None
    bill_ticket_separately_flag: Annotated[bool | None, Field(alias="billTicketSeparatelyFlag")] = None
    bill_ticket_unapproved_flag: Annotated[bool | None, Field(alias="billTicketUnapprovedFlag")] = None
    business_number: Annotated[str | None, Field(alias="businessNumber")] = None
    """
     Max length: 50;
    """
    charge_adj_to_firm_flag: Annotated[bool | None, Field(alias="chargeAdjToFirmFlag")] = None
    city: str | None = None
    """
     Max length: 50;
    """
    company_code: Annotated[str | None, Field(alias="companyCode")] = None
    """
     Max length: 250;
    """
    copy_agreement_products_flag: Annotated[bool | None, Field(alias="copyAgreementProductsFlag")] = None
    copy_non_service_products_flag: Annotated[bool | None, Field(alias="copyNonServiceProductsFlag")] = None
    copy_service_products_flag: Annotated[bool | None, Field(alias="copyServiceProductsFlag")] = None
    country: CountryReference | None = None
    credit_memo_invoice: Annotated[InvoiceTemplateReference | None, Field(alias="creditMemoInvoice")] = None
    currency: CurrencyReference | None = None
    custom_label: Annotated[str | None, Field(alias="customLabel")] = None
    """
     Max length: 50;
    """
    custom_text: Annotated[str | None, Field(alias="customText")] = None
    """
     Max length: 500;
    """
    delivery_receipt_flag: Annotated[bool | None, Field(alias="deliveryReceiptFlag")] = None
    disable_routing_email_flag: Annotated[bool | None, Field(alias="disableRoutingEmailFlag")] = None
    display_tax_flag: Annotated[bool | None, Field(alias="displayTaxFlag")] = None
    down_payment_invoice: Annotated[InvoiceTemplateReference | None, Field(alias="downPaymentInvoice")] = None
    email_template: Annotated[EmailTemplateReference, Field(alias="emailTemplate")]
    exclude_avalara_flag: Annotated[bool | None, Field(alias="excludeAvalaraFlag")] = None
    exclude_do_not_bill_expense_flag: Annotated[bool | None, Field(alias="excludeDoNotBillExpenseFlag")] = None
    exclude_do_not_bill_product_flag: Annotated[bool | None, Field(alias="excludeDoNotBillProductFlag")] = None
    exclude_do_not_bill_time_flag: Annotated[bool | None, Field(alias="excludeDoNotBillTimeFlag")] = None
    id: int | None = None
    invoice_footer: Annotated[str | None, Field(alias="invoiceFooter")] = None
    """
     Max length: 500;
    """
    invoice_title: Annotated[str, Field(alias="invoiceTitle")]
    """
     Max length: 50;
    """
    localized_country: Annotated[CountryReference | None, Field(alias="localizedCountry")] = None
    location: SystemLocationReference
    misc_invoice: Annotated[InvoiceTemplateReference | None, Field(alias="miscInvoice")] = None
    no_watermark_flag: Annotated[bool | None, Field(alias="noWatermarkFlag")] = None
    overall_invoice_default: Annotated[InvoiceTemplateReference | None, Field(alias="overallInvoiceDefault")] = None
    payable_name: Annotated[str, Field(alias="payableName")]
    """
     Max length: 50;
    """
    phone: str | None = None
    """
     Max length: 15;
    """
    prefix_suffix_flag: Annotated[Literal["Prefix", "Suffix"] | None, Field(alias="prefixSuffixFlag")] = None
    prefix_suffix_text: Annotated[str | None, Field(alias="prefixSuffixText")] = None
    """
     Max length: 5;
    """
    print_logo_flag: Annotated[bool | None, Field(alias="printLogoFlag")] = None
    progress_invoice: Annotated[InvoiceTemplateReference | None, Field(alias="progressInvoice")] = None
    progress_time_flag: Annotated[bool | None, Field(alias="progressTimeFlag")] = None
    quote_footer: Annotated[str | None, Field(alias="quoteFooter")] = None
    """
     Max length: 1000;
    """
    read_receipt_flag: Annotated[bool | None, Field(alias="readReceiptFlag")] = None
    remit_name: Annotated[str, Field(alias="remitName")]
    """
     Max length: 50;
    """
    restrict_downpayment_flag: Annotated[bool | None, Field(alias="restrictDownpaymentFlag")] = None
    restrict_project_downpayment_flag: Annotated[bool | None, Field(alias="restrictProjectDownpaymentFlag")] = None
    sales_order_invoice: Annotated[InvoiceTemplateReference | None, Field(alias="salesOrderInvoice")] = None
    standard_invoice_actual: Annotated[InvoiceTemplateReference | None, Field(alias="standardInvoiceActual")] = None
    standard_invoice_fixed: Annotated[InvoiceTemplateReference | None, Field(alias="standardInvoiceFixed")] = None
    state: StateReference | None = None
    topcomment: str | None = None
    """
     Max length: 4000;
    """
    zip: str | None = None
    """
     Max length: 12;
    """


class BillingSetupInfo(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    currency: CurrencyReference | None = None
    id: int | None = None
    location: SystemLocationReference | None = None
    remit_name: Annotated[str | None, Field(alias="remitName")] = None


class BillingSetupRouting(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    invoice_rule: Annotated[Literal["All", "Standard", "Project", "Agreement"], Field(alias="invoiceRule")]
    member: MemberReference | None = None
    routing_rule: Annotated[
        Literal["Account", "Territory", "Creator", "Department", "Location", "Member", "Project", "Sales"],
        Field(alias="routingRule"),
    ]
    sequence_number: Annotated[int, Field(alias="sequenceNumber")]


class Board(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    all_sort: Annotated[Literal["Ascending", "Descending"] | None, Field(alias="allSort")] = None
    auto_assign_new_ec_tickets_flag: Annotated[bool | None, Field(alias="autoAssignNewECTicketsFlag")] = None
    auto_assign_new_portal_tickets_flag: Annotated[bool | None, Field(alias="autoAssignNewPortalTicketsFlag")] = None
    auto_assign_new_tickets_flag: Annotated[bool | None, Field(alias="autoAssignNewTicketsFlag")] = None
    auto_assign_ticket_owner_flag: Annotated[bool | None, Field(alias="autoAssignTicketOwnerFlag")] = None
    auto_close_status: Annotated[ServiceStatusReference | None, Field(alias="autoCloseStatus")] = None
    bill_expense: Annotated[
        Literal["Billable", "DoNotBill", "NoCharge", "NoDefault"] | None, Field(alias="billExpense")
    ] = None
    bill_product: Annotated[
        Literal["Billable", "DoNotBill", "NoCharge", "NoDefault"] | None, Field(alias="billProduct")
    ] = None
    bill_ticket_separately_flag: Annotated[bool | None, Field(alias="billTicketSeparatelyFlag")] = None
    bill_tickets_after_closed_flag: Annotated[bool | None, Field(alias="billTicketsAfterClosedFlag")] = None
    bill_time: Annotated[
        Literal["Billable", "DoNotBill", "NoCharge", "NoDefault"] | None, Field(alias="billTime")
    ] = None
    bill_unapproved_time_expense_flag: Annotated[bool | None, Field(alias="billUnapprovedTimeExpenseFlag")] = None
    board_icon: Annotated[DocumentReference | None, Field(alias="boardIcon")] = None
    closed_loop_all_flag: Annotated[bool | None, Field(alias="closedLoopAllFlag")] = None
    closed_loop_discussions_flag: Annotated[bool | None, Field(alias="closedLoopDiscussionsFlag")] = None
    closed_loop_internal_analysis_flag: Annotated[bool | None, Field(alias="closedLoopInternalAnalysisFlag")] = None
    closed_loop_resolution_flag: Annotated[bool | None, Field(alias="closedLoopResolutionFlag")] = None
    contact_template: Annotated[ServiceEmailTemplateReference | None, Field(alias="contactTemplate")] = None
    department: SystemDepartmentReference | None = None
    discussions_locked_flag: Annotated[bool | None, Field(alias="discussionsLockedFlag")] = None
    dispatch_member: Annotated[MemberReference | None, Field(alias="dispatchMember")] = None
    duty_manager_member: Annotated[MemberReference | None, Field(alias="dutyManagerMember")] = None
    email_connector_allow_reopen_closed_flag: Annotated[
        bool | None, Field(alias="emailConnectorAllowReopenClosedFlag")
    ] = None
    email_connector_never_reopen_by_days_closed_flag: Annotated[
        bool | None, Field(alias="emailConnectorNeverReopenByDaysClosedFlag")
    ] = None
    """
    This field can only be set when emailConnectorAllowReopenClosed is true
    """
    email_connector_never_reopen_by_days_flag: Annotated[
        bool | None, Field(alias="emailConnectorNeverReopenByDaysFlag")
    ] = None
    """
    This field can only be set when emailConnectorAllowReopenClosed is true
    """
    email_connector_new_ticket_no_match_flag: Annotated[
        bool | None, Field(alias="emailConnectorNewTicketNoMatchFlag")
    ] = None
    """
    This field can only be set when emailConnectorAllowReopenClosed is true
    """
    email_connector_reopen_days_closed_limit: Annotated[
        int | None, Field(alias="emailConnectorReopenDaysClosedLimit")
    ] = None
    """
    This field can only be set when emailConnectorNeverReopenByDaysClosedFlag and emailConnectorAllowReopenClosed are both true
                This field is required when emailConnectorNeverReopenByDaysClosedFlag is true
    """
    email_connector_reopen_days_limit: Annotated[int | None, Field(alias="emailConnectorReopenDaysLimit")] = None
    """
    This field can only be set when emailConnectorNeverReopenByDaysFlag and emailConnectorAllowReopenClosed are both true
                This field is required when emailConnectorNeverReopenByDaysFlag is true
    """
    email_connector_reopen_resources_flag: Annotated[
        bool | None, Field(alias="emailConnectorReopenResourcesFlag")
    ] = None
    """
    This field can only be set when emailConnectorAllowReopenClosed is true
    """
    email_connector_reopen_status: Annotated[
        ServiceStatusReference | None, Field(alias="emailConnectorReopenStatus")
    ] = None
    id: int | None = None
    inactive_flag: Annotated[bool | None, Field(alias="inactiveFlag")] = None
    internal_analysis_sort: Annotated[
        Literal["Ascending", "Descending"] | None, Field(alias="internalAnalysisSort")
    ] = None
    location: SystemLocationReference | None = None
    mark_first_note_issue_flag: Annotated[bool | None, Field(alias="markFirstNoteIssueFlag")] = None
    name: str
    """
     Max length: 50;
    """
    notify_email_from: Annotated[str | None, Field(alias="notifyEmailFrom")] = None
    """
     Max length: 50;
    """
    notify_email_from_name: Annotated[str | None, Field(alias="notifyEmailFromName")] = None
    """
     Max length: 60;
    """
    oncall_member: Annotated[MemberReference | None, Field(alias="oncallMember")] = None
    override_billing_setup_flag: Annotated[bool | None, Field(alias="overrideBillingSetupFlag")] = None
    percentage_calculation: Annotated[
        Literal["ActualHours", "Manual", "ClosedPhases", "ClosedTickets"] | None, Field(alias="percentageCalculation")
    ] = None
    problem_sort: Annotated[Literal["Ascending", "Descending"] | None, Field(alias="problemSort")] = None
    project_flag: Annotated[bool | None, Field(alias="projectFlag")] = None
    resolution_sort: Annotated[Literal["Ascending", "Descending"] | None, Field(alias="resolutionSort")] = None
    resource_template: Annotated[ServiceEmailTemplateReference | None, Field(alias="resourceTemplate")] = None
    restrict_board_by_default_flag: Annotated[bool | None, Field(alias="restrictBoardByDefaultFlag")] = None
    send_to_cc_flag: Annotated[bool | None, Field(alias="sendToCCFlag")] = None
    send_to_contact_flag: Annotated[bool | None, Field(alias="sendToContactFlag")] = None
    send_to_resource_flag: Annotated[bool | None, Field(alias="sendToResourceFlag")] = None
    service_manager_member: Annotated[MemberReference | None, Field(alias="serviceManagerMember")] = None
    show_dependencies_flag: Annotated[bool | None, Field(alias="showDependenciesFlag")] = None
    """
    This field only shows if it is Project Board.
    """
    show_estimates_flag: Annotated[bool | None, Field(alias="showEstimatesFlag")] = None
    """
    This field only shows if it is Project Board.
    """
    sign_off_template: Annotated[ServiceSignoffReference | None, Field(alias="signOffTemplate")] = None
    time_entry_discussion_flag: Annotated[bool | None, Field(alias="timeEntryDiscussionFlag")] = None
    time_entry_internal_analysis_flag: Annotated[bool | None, Field(alias="timeEntryInternalAnalysisFlag")] = None
    time_entry_locked_flag: Annotated[bool | None, Field(alias="timeEntryLockedFlag")] = None
    time_entry_resolution_flag: Annotated[bool | None, Field(alias="timeEntryResolutionFlag")] = None
    use_member_display_name_flag: Annotated[bool | None, Field(alias="useMemberDisplayNameFlag")] = None
    work_role: Annotated[WorkRoleReference | None, Field(alias="workRole")] = None
    work_type: Annotated[WorkTypeReference | None, Field(alias="workType")] = None


class BoardAutoAssignResource(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    member: MemberReference | None = None
    notify_who: Annotated[NotificationRecipientReference | None, Field(alias="notifyWho")] = None


class BoardAutoTemplate(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    auto_apply_flag: Annotated[bool | None, Field(alias="autoApplyFlag")] = None
    board: BoardReference | None = None
    budget_hours_setting: Annotated[
        Literal["Append", "Overwrite", "Ignore"] | None, Field(alias="budgetHoursSetting")
    ] = None
    discussion_setting: Annotated[
        Literal["Append", "Overwrite", "Ignore"] | None, Field(alias="discussionSetting")
    ] = None
    documents_setting: Annotated[
        Literal["Append", "Overwrite", "Ignore"] | None, Field(alias="documentsSetting")
    ] = None
    finance_information_setting: Annotated[
        Literal["Append", "Overwrite", "Ignore"] | None, Field(alias="financeInformationSetting")
    ] = None
    id: int | None = None
    internal_analysis_setting: Annotated[
        Literal["Append", "Overwrite", "Ignore"] | None, Field(alias="internalAnalysisSetting")
    ] = None
    item: ServiceItemReference | None = None
    resolution_setting: Annotated[
        Literal["Append", "Overwrite", "Ignore"] | None, Field(alias="resolutionSetting")
    ] = None
    resources_setting: Annotated[
        Literal["Append", "Overwrite", "Ignore"] | None, Field(alias="resourcesSetting")
    ] = None
    send_notes_as_email_setting: Annotated[
        Literal["Append", "Overwrite", "Ignore"] | None, Field(alias="sendNotesAsEmailSetting")
    ] = None
    service_template: Annotated[ServiceTemplateReference | None, Field(alias="serviceTemplate")] = None
    subtype: ServiceSubTypeReference | None = None
    summary_setting: Annotated[Literal["Append", "Overwrite", "Ignore"] | None, Field(alias="summarySetting")] = None
    tasks_setting: Annotated[Literal["Append", "Overwrite", "Ignore"] | None, Field(alias="tasksSetting")] = None
    type: ServiceTypeReference | None = None


class BoardDefault(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    agreement_id: Annotated[int | None, Field(alias="agreementId")] = None
    board: BoardReference | None = None
    default_flag: Annotated[bool | None, Field(alias="defaultFlag")] = None
    id: int | None = None
    service_type: Annotated[ServiceTypeReference | None, Field(alias="serviceType")] = None


class BoardInfo(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    all_sort: Annotated[Literal["Ascending", "Descending"] | None, Field(alias="allSort")] = None
    closed_loop_all_flag: Annotated[bool | None, Field(alias="closedLoopAllFlag")] = None
    closed_loop_discussions_flag: Annotated[bool | None, Field(alias="closedLoopDiscussionsFlag")] = None
    closed_loop_internal_analysis_flag: Annotated[bool | None, Field(alias="closedLoopInternalAnalysisFlag")] = None
    closed_loop_resolution_flag: Annotated[bool | None, Field(alias="closedLoopResolutionFlag")] = None
    department: SystemDepartmentReference | None = None
    id: int | None = None
    inactive_flag: Annotated[bool | None, Field(alias="inactiveFlag")] = None
    internal_analysis_sort: Annotated[
        Literal["Ascending", "Descending"] | None, Field(alias="internalAnalysisSort")
    ] = None
    location: SystemLocationReference | None = None
    name: str | None = None
    problem_sort: Annotated[Literal["Ascending", "Descending"] | None, Field(alias="problemSort")] = None
    project_flag: Annotated[bool | None, Field(alias="projectFlag")] = None
    resolution_sort: Annotated[Literal["Ascending", "Descending"] | None, Field(alias="resolutionSort")] = None


class BoardItem(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    board: BoardReference | None = None
    id: int | None = None
    inactive_flag: Annotated[bool | None, Field(alias="inactiveFlag")] = None
    name: str
    """
     Max length: 50;
    """


class BoardItemAssociation(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    add_all_sub_types_flag: Annotated[bool | None, Field(alias="addAllSubTypesFlag")] = None
    board: BoardReference | None = None
    id: int
    item: ServiceItemReference | None = None
    remove_all_sub_types_flag: Annotated[bool | None, Field(alias="removeAllSubTypesFlag")] = None
    sub_type_association_ids: Annotated[list[int] | None, Field(alias="subTypeAssociationIds")] = None
    """
    If addAllSubTypesFlag and removeAllSubTypesFlag are both false, this field is required.
    """


class BoardNotification(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    email: str | None = None
    """
     Max length: 50;
    """
    id: int | None = None
    member: MemberReference | None = None
    notify_who: Annotated[NotificationRecipientReference | None, Field(alias="notifyWho")] = None


class BoardStatus(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    board: BoardReference | None = None
    closed_status: Annotated[bool | None, Field(alias="closedStatus")] = None
    custom_status_indicator_name: Annotated[str | None, Field(alias="customStatusIndicatorName")] = None
    """
     Max length: 30;
    """
    customer_portal_description: Annotated[str | None, Field(alias="customerPortalDescription")] = None
    """
     Max length: 500;
    """
    customer_portal_flag: Annotated[bool | None, Field(alias="customerPortalFlag")] = None
    default_flag: Annotated[bool | None, Field(alias="defaultFlag")] = None
    display_on_board: Annotated[bool | None, Field(alias="displayOnBoard")] = None
    email_template: Annotated[ServiceEmailTemplateReference | None, Field(alias="emailTemplate")] = None
    escalation_status: Annotated[
        Literal["NotResponded", "Responded", "ResolutionPlan", "Resolved", "NoEscalation"] | None,
        Field(alias="escalationStatus"),
    ] = None
    id: int | None = None
    inactive: bool | None = None
    name: str
    """
     Max length: 50;
    """
    sort_order: Annotated[int | None, Field(alias="sortOrder")] = None
    status_indicator: Annotated[StatusIndicatorReference | None, Field(alias="statusIndicator")] = None
    time_entry_not_allowed: Annotated[bool | None, Field(alias="timeEntryNotAllowed")] = None


class BoardStatusNotification(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    email: str | None = None
    """
    Service Status Notification email must be entered if the notify type is "Email Address" Max length: 255;
    """
    id: int | None = None
    member: MemberReference | None = None
    notify_who: Annotated[NotificationRecipientReference | None, Field(alias="notifyWho")] = None
    status: ServiceStatusReference | None = None
    workflow_step: Annotated[int | None, Field(alias="workflowStep")] = None


class BoardTeam(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    board_id: Annotated[int | None, Field(alias="boardId")] = None
    business_unit_id: Annotated[int | None, Field(alias="businessUnitId")] = None
    default_flag: Annotated[bool | None, Field(alias="defaultFlag")] = None
    id: int | None = None
    location_id: Annotated[int | None, Field(alias="locationId")] = None
    members: list[int] | None = None
    name: str
    """
     Max length: 30;
    """
    notify_on_ticket_delete: Annotated[bool | None, Field(alias="notifyOnTicketDelete")] = None
    team_leader: Annotated[MemberReference | None, Field(alias="teamLeader")] = None


class BoardType(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    board: BoardReference | None = None
    category: Literal["Reactive", "Proactive"] | None = None
    default_flag: Annotated[bool | None, Field(alias="defaultFlag")] = None
    department: SystemDepartmentReference | None = None
    id: int | None = None
    inactive_flag: Annotated[bool | None, Field(alias="inactiveFlag")] = None
    integration_xref: Annotated[str | None, Field(alias="integrationXref")] = None
    """
     Max length: 50;
    """
    location: SystemLocationReference | None = None
    name: str
    """
     Max length: 50;
    """
    request_for_change_flag: Annotated[bool | None, Field(alias="requestForChangeFlag")] = None


class BoardTypeSubTypeItemAssociation(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    board: BoardReference | None = None
    id: int | None = None
    item: ServiceItemReference | None = None
    sub_type: Annotated[ServiceSubTypeReference | None, Field(alias="subType")] = None
    type: ServiceTypeReference | None = None


class BundleRequest(ConnectWiseModel):
    api_request: Annotated[ApiRequest | None, Field(alias="apiRequest")] = None
    resource_type: Annotated[str | None, Field(alias="resourceType")] = None
    sequence_number: Annotated[int | None, Field(alias="sequenceNumber")] = None
    version: str | None = None


class BundleRequestsCollection(ConnectWiseModel):
    requests: list[BundleRequest]


class Calendar(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    friday_end_time: Annotated[str | None, Field(alias="fridayEndTime")] = None
    friday_start_time: Annotated[str | None, Field(alias="fridayStartTime")] = None
    holiday_list: Annotated[HolidayListReference | None, Field(alias="holidayList")] = None
    id: int | None = None
    monday_end_time: Annotated[str | None, Field(alias="mondayEndTime")] = None
    monday_start_time: Annotated[str | None, Field(alias="mondayStartTime")] = None
    name: str
    saturday_end_time: Annotated[str | None, Field(alias="saturdayEndTime")] = None
    saturday_start_time: Annotated[str | None, Field(alias="saturdayStartTime")] = None
    sunday_end_time: Annotated[str | None, Field(alias="sundayEndTime")] = None
    sunday_start_time: Annotated[str | None, Field(alias="sundayStartTime")] = None
    thursday_end_time: Annotated[str | None, Field(alias="thursdayEndTime")] = None
    thursday_start_time: Annotated[str | None, Field(alias="thursdayStartTime")] = None
    tuesday_end_time: Annotated[str | None, Field(alias="tuesdayEndTime")] = None
    tuesday_start_time: Annotated[str | None, Field(alias="tuesdayStartTime")] = None
    wednesday_end_time: Annotated[str | None, Field(alias="wednesdayEndTime")] = None
    wednesday_start_time: Annotated[str | None, Field(alias="wednesdayStartTime")] = None


class Campaign(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    actual_cost: Annotated[float | None, Field(alias="actualCost")] = None
    actual_gross_margin: Annotated[float | None, Field(alias="actualGrossMargin")] = None
    actual_roi: Annotated[float | None, Field(alias="actualROI")] = None
    actual_revenue: Annotated[float | None, Field(alias="actualRevenue")] = None
    budget_cost: Annotated[float | None, Field(alias="budgetCost")] = None
    budget_gross_margin: Annotated[float | None, Field(alias="budgetGrossMargin")] = None
    budget_roi: Annotated[float | None, Field(alias="budgetROI")] = None
    budget_revenue: Annotated[float | None, Field(alias="budgetRevenue")] = None
    default_group: Annotated[GroupReference | None, Field(alias="defaultGroup")] = None
    emails_sent: Annotated[int | None, Field(alias="emailsSent")] = None
    end_date: Annotated[datetime | None, Field(alias="endDate")] = None
    id: int | None = None
    impressions: int | None = None
    inactive: bool | None = None
    inactive_days_after_end: Annotated[int | None, Field(alias="inactiveDaysAfterEnd")] = None
    location_id: Annotated[int | None, Field(alias="locationId")] = None
    marketing_manager_default_track_id: Annotated[int | None, Field(alias="marketingManagerDefaultTrackId")] = None
    member: MemberReference | None = None
    name: str
    """
     Max length: 50;
    """
    notes: str | None = None
    opportunity_default_track_id: Annotated[int | None, Field(alias="opportunityDefaultTrackId")] = None
    start_date: Annotated[datetime, Field(alias="startDate")]
    status: CampaignStatusReference | None = None
    sub_type: Annotated[CampaignSubTypeReference | None, Field(alias="subType")] = None
    type: CampaignTypeReference | None = None


class CampaignCampaignSubType(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    name: str
    """
     Max length: 100;
    """
    type: CampaignTypeReference | None = None


class CampaignAudit(ConnectWiseModel):
    campaign_id: Annotated[int | None, Field(alias="campaignId")] = None
    created_by: Annotated[str | None, Field(alias="createdBy")] = None
    date_created: Annotated[datetime | None, Field(alias="dateCreated")] = None
    documents_created: Annotated[int | None, Field(alias="documentsCreated")] = None
    email_subject: Annotated[str | None, Field(alias="emailSubject")] = None
    """
     Max length: 1000;
    """
    emails_sent: Annotated[int, Field(alias="emailsSent")]
    emails_unsent: Annotated[int | None, Field(alias="emailsUnsent")] = None
    group: GroupReference | None = None
    id: int | None = None


class CatalogComponent(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    catalog_item: Annotated[CatalogItemReference | None, Field(alias="catalogItem")] = None
    cost: float | None = None
    hide_description_flag: Annotated[bool | None, Field(alias="hideDescriptionFlag")] = None
    hide_extended_price_flag: Annotated[bool | None, Field(alias="hideExtendedPriceFlag")] = None
    hide_item_identifier_flag: Annotated[bool | None, Field(alias="hideItemIdentifierFlag")] = None
    hide_price_flag: Annotated[bool | None, Field(alias="hidePriceFlag")] = None
    hide_quantity_flag: Annotated[bool | None, Field(alias="hideQuantityFlag")] = None
    id: int | None = None
    parent_catalog_item: Annotated[CatalogItemReference | None, Field(alias="parentCatalogItem")] = None
    price: float | None = None
    quantity: float
    sequence_number: Annotated[int | None, Field(alias="sequenceNumber")] = None


class CatalogInventory(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    catalog_item: Annotated[CatalogItemReference | None, Field(alias="catalogItem")] = None
    id: int | None = None
    on_hand: Annotated[int | None, Field(alias="onHand")] = None
    serial_numbers: Annotated[list[OnHandSerialNumberReference] | None, Field(alias="serialNumbers")] = None
    warehouse: WarehouseReference | None = None
    warehouse_bin: Annotated[WarehouseBinReference | None, Field(alias="warehouseBin")] = None


class CatalogItem(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    billable_option: Annotated[
        Literal["Billable", "DoNotBill", "NoCharge", "NoDefault"] | None, Field(alias="billableOption")
    ] = None
    calculated_cost: Annotated[float | None, Field(alias="calculatedCost")] = None
    calculated_cost_flag: Annotated[bool | None, Field(alias="calculatedCostFlag")] = None
    calculated_price: Annotated[float | None, Field(alias="calculatedPrice")] = None
    calculated_price_flag: Annotated[bool | None, Field(alias="calculatedPriceFlag")] = None
    category: ProductCategoryReference | None = None
    cost: float | None = None
    custom_fields: Annotated[list[CustomFieldValue] | None, Field(alias="customFields")] = None
    customer_description: Annotated[str, Field(alias="customerDescription")]
    """
     Max length: 6000;
    """
    date_entered: Annotated[datetime | None, Field(alias="dateEntered")] = None
    description: str
    """
     Max length: 60;
    """
    drop_ship_flag: Annotated[bool | None, Field(alias="dropShipFlag")] = None
    entity_type: Annotated[EntityTypeReference | None, Field(alias="entityType")] = None
    id: int | None = None
    identifier: str
    """
     Max length: 60;
    """
    inactive_flag: Annotated[bool | None, Field(alias="inactiveFlag")] = None
    integration_x_ref: Annotated[str | None, Field(alias="integrationXRef")] = None
    """
     Max length: 50;
    """
    manufacturer: ManufacturerReference | None = None
    manufacturer_part_number: Annotated[str | None, Field(alias="manufacturerPartNumber")] = None
    """
     Max length: 50;
    """
    min_stock_level: Annotated[int | None, Field(alias="minStockLevel")] = None
    notes: str | None = None
    phase_product_flag: Annotated[bool | None, Field(alias="phaseProductFlag")] = None
    price: float | None = None
    price_attribute: Annotated[
        Literal["FixedFee", "NotToExceed", "OverrideRate", "TimeAndMaterials"] | None, Field(alias="priceAttribute")
    ] = None
    product_class: Annotated[
        Literal["Agreement", "Bundle", "Inventory", "NonInventory", "Service"] | None, Field(alias="productClass")
    ] = None
    """
    Defaults to Non-Inventory
    """
    recurring_bill_cycle: Annotated[BillingCycleReference | None, Field(alias="recurringBillCycle")] = None
    recurring_cost: Annotated[float | None, Field(alias="recurringCost")] = None
    recurring_cycle_type: Annotated[
        Literal["ContractYear", "CalendarYear"] | None, Field(alias="recurringCycleType")
    ] = None
    recurring_flag: Annotated[bool | None, Field(alias="recurringFlag")] = None
    recurring_one_time_flag: Annotated[bool | None, Field(alias="recurringOneTimeFlag")] = None
    recurring_revenue: Annotated[float | None, Field(alias="recurringRevenue")] = None
    serialized_cost_flag: Annotated[bool | None, Field(alias="serializedCostFlag")] = None
    serialized_flag: Annotated[bool | None, Field(alias="serializedFlag")] = None
    sla: SLAReference | None = None
    special_order_flag: Annotated[bool | None, Field(alias="specialOrderFlag")] = None
    subcategory: ProductSubCategoryReference | None = None
    taxable_flag: Annotated[bool | None, Field(alias="taxableFlag")] = None
    type: ProductTypeReference | None = None
    unit_of_measure: Annotated[UnitOfMeasureReference | None, Field(alias="unitOfMeasure")] = None
    vendor: CompanyReference | None = None
    vendor_sku: Annotated[str | None, Field(alias="vendorSku")] = None
    """
     Max length: 50;
    """


class CatalogPricing(ConnectWiseModel):
    catalog_item: Annotated[CatalogItemReference | None, Field(alias="catalogItem")] = None
    company: CompanyReference | None = None
    date: datetime | None = None
    location: SystemLocationReference | None = None
    price: float | None = None
    quantity: int | None = None


class Certification(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    company: CompanyReference | None = None
    id: int | None = None
    name: str
    """
     Max length: 50;
    """


class ChargeCode(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    allow_all_expense_type_flag: Annotated[bool | None, Field(alias="allowAllExpenseTypeFlag")] = None
    bill_time: Annotated[
        Literal["Billable", "DoNotBill", "NoCharge", "NoDefault"] | None, Field(alias="billTime")
    ] = None
    company: CompanyReference | None = None
    department: SystemDepartmentReference | None = None
    expense_entry_flag: Annotated[bool | None, Field(alias="expenseEntryFlag")] = None
    expense_type_ids: Annotated[list[int] | None, Field(alias="expenseTypeIds")] = None
    id: int | None = None
    integration_xref: Annotated[str | None, Field(alias="integrationXref")] = None
    """
     Max length: 50;
    """
    location: SystemLocationReference | None = None
    name: str
    """
     Max length: 50;
    """
    time_entry_flag: Annotated[bool | None, Field(alias="timeEntryFlag")] = None
    work_role: Annotated[WorkRoleReference | None, Field(alias="workRole")] = None
    work_type: Annotated[WorkTypeReference | None, Field(alias="workType")] = None


class ChargeCodeExpenseType(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    charge_code: Annotated[ChargeCodeReference | None, Field(alias="chargeCode")] = None
    id: int | None = None
    type: ExpenseTypeReference | None = None


class ChargeCodeInfo(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    allow_all_expense_type_flag: Annotated[bool | None, Field(alias="allowAllExpenseTypeFlag")] = None
    department: SystemDepartmentReference | None = None
    expense_entry_flag: Annotated[bool | None, Field(alias="expenseEntryFlag")] = None
    expense_type_ids: Annotated[list[int] | None, Field(alias="expenseTypeIds")] = None
    id: int | None = None
    location: SystemLocationReference | None = None
    name: str | None = None
    time_entry_flag: Annotated[bool | None, Field(alias="timeEntryFlag")] = None
    work_role: Annotated[WorkRoleReference | None, Field(alias="workRole")] = None
    work_type: Annotated[WorkTypeReference | None, Field(alias="workType")] = None


class ClearPickerRequest(ConnectWiseModel):
    member: MemberReference | None = None
    type: Literal["Company", "Vendor"] | None = None


class Commission(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    agreement: AgreementReference | None = None
    agreement_type: Annotated[AgreementTypeReference | None, Field(alias="agreementType")] = None
    agreements_flag: Annotated[bool | None, Field(alias="agreementsFlag")] = None
    billing_method: Annotated[
        Literal["Agreement", "CreditMemo", "DownPayment", "Miscellaneous", "Progress", "Standard"] | None,
        Field(alias="billingMethod"),
    ] = None
    commission_basis: Annotated[Literal["GrossProfit", "SalesAmount"] | None, Field(alias="commissionBasis")] = None
    commission_percent: Annotated[float | None, Field(alias="commissionPercent")] = None
    company: CompanyReference | None = None
    date_end: Annotated[datetime | None, Field(alias="dateEnd")] = None
    date_start: Annotated[datetime | None, Field(alias="dateStart")] = None
    department: SystemDepartmentReference | None = None
    id: int | None = None
    invoice_option: Annotated[Literal["AllInvoices", "PaidInvoices"] | None, Field(alias="invoiceOption")] = None
    item: IvItemReference | None = None
    location: SystemLocationReference | None = None
    member: MemberReference | None = None
    my_opportunities_flag: Annotated[bool | None, Field(alias="myOpportunitiesFlag")] = None
    number_of_months: Annotated[int | None, Field(alias="numberOfMonths")] = None
    product_category: Annotated[ProductCategoryReference | None, Field(alias="productCategory")] = None
    product_sub_category: Annotated[ProductSubCategoryReference | None, Field(alias="productSubCategory")] = None
    products_flag: Annotated[bool | None, Field(alias="productsFlag")] = None
    project: ProjectReference | None = None
    project_board: Annotated[ProjectBoardReference | None, Field(alias="projectBoard")] = None
    project_type: Annotated[ProjectTypeReference | None, Field(alias="projectType")] = None
    service_board: Annotated[BoardReference | None, Field(alias="serviceBoard")] = None
    service_type: Annotated[ServiceTypeReference | None, Field(alias="serviceType")] = None
    services_flag: Annotated[bool | None, Field(alias="servicesFlag")] = None
    site: SiteReference | None = None
    territory: SystemLocationReference | None = None
    ticket: TicketReference | None = None


class Company(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    account_number: Annotated[str | None, Field(alias="accountNumber")] = None
    address_line1: Annotated[str | None, Field(alias="addressLine1")] = None
    """
    At least one address field is required -- addressLine1, addressLine2, city, state, zip and/or country Max length: 50;
    """
    address_line2: Annotated[str | None, Field(alias="addressLine2")] = None
    """
    At least one address field is required -- addressLine1, addressLine2, city, state, zip and/or country Max length: 50;
    """
    annual_revenue: Annotated[float | None, Field(alias="annualRevenue")] = None
    bill_to_company: Annotated[CompanyReference | None, Field(alias="billToCompany")] = None
    billing_contact: Annotated[ContactReference | None, Field(alias="billingContact")] = None
    billing_site: Annotated[SiteReference | None, Field(alias="billingSite")] = None
    billing_terms: Annotated[BillingTermsReference | None, Field(alias="billingTerms")] = None
    calendar: CalendarReference | None = None
    city: str | None = None
    """
    At least one address field is required -- addressLine1, addressLine2, city, state, zip and/or country Max length: 50;
    """
    company_entity_type: Annotated[EntityTypeReference | None, Field(alias="companyEntityType")] = None
    country: CountryReference | None = None
    currency: CurrencyReference | None = None
    custom_fields: Annotated[list[CustomFieldValue] | None, Field(alias="customFields")] = None
    date_acquired: Annotated[datetime | None, Field(alias="dateAcquired")] = None
    date_deleted: Annotated[datetime | None, Field(alias="dateDeleted")] = None
    default_contact: Annotated[ContactReference | None, Field(alias="defaultContact")] = None
    deleted_by: Annotated[str | None, Field(alias="deletedBy")] = None
    deleted_flag: Annotated[bool | None, Field(alias="deletedFlag")] = None
    facebook_url: Annotated[str | None, Field(alias="facebookUrl")] = None
    fax_number: Annotated[str | None, Field(alias="faxNumber")] = None
    """
     Max length: 30;
    """
    id: int | None = None
    identifier: str
    """
     Max length: 30;
    """
    integrator_tags: Annotated[list[str] | None, Field(alias="integratorTags")] = None
    invoice_cc_email_address: Annotated[str | None, Field(alias="invoiceCCEmailAddress")] = None
    invoice_delivery_method: Annotated[BillingDeliveryReference | None, Field(alias="invoiceDeliveryMethod")] = None
    invoice_template: Annotated[InvoiceTemplateReference | None, Field(alias="invoiceTemplate")] = None
    invoice_to_email_address: Annotated[str | None, Field(alias="invoiceToEmailAddress")] = None
    is_vendor_flag: Annotated[bool | None, Field(alias="isVendorFlag")] = None
    lead_flag: Annotated[bool | None, Field(alias="leadFlag")] = None
    lead_source: Annotated[str | None, Field(alias="leadSource")] = None
    """
     Max length: 50;
    """
    linked_in_url: Annotated[str | None, Field(alias="linkedInUrl")] = None
    market: MarketDescriptionReference | None = None
    mobile_guid: Annotated[UUID | None, Field(alias="mobileGuid")] = None
    name: str
    """
     Max length: 50;
    """
    number_of_employees: Annotated[int | None, Field(alias="numberOfEmployees")] = None
    ownership_type: Annotated[OwnershipTypeReference | None, Field(alias="ownershipType")] = None
    parent_company: Annotated[CompanyReference | None, Field(alias="parentCompany")] = None
    phone_number: Annotated[str | None, Field(alias="phoneNumber")] = None
    """
     Max length: 30;
    """
    pricing_schedule: Annotated[PricingScheduleReference | None, Field(alias="pricingSchedule")] = None
    reseller_identifier: Annotated[str | None, Field(alias="resellerIdentifier")] = None
    revenue_year: Annotated[int | None, Field(alias="revenueYear")] = None
    sic_code: Annotated[SicCodeReference | None, Field(alias="sicCode")] = None
    site: SiteReference | None = None
    state: str | None = None
    """
    At least one address field is required -- addressLine1, addressLine2, city, state, zip and/or country Max length: 50;
    """
    status: CompanyStatusReference | None = None
    tax_code: Annotated[TaxCodeReference | None, Field(alias="taxCode")] = None
    tax_identifier: Annotated[str | None, Field(alias="taxIdentifier")] = None
    territory: SystemLocationReference | None = None
    territory_manager: Annotated[MemberReference | None, Field(alias="territoryManager")] = None
    time_zone_setup: Annotated[TimeZoneSetupReference | None, Field(alias="timeZoneSetup")] = None
    twitter_url: Annotated[str | None, Field(alias="twitterUrl")] = None
    types: list[CompanyTypeReference] | None = None
    """
    Integrer array of Company_Type_Recids to be assigned to company that can be passed in only during new company creation (post)
                To update existing companies type, use the /company/companyTypeAssociations or /company/companies/{ID}/typeAssociations endpoints
    """
    unsubscribe_flag: Annotated[bool | None, Field(alias="unsubscribeFlag")] = None
    user_defined_field1: Annotated[str | None, Field(alias="userDefinedField1")] = None
    """
     Max length: 50;
    """
    user_defined_field10: Annotated[str | None, Field(alias="userDefinedField10")] = None
    """
     Max length: 50;
    """
    user_defined_field2: Annotated[str | None, Field(alias="userDefinedField2")] = None
    """
     Max length: 50;
    """
    user_defined_field3: Annotated[str | None, Field(alias="userDefinedField3")] = None
    """
     Max length: 50;
    """
    user_defined_field4: Annotated[str | None, Field(alias="userDefinedField4")] = None
    """
     Max length: 50;
    """
    user_defined_field5: Annotated[str | None, Field(alias="userDefinedField5")] = None
    """
     Max length: 50;
    """
    user_defined_field6: Annotated[str | None, Field(alias="userDefinedField6")] = None
    """
     Max length: 50;
    """
    user_defined_field7: Annotated[str | None, Field(alias="userDefinedField7")] = None
    """
     Max length: 50;
    """
    user_defined_field8: Annotated[str | None, Field(alias="userDefinedField8")] = None
    """
     Max length: 50;
    """
    user_defined_field9: Annotated[str | None, Field(alias="userDefinedField9")] = None
    """
     Max length: 50;
    """
    vendor_identifier: Annotated[str | None, Field(alias="vendorIdentifier")] = None
    website: str | None = None
    """
     Max length: 255;
    """
    year_established: Annotated[int | None, Field(alias="yearEstablished")] = None
    zip: str | None = None
    """
    At least one address field is required -- addressLine1, addressLine2, city, state, zip and/or country Max length: 12;
    """


class CompanyCompanyTypeAssociation(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    company: CompanyReference | None = None
    id: int | None = None
    type: CompanyTypeReference | None = None


class CompanyConfiguration(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    active_flag: Annotated[bool | None, Field(alias="activeFlag")] = None
    backup_billable_space_gb: Annotated[float | None, Field(alias="backupBillableSpaceGb")] = None
    backup_failed: Annotated[int | None, Field(alias="backupFailed")] = None
    backup_incomplete: Annotated[int | None, Field(alias="backupIncomplete")] = None
    backup_month: Annotated[int | None, Field(alias="backupMonth")] = None
    backup_protected_device_list: Annotated[str | None, Field(alias="backupProtectedDeviceList")] = None
    backup_restores: Annotated[int | None, Field(alias="backupRestores")] = None
    backup_server_name: Annotated[str | None, Field(alias="backupServerName")] = None
    """
     Max length: 50;
    """
    backup_successes: Annotated[int | None, Field(alias="backupSuccesses")] = None
    backup_year: Annotated[int | None, Field(alias="backupYear")] = None
    bill_flag: Annotated[bool | None, Field(alias="billFlag")] = None
    business_unit_id: Annotated[int | None, Field(alias="businessUnitId")] = None
    company: CompanyReference | None = None
    company_location_id: Annotated[int | None, Field(alias="companyLocationId")] = None
    contact: ContactReference | None = None
    cpu_speed: Annotated[str | None, Field(alias="cpuSpeed")] = None
    """
     Max length: 100;
    """
    custom_fields: Annotated[list[CustomFieldValue] | None, Field(alias="customFields")] = None
    default_gateway: Annotated[str | None, Field(alias="defaultGateway")] = None
    """
     Max length: 50;
    """
    device_identifier: Annotated[str | None, Field(alias="deviceIdentifier")] = None
    """
     Max length: 100;
    """
    display_vendor_flag: Annotated[bool | None, Field(alias="displayVendorFlag")] = None
    id: int | None = None
    installation_date: Annotated[datetime | None, Field(alias="installationDate")] = None
    installed_by: Annotated[MemberReference | None, Field(alias="installedBy")] = None
    ip_address: Annotated[str | None, Field(alias="ipAddress")] = None
    """
     Max length: 50;
    """
    last_backup_date: Annotated[datetime | None, Field(alias="lastBackupDate")] = None
    last_login_name: Annotated[str | None, Field(alias="lastLoginName")] = None
    """
     Max length: 100;
    """
    local_hard_drives: Annotated[str | None, Field(alias="localHardDrives")] = None
    location_id: Annotated[int | None, Field(alias="locationId")] = None
    mac_address: Annotated[str | None, Field(alias="macAddress")] = None
    """
     Max length: 25;
    """
    management_link: Annotated[str | None, Field(alias="managementLink")] = None
    """
     Max length: 1000;
    """
    manufacturer: ManufacturerReference | None = None
    manufacturer_part_number: Annotated[str | None, Field(alias="manufacturerPartNumber")] = None
    """
     Max length: 50;
    """
    mobile_guid: Annotated[UUID | None, Field(alias="mobileGuid")] = None
    model_number: Annotated[str | None, Field(alias="modelNumber")] = None
    """
     Max length: 50;
    """
    name: str
    """
     Max length: 100;
    """
    needs_renewal_flag: Annotated[bool | None, Field(alias="needsRenewalFlag")] = None
    notes: str | None = None
    os_info: Annotated[str | None, Field(alias="osInfo")] = None
    """
     Max length: 250;
    """
    os_type: Annotated[str | None, Field(alias="osType")] = None
    """
     Max length: 250;
    """
    parent_configuration_id: Annotated[int | None, Field(alias="parentConfigurationId")] = None
    purchase_date: Annotated[datetime | None, Field(alias="purchaseDate")] = None
    questions: list[ConfigurationQuestion] | None = None
    ram: str | None = None
    """
     Max length: 25;
    """
    remote_link: Annotated[str | None, Field(alias="remoteLink")] = None
    """
     Max length: 1000;
    """
    serial_number: Annotated[str | None, Field(alias="serialNumber")] = None
    """
     Max length: 250;
    """
    show_automate_flag: Annotated[bool | None, Field(alias="showAutomateFlag")] = None
    show_remote_flag: Annotated[bool | None, Field(alias="showRemoteFlag")] = None
    site: SiteReference | None = None
    sla: SLAReference | None = None
    status: ConfigurationStatusReference | None = None
    tag_number: Annotated[str | None, Field(alias="tagNumber")] = None
    """
     Max length: 50;
    """
    type: ConfigurationTypeReference | None = None
    vendor: CompanyReference | None = None
    vendor_notes: Annotated[str | None, Field(alias="vendorNotes")] = None
    warranty_expiration_date: Annotated[datetime | None, Field(alias="warrantyExpirationDate")] = None


class CompanyContactTypeAssociation(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    contact: ContactReference | None = None
    id: int | None = None
    type: ContactTypeReference | None = None


class CompanyCompanyTypeAssociationCompanyTypeAssociation(CompanyCompanyTypeAssociation):
    pass


class CompanyCustomNote(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    company: CompanyReference | None = None
    custom_note: Annotated[str, Field(alias="customNote")]
    """
     Max length: 1500;
    """
    id: int | None = None
    status: CompanyStatusReference | None = None


class CompanyFinance(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    bill_complete_pm_flag: Annotated[bool | None, Field(alias="billCompletePmFlag")] = None
    bill_complete_sr_flag: Annotated[bool | None, Field(alias="billCompleteSrFlag")] = None
    bill_override_flag: Annotated[bool | None, Field(alias="billOverrideFlag")] = None
    bill_restrict_pm_flag: Annotated[bool | None, Field(alias="billRestrictPmFlag")] = None
    bill_sr_flag: Annotated[bool | None, Field(alias="billSrFlag")] = None
    bill_unapproved_pm_flag: Annotated[bool | None, Field(alias="billUnapprovedPmFlag")] = None
    bill_unapproved_sr_flag: Annotated[bool | None, Field(alias="billUnapprovedSrFlag")] = None
    company: CompanyReference | None = None
    custom_fields: Annotated[list[CustomFieldValue] | None, Field(alias="customFields")] = None
    email_template: Annotated[EmailTemplateReference | None, Field(alias="emailTemplate")] = None
    id: int | None = None


class CompanyGroup(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    all_contacts_flag: Annotated[bool | None, Field(alias="allContactsFlag")] = None
    company: CompanyReference | None = None
    contact_ids: Annotated[list[int] | None, Field(alias="contactIds")] = None
    default_contact_flag: Annotated[bool | None, Field(alias="defaultContactFlag")] = None
    group: GroupReference | None = None
    id: int | None = None
    """
     Required On Updates;
    """
    remove_all_contacts_flag: Annotated[bool | None, Field(alias="removeAllContactsFlag")] = None
    unsubscribe_flag: Annotated[bool | None, Field(alias="unsubscribeFlag")] = None


class CompanyManagementSummary(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    agreement: AgreementReference | None = None
    alerts_generated: Annotated[str | None, Field(alias="alertsGenerated")] = None
    company: CompanyReference | None = None
    cpu_utilization: Annotated[float | None, Field(alias="cpuUtilization")] = None
    device_type: Annotated[
        Literal["WorkstationsAndServers", "BackupStats", "Servers", "Workstations"] | None, Field(alias="deviceType")
    ] = None
    """
    deviceType is required if the managementSolution is Legacy
    """
    disk_cleanups: Annotated[int | None, Field(alias="diskCleanups")] = None
    disk_defragmentations: Annotated[int | None, Field(alias="diskDefragmentations")] = None
    disk_space_cleaned_mb: Annotated[int | None, Field(alias="diskSpaceCleanedMb")] = None
    failed_backup_jobs: Annotated[int | None, Field(alias="failedBackupJobs")] = None
    fully_patched_machines: Annotated[int | None, Field(alias="fullyPatchedMachines")] = None
    group_identifier: Annotated[str, Field(alias="groupIdentifier")]
    """
     Max length: 100;
    """
    id: int | None = None
    internet_connectivity: Annotated[float | None, Field(alias="internetConnectivity")] = None
    management_solution: Annotated[ManagementSolutionReference | None, Field(alias="managementSolution")] = None
    memory_utilization: Annotated[float | None, Field(alias="memoryUtilization")] = None
    missing_more_five_patches_machines: Annotated[int | None, Field(alias="missingMoreFivePatchesMachines")] = None
    missing_one_two_patches_machines: Annotated[int | None, Field(alias="missingOneTwoPatchesMachines")] = None
    missing_security_patches: Annotated[str | None, Field(alias="missingSecurityPatches")] = None
    missing_three_five_patches_machines: Annotated[int | None, Field(alias="missingThreeFivePatchesMachines")] = None
    missing_unscanned_patches_machines: Annotated[int | None, Field(alias="missingUnscannedPatchesMachines")] = None
    server_availability: Annotated[int | None, Field(alias="serverAvailability")] = None
    servers_disk_space_low: Annotated[int | None, Field(alias="serversDiskSpaceLow")] = None
    servers_offline: Annotated[int | None, Field(alias="serversOffline")] = None
    snmp_machines: Annotated[int | None, Field(alias="snmpMachines")] = None
    spyware_items_removed: Annotated[int | None, Field(alias="spywareItemsRemoved")] = None
    successful_backup_jobs: Annotated[int | None, Field(alias="successfulBackupJobs")] = None
    total_managed_machines: Annotated[int | None, Field(alias="totalManagedMachines")] = None
    total_notifications: Annotated[int | None, Field(alias="totalNotifications")] = None
    total_servers: Annotated[int | None, Field(alias="totalServers")] = None
    total_windows_servers: Annotated[int | None, Field(alias="totalWindowsServers")] = None
    total_windows_workstations: Annotated[int | None, Field(alias="totalWindowsWorkstations")] = None
    total_workstations: Annotated[int | None, Field(alias="totalWorkstations")] = None
    viruses_removed: Annotated[int | None, Field(alias="virusesRemoved")] = None
    windows_patches_installed: Annotated[int | None, Field(alias="windowsPatchesInstalled")] = None


class CompanyNote(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    company: CompanyReference | None = None
    entered_by: Annotated[str | None, Field(alias="enteredBy")] = None
    flagged: bool | None = None
    id: int | None = None
    text: str
    type: NoteTypeReference | None = None


class CompanyPickerItem(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    company: CompanyReference | None = None
    company_country: Annotated[CountryReference | None, Field(alias="companyCountry")] = None
    company_location: Annotated[SystemLocationReference | None, Field(alias="companyLocation")] = None
    company_site: Annotated[SiteReference | None, Field(alias="companySite")] = None
    company_status: Annotated[CompanyStatusReference | None, Field(alias="companyStatus")] = None
    company_type: Annotated[CompanyTypeReference | None, Field(alias="companyType")] = None
    id: int | None = None
    member: MemberReference | None = None
    vendor_picker_flag: Annotated[bool | None, Field(alias="vendorPickerFlag")] = None
    """
    If true, this record was created by the vendor picker component. Otherwise, the record was created by the company picker component.
    """


class CompanySite(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    address_format: Annotated[str | None, Field(alias="addressFormat")] = None
    address_line1: Annotated[str | None, Field(alias="addressLine1")] = None
    """
     Max length: 50;
    """
    address_line2: Annotated[str | None, Field(alias="addressLine2")] = None
    """
     Max length: 50;
    """
    bill_separate_flag: Annotated[bool | None, Field(alias="billSeparateFlag")] = None
    calendar: CalendarReference | None = None
    city: str | None = None
    """
     Max length: 50;
    """
    company: CompanyReference | None = None
    core_entity_site_identifier: Annotated[str | None, Field(alias="coreEntitySiteIdentifier")] = None
    """
     Max length: 36;
    """
    country: CountryReference | None = None
    default_billing_flag: Annotated[bool | None, Field(alias="defaultBillingFlag")] = None
    default_mailing_flag: Annotated[bool | None, Field(alias="defaultMailingFlag")] = None
    default_shipping_flag: Annotated[bool | None, Field(alias="defaultShippingFlag")] = None
    entity_type: Annotated[EntityTypeReference | None, Field(alias="entityType")] = None
    expense_reimbursement: Annotated[float | None, Field(alias="expenseReimbursement")] = None
    fax_number: Annotated[str | None, Field(alias="faxNumber")] = None
    """
     Max length: 30;
    """
    id: int | None = None
    inactive_flag: Annotated[bool | None, Field(alias="inactiveFlag")] = None
    mobile_guid: Annotated[UUID | None, Field(alias="mobileGuid")] = None
    name: str
    """
     Max length: 50;
    """
    phone_number: Annotated[str | None, Field(alias="phoneNumber")] = None
    """
     Max length: 30;
    """
    primary_address_flag: Annotated[bool | None, Field(alias="primaryAddressFlag")] = None
    state_reference: Annotated[StateReference | None, Field(alias="stateReference")] = None
    tax_code: Annotated[TaxCodeReference | None, Field(alias="taxCode")] = None
    time_zone: Annotated[TimeZoneSetupReference | None, Field(alias="timeZone")] = None
    zip: str | None = None
    """
     Max length: 12;
    """


class CompanyStatus(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    cancel_open_tracks_flag: Annotated[bool | None, Field(alias="cancelOpenTracksFlag")] = None
    custom_note_flag: Annotated[bool | None, Field(alias="customNoteFlag")] = None
    default_flag: Annotated[bool | None, Field(alias="defaultFlag")] = None
    disallow_saving_flag: Annotated[bool | None, Field(alias="disallowSavingFlag")] = None
    id: int | None = None
    inactive_flag: Annotated[bool | None, Field(alias="inactiveFlag")] = None
    name: str
    """
     Max length: 50;
    """
    notification_message: Annotated[str | None, Field(alias="notificationMessage")] = None
    """
     Max length: 500;
    """
    notify_flag: Annotated[bool | None, Field(alias="notifyFlag")] = None
    track: TrackReference | None = None


class CompanyTeam(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    account_manager_flag: Annotated[bool | None, Field(alias="accountManagerFlag")] = None
    company: CompanyReference | None = None
    contact: ContactReference | None = None
    department: SystemDepartmentReference | None = None
    id: int | None = None
    location: SystemLocationReference | None = None
    member: MemberReference | None = None
    sales_flag: Annotated[bool | None, Field(alias="salesFlag")] = None
    team_role: Annotated[TeamRoleReference | None, Field(alias="teamRole")] = None
    tech_flag: Annotated[bool | None, Field(alias="techFlag")] = None


class ConfigurationTypeQuestion(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    configuration_type: Annotated[ConfigurationTypeReference | None, Field(alias="configurationType")] = None
    entry_type: Annotated[Literal["Date", "EntryField", "List", "Option"], Field(alias="entryType")]
    field_type: Annotated[
        Literal[
            "TextArea",
            "Currency",
            "Date",
            "Hyperlink",
            "IPAddress",
            "Checkbox",
            "Number",
            "Percent",
            "Text",
            "Password",
        ],
        Field(alias="fieldType"),
    ]
    id: int | None = None
    inactive_flag: Annotated[bool | None, Field(alias="inactiveFlag")] = None
    number_of_decimals: Annotated[int | None, Field(alias="numberOfDecimals")] = None
    question: str
    """
     Max length: 1000;
    """
    required_flag: Annotated[bool | None, Field(alias="requiredFlag")] = None
    sequence_number: Annotated[float, Field(alias="sequenceNumber")]


class ConfigurationTypeQuestionInfo(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    configuration_type: Annotated[ConfigurationTypeReference | None, Field(alias="configurationType")] = None
    entry_type: Annotated[Literal["Date", "EntryField", "List", "Option"] | None, Field(alias="entryType")] = None
    field_type: Annotated[
        Literal[
            "TextArea",
            "Currency",
            "Date",
            "Hyperlink",
            "IPAddress",
            "Checkbox",
            "Number",
            "Percent",
            "Text",
            "Password",
        ]
        | None,
        Field(alias="fieldType"),
    ] = None
    id: int | None = None
    inactive_flag: Annotated[bool | None, Field(alias="inactiveFlag")] = None
    number_of_decimals: Annotated[int | None, Field(alias="numberOfDecimals")] = None
    question: str | None = None
    required_flag: Annotated[bool | None, Field(alias="requiredFlag")] = None
    sequence_number: Annotated[float | None, Field(alias="sequenceNumber")] = None


class ConfigurationTypeQuestionValue(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    configuration_type: Annotated[ConfigurationTypeReference | None, Field(alias="configurationType")] = None
    default_flag: Annotated[bool | None, Field(alias="defaultFlag")] = None
    id: int | None = None
    inactive_flag: Annotated[bool | None, Field(alias="inactiveFlag")] = None
    question: ConfigurationTypeQuestionReference | None = None
    value: str
    """
     Max length: 1000;
    """


class ConfigurationTypeQuestionValueInfo(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    configuration_type: Annotated[ConfigurationTypeReference | None, Field(alias="configurationType")] = None
    default_flag: Annotated[bool | None, Field(alias="defaultFlag")] = None
    id: int | None = None
    inactive_flag: Annotated[bool | None, Field(alias="inactiveFlag")] = None
    question: ConfigurationTypeQuestionReference | None = None
    value: str | None = None


class Contact(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    address_line1: Annotated[str | None, Field(alias="addressLine1")] = None
    address_line2: Annotated[str | None, Field(alias="addressLine2")] = None
    anniversary: datetime | None = None
    assistant_contact: Annotated[ContactReference | None, Field(alias="assistantContact")] = None
    birth_day: Annotated[str | None, Field(alias="birthDay")] = None
    children: str | None = None
    children_flag: Annotated[bool | None, Field(alias="childrenFlag")] = None
    city: str | None = None
    communication_items: Annotated[list[ContactCommunicationItem] | None, Field(alias="communicationItems")] = None
    company: CompanyReference | None = None
    company_location: Annotated[SystemLocationReference | None, Field(alias="companyLocation")] = None
    country: CountryReference | None = None
    custom_fields: Annotated[list[CustomFieldValue] | None, Field(alias="customFields")] = None
    default_billing_flag: Annotated[bool | None, Field(alias="defaultBillingFlag")] = None
    default_flag: Annotated[bool | None, Field(alias="defaultFlag")] = None
    default_merge_contact_id: Annotated[int | None, Field(alias="defaultMergeContactId")] = None
    default_phone_extension: Annotated[str | None, Field(alias="defaultPhoneExtension")] = None
    default_phone_nbr: Annotated[str | None, Field(alias="defaultPhoneNbr")] = None
    default_phone_type: Annotated[str | None, Field(alias="defaultPhoneType")] = None
    department: ContactDepartmentReference | None = None
    disable_portal_login_flag: Annotated[bool | None, Field(alias="disablePortalLoginFlag")] = None
    facebook_url: Annotated[str | None, Field(alias="facebookUrl")] = None
    first_name: Annotated[str | None, Field(alias="firstName")] = None
    gender: Literal["Female", "Male"] | None = None
    id: int | None = None
    ignore_duplicates: Annotated[bool | None, Field(alias="ignoreDuplicates")] = None
    inactive_flag: Annotated[bool | None, Field(alias="inactiveFlag")] = None
    integrator_tags: Annotated[list[str] | None, Field(alias="integratorTags")] = None
    last_name: Annotated[str | None, Field(alias="lastName")] = None
    linked_in_url: Annotated[str | None, Field(alias="linkedInUrl")] = None
    manager_contact: Annotated[ContactReference | None, Field(alias="managerContact")] = None
    married_flag: Annotated[bool | None, Field(alias="marriedFlag")] = None
    mobile_guid: Annotated[UUID | None, Field(alias="mobileGuid")] = None
    nick_name: Annotated[str | None, Field(alias="nickName")] = None
    photo: DocumentReference | None = None
    portal_password: Annotated[str | None, Field(alias="portalPassword")] = None
    portal_security_level: Annotated[int | None, Field(alias="portalSecurityLevel")] = None
    presence: Literal["NoAgent", "Online", "DoNotDisturb", "Away", "Offline"] | None = None
    relationship: RelationshipReference | None = None
    relationship_override: Annotated[str | None, Field(alias="relationshipOverride")] = None
    school: str | None = None
    security_identifier: Annotated[str | None, Field(alias="securityIdentifier")] = None
    significant_other: Annotated[str | None, Field(alias="significantOther")] = None
    site: SiteReference | None = None
    state: str | None = None
    title: str | None = None
    twitter_url: Annotated[str | None, Field(alias="twitterUrl")] = None
    type_ids: Annotated[list[int] | None, Field(alias="typeIds")] = None
    """
    Integrer array of Contact_Type_Recids to be assigned to contact that can be passed in only during new contact creation (post)
                To update existing contacts type, use the /company/contactTypeAssociations or /company/contacts/{ID}/typeAssociations endpoints
    """
    types: list[ContactTypeReference] | None = None
    unsubscribe_flag: Annotated[bool | None, Field(alias="unsubscribeFlag")] = None
    user_defined_field1: Annotated[str | None, Field(alias="userDefinedField1")] = None
    """
     Max length: 50;
    """
    user_defined_field10: Annotated[str | None, Field(alias="userDefinedField10")] = None
    """
     Max length: 50;
    """
    user_defined_field2: Annotated[str | None, Field(alias="userDefinedField2")] = None
    """
     Max length: 50;
    """
    user_defined_field3: Annotated[str | None, Field(alias="userDefinedField3")] = None
    """
     Max length: 50;
    """
    user_defined_field4: Annotated[str | None, Field(alias="userDefinedField4")] = None
    """
     Max length: 50;
    """
    user_defined_field5: Annotated[str | None, Field(alias="userDefinedField5")] = None
    """
     Max length: 50;
    """
    user_defined_field6: Annotated[str | None, Field(alias="userDefinedField6")] = None
    """
     Max length: 50;
    """
    user_defined_field7: Annotated[str | None, Field(alias="userDefinedField7")] = None
    """
     Max length: 50;
    """
    user_defined_field8: Annotated[str | None, Field(alias="userDefinedField8")] = None
    """
     Max length: 50;
    """
    user_defined_field9: Annotated[str | None, Field(alias="userDefinedField9")] = None
    """
     Max length: 50;
    """
    zip: str | None = None


class ContactContactTypeAssociationContactTypeAssociation(CompanyContactTypeAssociation):
    pass


class ContactGroup(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    company_group_unsubscribed_email_message: Annotated[
        str | None, Field(alias="companyGroupUnsubscribedEmailMessage")
    ] = None
    company_unsubcribed_email_message: Annotated[str | None, Field(alias="companyUnsubcribedEmailMessage")] = None
    contact: ContactReference | None = None
    contact_group_unsubscribed_email_message: Annotated[
        str | None, Field(alias="contactGroupUnsubscribedEmailMessage")
    ] = None
    contact_unsubscribed_email_message: Annotated[str | None, Field(alias="contactUnsubscribedEmailMessage")] = None
    description: str | None = None
    """
     Max length: 50;
    """
    group: GroupReference | None = None
    id: int | None = None
    unsubscribe_flag: Annotated[bool | None, Field(alias="unsubscribeFlag")] = None


class ContactNote(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    contact_id: Annotated[int | None, Field(alias="contactId")] = None
    entered_by: Annotated[str | None, Field(alias="enteredBy")] = None
    flagged: bool | None = None
    id: int | None = None
    text: str
    type: NoteTypeReference | None = None


class Conversion(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    parent_uom: Annotated[UnitOfMeasureReference | None, Field(alias="parentUOM")] = None
    quantity: float | None = None
    uom_type: Annotated[UnitOfMeasureReference | None, Field(alias="uomType")] = None


class ConvertItem(ConnectWiseModel):
    id: int | None = None
    phase: ProjectPhaseReference | None = None
    project: ProjectReference | None = None
    record_type: Annotated[Literal["ProjectIssue", "ProjectTicket", "ServiceTicket"], Field(alias="recordType")]
    wbs_code: Annotated[str | None, Field(alias="wbsCode")] = None


class ConvertToProject(ConnectWiseModel):
    id: int | None = None
    phase: ProjectPhaseReference | None = None
    project: ProjectReference | None = None
    record_type: Annotated[
        Literal["ProjectIssue", "ProjectTicket", "ServiceTicket"] | None, Field(alias="recordType")
    ] = None
    wbs_code: Annotated[str, Field(alias="wbsCode")]


class CorporateStructure(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    base_currency: Annotated[CurrencyReference, Field(alias="baseCurrency")]
    chief_operating_officer: Annotated[MemberReference | None, Field(alias="chiefOperatingOfficer")] = None
    controller: MemberReference | None = None
    dispatcher: MemberReference | None = None
    duty_manager: Annotated[MemberReference | None, Field(alias="dutyManager")] = None
    fiscal_year_start: Annotated[
        Literal[
            "January",
            "February",
            "March",
            "April",
            "May",
            "June",
            "July",
            "August",
            "September",
            "October",
            "November",
            "December",
        ],
        Field(alias="fiscalYearStart"),
    ]
    group_caption: Annotated[str, Field(alias="groupCaption")]
    """
     Max length: 50;
    """
    id: int | None = None
    level1_name: Annotated[str | None, Field(alias="level1Name")] = None
    """
     Max length: 20;
    """
    level2_name: Annotated[str | None, Field(alias="level2Name")] = None
    """
     Max length: 20;
    """
    level3_name: Annotated[str | None, Field(alias="level3Name")] = None
    """
     Max length: 20;
    """
    level4_name: Annotated[str | None, Field(alias="level4Name")] = None
    """
     Max length: 20;
    """
    level5_name: Annotated[str | None, Field(alias="level5Name")] = None
    """
     Max length: 20;
    """
    level_count: Annotated[
        Literal["Level1", "Level2", "Level3", "Level4", "Level5"] | None, Field(alias="levelCount")
    ] = None
    location_caption: Annotated[str, Field(alias="locationCaption")]
    """
     Max length: 50;
    """
    president: MemberReference | None = None
    service_manager: Annotated[MemberReference | None, Field(alias="serviceManager")] = None


class CorporateStructureInfo(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    base_currency: Annotated[CurrencyReference | None, Field(alias="baseCurrency")] = None
    group_caption: Annotated[str | None, Field(alias="groupCaption")] = None
    id: int | None = None
    location_caption: Annotated[str | None, Field(alias="locationCaption")] = None


class Country(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    address_format: Annotated[AddressFormatReference | None, Field(alias="addressFormat")] = None
    city_caption: Annotated[str | None, Field(alias="cityCaption")] = None
    """
     Max length: 25;
    """
    core_entity_country_code: Annotated[
        Literal[
            "AF",
            "AX",
            "AL",
            "DZ",
            "AS",
            "AD",
            "AO",
            "AI",
            "AQ",
            "AR",
            "AM",
            "AW",
            "AT",
            "AZ",
            "BH",
            "BD",
            "BB",
            "BY",
            "BZ",
            "BJ",
            "BM",
            "BT",
            "BO",
            "BQ",
            "BA",
            "BW",
            "BV",
            "IO",
            "BN",
            "BG",
            "BF",
            "BI",
            "CM",
            "CV",
            "KY",
            "CF",
            "TD",
            "CL",
            "CX",
            "CC",
            "CO",
            "KM",
            "CG",
            "CK",
            "CI",
            "HR",
            "CU",
            "CW",
            "CY",
            "CZ",
            "CD",
            "DK",
            "DJ",
            "DM",
            "EC",
            "EG",
            "GQ",
            "ER",
            "EE",
            "ET",
            "FK",
            "FO",
            "FJ",
            "FI",
            "FR",
            "GF",
            "PF",
            "TF",
            "GA",
            "GM",
            "GE",
            "GH",
            "GI",
            "GR",
            "GL",
            "GD",
            "GP",
            "GU",
            "GT",
            "GG",
            "GN",
            "GW",
            "GY",
            "HT",
            "HM",
            "HN",
            "HK",
            "HU",
            "IS",
            "IN",
            "IR",
            "IQ",
            "IE",
            "IM",
            "IT",
            "JM",
            "JP",
            "JE",
            "JO",
            "KZ",
            "KE",
            "KI",
            "XK",
            "KW",
            "KG",
            "LA",
            "LV",
            "LB",
            "LS",
            "LR",
            "LY",
            "LI",
            "LT",
            "LU",
            "MO",
            "MK",
            "MG",
            "MW",
            "MY",
            "ML",
            "MT",
            "MH",
            "MQ",
            "MR",
            "MU",
            "YT",
            "FM",
            "MD",
            "MC",
            "MN",
            "ME",
            "MS",
            "MZ",
            "NA",
            "NR",
            "NP",
            "NC",
            "NZ",
            "NI",
            "NE",
            "NG",
            "NU",
            "NF",
            "KP",
            "MP",
            "OM",
            "PK",
            "PW",
            "PS",
            "PG",
            "PY",
            "PE",
            "PN",
            "PL",
            "PT",
            "PR",
            "RE",
            "RO",
            "RU",
            "RW",
            "BL",
            "SH",
            "PM",
            "VC",
            "WS",
            "SM",
            "ST",
            "SN",
            "RS",
            "SC",
            "SL",
            "SX",
            "SK",
            "SI",
            "SB",
            "SO",
            "ZA",
            "GS",
            "KR",
            "SS",
            "ES",
            "LK",
            "SD",
            "SR",
            "SJ",
            "SZ",
            "SE",
            "SY",
            "TJ",
            "TZ",
            "TH",
            "TL",
            "TG",
            "TK",
            "TO",
            "TN",
            "TR",
            "TV",
            "UG",
            "UA",
            "GB",
            "UM",
            "UZ",
            "VU",
            "VN",
            "WF",
            "EH",
            "YE",
            "ZM",
            "ZW",
            "US",
            "CR",
            "MX",
            "AE",
            "VI",
            "VG",
            "SA",
            "KH",
            "AU",
            "ID",
            "CA",
            "BR",
            "TW",
            "TM",
            "TC",
            "QA",
            "MM",
            "CN",
            "SG",
            "IL",
            "VA",
            "DE",
            "NL",
            "AG",
            "BE",
            "LC",
            "UY",
            "PH",
            "BS",
            "VE",
            "CH",
            "MF",
            "KN",
            "TT",
            "DO",
            "PA",
            "MV",
            "SV",
            "NO",
            "MA",
            "AC",
            "TA",
        ]
        | None,
        Field(alias="coreEntityCountryCode"),
    ] = None
    country_code: Annotated[str | None, Field(alias="countryCode")] = None
    """
     Max length: 2;
    """
    currency: CurrencyReference | None = None
    default_flag: Annotated[bool | None, Field(alias="defaultFlag")] = None
    dialing_prefix: Annotated[str | None, Field(alias="dialingPrefix")] = None
    """
     Max length: 5;
    """
    id: int | None = None
    localization_caption_one: Annotated[str | None, Field(alias="localizationCaptionOne")] = None
    """
     Max length: 25;
    """
    localization_value_one: Annotated[str | None, Field(alias="localizationValueOne")] = None
    """
     Max length: 50;
    """
    name: str
    """
     Max length: 50;
    """
    state_caption: Annotated[str | None, Field(alias="stateCaption")] = None
    """
     Max length: 25;
    """
    zip_caption: Annotated[str | None, Field(alias="zipCaption")] = None
    """
     Max length: 25;
    """
    zip_minimum_length: Annotated[int | None, Field(alias="zipMinimumLength")] = None


class Crm(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    account_manager_role: Annotated[TeamRoleReference | None, Field(alias="accountManagerRole")] = None
    company_id_generation_flag: Annotated[bool | None, Field(alias="companyIdGenerationFlag")] = None
    company_list_count: Annotated[int | None, Field(alias="companyListCount")] = None
    default_year: Annotated[bool | None, Field(alias="defaultYear")] = None
    exclude_spaces_flag: Annotated[bool | None, Field(alias="excludeSpacesFlag")] = None
    field10_caption: Annotated[str | None, Field(alias="field10Caption")] = None
    """
     Max length: 25;
    """
    field1_caption: Annotated[str | None, Field(alias="field1Caption")] = None
    """
     Max length: 25;
    """
    field2_caption: Annotated[str | None, Field(alias="field2Caption")] = None
    """
     Max length: 25;
    """
    field3_caption: Annotated[str | None, Field(alias="field3Caption")] = None
    """
     Max length: 25;
    """
    field4_caption: Annotated[str | None, Field(alias="field4Caption")] = None
    """
     Max length: 25;
    """
    field5_caption: Annotated[str | None, Field(alias="field5Caption")] = None
    """
     Max length: 25;
    """
    field6_caption: Annotated[str | None, Field(alias="field6Caption")] = None
    """
     Max length: 25;
    """
    field7_caption: Annotated[str | None, Field(alias="field7Caption")] = None
    """
     Max length: 25;
    """
    field8_caption: Annotated[str | None, Field(alias="field8Caption")] = None
    """
     Max length: 25;
    """
    field9_caption: Annotated[str | None, Field(alias="field9Caption")] = None
    """
     Max length: 25;
    """
    id: int | None = None
    lock_probability_flag: Annotated[bool | None, Field(alias="lockProbabilityFlag")] = None
    other1_caption: Annotated[str | None, Field(alias="other1Caption")] = None
    """
     Max length: 50;
    """
    other2_caption: Annotated[str | None, Field(alias="other2Caption")] = None
    """
     Max length: 50;
    """
    primary_rep_caption: Annotated[str | None, Field(alias="primaryRepCaption")] = None
    """
     Max length: 50;
    """
    sales_rep_role: Annotated[TeamRoleReference | None, Field(alias="salesRepRole")] = None
    secondary_rep_caption: Annotated[str | None, Field(alias="secondaryRepCaption")] = None
    """
     Max length: 50;
    """
    technical_contact_role: Annotated[TeamRoleReference | None, Field(alias="technicalContactRole")] = None


class CrmInfo(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    account_manager_role: Annotated[TeamRoleReference | None, Field(alias="accountManagerRole")] = None
    field10_caption: Annotated[str | None, Field(alias="field10Caption")] = None
    field1_caption: Annotated[str | None, Field(alias="field1Caption")] = None
    field2_caption: Annotated[str | None, Field(alias="field2Caption")] = None
    field3_caption: Annotated[str | None, Field(alias="field3Caption")] = None
    field4_caption: Annotated[str | None, Field(alias="field4Caption")] = None
    field5_caption: Annotated[str | None, Field(alias="field5Caption")] = None
    field6_caption: Annotated[str | None, Field(alias="field6Caption")] = None
    field7_caption: Annotated[str | None, Field(alias="field7Caption")] = None
    field8_caption: Annotated[str | None, Field(alias="field8Caption")] = None
    field9_caption: Annotated[str | None, Field(alias="field9Caption")] = None
    id: int | None = None
    primary_rep_caption: Annotated[str | None, Field(alias="primaryRepCaption")] = None
    sales_rep_role: Annotated[TeamRoleReference | None, Field(alias="salesRepRole")] = None
    secondary_rep_caption: Annotated[str | None, Field(alias="secondaryRepCaption")] = None
    technical_contact_role: Annotated[TeamRoleReference | None, Field(alias="technicalContactRole")] = None


class CustomReportParameter(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    caption_name: Annotated[str | None, Field(alias="captionName")] = None
    """
    Either a caption name or parameter name is required Max length: 50;
    """
    custom_report: Annotated[CustomReportReference | None, Field(alias="customReport")] = None
    id: int | None = None
    name: str | None = None
    """
    Either a caption name or parameter name is required Max length: 50;
    """


class DepartmentLocation(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    add_all_locations: Annotated[bool | None, Field(alias="addAllLocations")] = None
    department: SystemDepartmentReference | None = None
    department_manager: Annotated[MemberReference | None, Field(alias="departmentManager")] = None
    dispatch: MemberReference | None = None
    duty_manager: Annotated[MemberReference | None, Field(alias="dutyManager")] = None
    id: int | None = None
    ldap_config: Annotated[LdapConfigurationReference | None, Field(alias="ldapConfig")] = None
    location: SystemLocationReference | None = None
    remove_all_locations: Annotated[bool | None, Field(alias="removeAllLocations")] = None
    service_manager: Annotated[MemberReference | None, Field(alias="serviceManager")] = None


class DepartmentLocationInfo(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    department: SystemDepartmentReference | None = None
    id: int | None = None
    location: SystemLocationReference | None = None


class EPayConfiguration(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    currency: CurrencyReference | None = None
    encryption_key: Annotated[str | None, Field(alias="encryptionKey")] = None
    """
     Max length: 500;
    """
    id: int | None = None
    initialization_vector: Annotated[str | None, Field(alias="initializationVector")] = None
    """
     Max length: 500;
    """
    location: SystemLocationReference | None = None
    store_identifier: Annotated[str, Field(alias="storeIdentifier")]
    """
     Max length: 500;
    """
    url: str
    """
     Max length: 400;
    """


class EmailConnector(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    add_cc_flag: Annotated[bool | None, Field(alias="addCcFlag")] = None
    bcc_email_to: Annotated[str | None, Field(alias="bccEmailTo")] = None
    """
     Max length: 250;
    """
    create_contact_flag: Annotated[bool | None, Field(alias="createContactFlag")] = None
    default_company: Annotated[CompanyReference | None, Field(alias="defaultCompany")] = None
    default_member: Annotated[MemberReference | None, Field(alias="defaultMember")] = None
    department: SystemDepartmentReference | None = None
    discard_duplicates_flag: Annotated[bool | None, Field(alias="discardDuplicatesFlag")] = None
    email_errors_to: Annotated[str, Field(alias="emailErrorsTo")]
    """
     Max length: 50;
    """
    email_notify_from: Annotated[str | None, Field(alias="emailNotifyFrom")] = None
    """
     Max length: 50;
    """
    email_server_type: Annotated[Literal["IMAP", "Office365", "Google"] | None, Field(alias="emailServerType")] = None
    google_email_setup: Annotated[GoogleEmailSetupReference | None, Field(alias="googleEmailSetup")] = None
    id: int | None = None
    imap_setup: Annotated[ImapSetupReference | None, Field(alias="imapSetup")] = None
    item_override: Annotated[ServiceItemReference | None, Field(alias="itemOverride")] = None
    location: SystemLocationReference | None = None
    never_respond_flag: Annotated[bool | None, Field(alias="neverRespondFlag")] = None
    no_response_flag: Annotated[bool | None, Field(alias="noResponseFlag")] = None
    office365_email_setup: Annotated[Office365EmailSetupReference | None, Field(alias="office365EmailSetup")] = None
    post_replies_to_ticket_flag: Annotated[bool | None, Field(alias="postRepliesToTicketFlag")] = None
    priority_override: Annotated[PriorityReference | None, Field(alias="priorityOverride")] = None
    response_email_for_existing: Annotated[str | None, Field(alias="responseEmailForExisting")] = None
    response_email_for_new: Annotated[str | None, Field(alias="responseEmailForNew")] = None
    service_board: Annotated[BoardReference | None, Field(alias="serviceBoard")] = None
    set_email_to_default_contact_flag: Annotated[bool | None, Field(alias="setEmailToDefaultContactFlag")] = None
    source_override: Annotated[ServiceSourceReference | None, Field(alias="sourceOverride")] = None
    status_override: Annotated[ServiceStatusReference | None, Field(alias="statusOverride")] = None
    sub_type_override: Annotated[ServiceSubTypeReference | None, Field(alias="subTypeOverride")] = None
    type_override: Annotated[ServiceTypeReference | None, Field(alias="typeOverride")] = None


class EmailConnectorInfo(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    imap_setup: Annotated[ImapSetupReference | None, Field(alias="imapSetup")] = None


class EmailConnectorParsingRule(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    parsing_style: Annotated[EmailConnectorParsingStyleReference | None, Field(alias="parsingStyle")] = None
    parsing_variable: Annotated[EmailConnectorParsingVariableReference | None, Field(alias="parsingVariable")] = None
    priority: int
    search_term: Annotated[str, Field(alias="searchTerm")]
    """
     Max length: 250;
    """
    service_board: Annotated[BoardReference | None, Field(alias="serviceBoard")] = None
    service_item: Annotated[ServiceItemReference | None, Field(alias="serviceItem")] = None
    service_priority: Annotated[PriorityReference | None, Field(alias="servicePriority")] = None
    service_status: Annotated[ServiceStatusReference | None, Field(alias="serviceStatus")] = None
    service_sub_type: Annotated[ServiceSubTypeReference | None, Field(alias="serviceSubType")] = None
    service_type: Annotated[ServiceTypeReference | None, Field(alias="serviceType")] = None


class EmailConnectorParsingStyle(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    parse_rule: Annotated[str, Field(alias="parseRule")]
    """
     Max length: 500;
    """
    parsing_type: Annotated[EmailConnectorParsingTypeReference | None, Field(alias="parsingType")] = None
    priority: int


class ErrorResponseMessage(ConnectWiseModel):
    code: str | None = None
    errors: list[ValidationError] | None = None
    message: str | None = None


class ExpenseEntryAudit(TimeEntryAudit):
    pass


class ExpenseReport(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    date_end: Annotated[datetime | None, Field(alias="dateEnd")] = None
    date_start: Annotated[datetime | None, Field(alias="dateStart")] = None
    due_date: Annotated[datetime | None, Field(alias="dueDate")] = None
    id: int | None = None
    member: MemberReference | None = None
    period: int | None = None
    status: Literal[
        "Open",
        "Rejected",
        "PendingApproval",
        "ErrorsCorrected",
        "PendingProjectApproval",
        "ApprovedByTierOne",
        "RejectBySecondTier",
        "ApprovedByTierTwo",
        "ReadyToBill",
        "Billed",
        "WrittenOff",
        "BilledAgreement",
    ] | None = None
    total: float | None = None
    year: int | None = None


class ExpenseReportAudit(TimeEntryAudit):
    pass


class ExpenseTax(ConnectWiseModel):
    amount: float | None = None
    id: int | None = None
    type: ExpenseTaxTypeReference | None = None


class ExpenseTypeExemption(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    expense_type: Annotated[ExpenseTypeReference, Field(alias="expenseType")]
    id: int | None = None
    taxable_levels: Annotated[list[int] | None, Field(alias="taxableLevels")] = None


class ForecastItem(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    bill_cycle: Annotated[BillingCycleReference | None, Field(alias="billCycle")] = None
    catalog_item: Annotated[IvItemReference | None, Field(alias="catalogItem")] = None
    cost: float | None = None
    cycle_basis: Annotated[str | None, Field(alias="cycleBasis")] = None
    cycles: int | None = None
    forecast_description: Annotated[str | None, Field(alias="forecastDescription")] = None
    """
     Max length: 50;
    """
    forecast_type: Annotated[
        Literal["Other1", "Other2", "Agreement", "Product", "Service"], Field(alias="forecastType")
    ]
    id: int | None = None
    include_flag: Annotated[bool | None, Field(alias="includeFlag")] = None
    link_flag: Annotated[bool | None, Field(alias="linkFlag")] = None
    margin: float | None = None
    opportunity: OpportunityReference | None = None
    percentage: int | None = None
    product_class: Annotated[str | None, Field(alias="productClass")] = None
    product_description: Annotated[str | None, Field(alias="productDescription")] = None
    quantity: float | None = None
    quote_werks_doc_name: Annotated[str | None, Field(alias="quoteWerksDocName")] = None
    """
     Max length: 255;
    """
    quote_werks_doc_no: Annotated[str | None, Field(alias="quoteWerksDocNo")] = None
    """
     Max length: 20;
    """
    quote_werks_quantity: Annotated[int | None, Field(alias="quoteWerksQuantity")] = None
    recurring_cost: Annotated[float | None, Field(alias="recurringCost")] = None
    recurring_date_end: Annotated[datetime | None, Field(alias="recurringDateEnd")] = None
    recurring_date_start: Annotated[datetime | None, Field(alias="recurringDateStart")] = None
    recurring_flag: Annotated[bool | None, Field(alias="recurringFlag")] = None
    recurring_revenue: Annotated[float | None, Field(alias="recurringRevenue")] = None
    revenue: float | None = None
    sequence_number: Annotated[float | None, Field(alias="sequenceNumber")] = None
    status: OpportunityStatusReference | None = None
    sub_number: Annotated[int | None, Field(alias="subNumber")] = None
    taxable_flag: Annotated[bool | None, Field(alias="taxableFlag")] = None


class GLAccount(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    cogs1: str | None = None
    """
     Max length: 255;
    """
    cogs10: str | None = None
    """
     Max length: 255;
    """
    cogs2: str | None = None
    """
     Max length: 255;
    """
    cogs3: str | None = None
    """
     Max length: 255;
    """
    cogs4: str | None = None
    """
     Max length: 255;
    """
    cogs5: str | None = None
    """
     Max length: 255;
    """
    cogs6: str | None = None
    """
     Max length: 255;
    """
    cogs7: str | None = None
    """
     Max length: 255;
    """
    cogs8: str | None = None
    """
     Max length: 255;
    """
    cogs9: str | None = None
    """
     Max length: 255;
    """
    gl_type: Annotated[
        Literal[
            "AP",
            "AR",
            "EE",
            "EI",
            "EO",
            "IA",
            "IT",
            "P",
            "PF",
            "R",
            "RA",
            "RD",
            "RE",
            "RP",
            "ST",
            "SD",
            "ET",
            "FT",
            "PT",
        ],
        Field(alias="glType"),
    ]
    id: int | None = None
    inventory: str | None = None
    """
     Max length: 255;
    """
    mapped_record: Annotated[MappedRecordReference, Field(alias="mappedRecord")]
    mapped_type: Annotated[MappedTypeReference, Field(alias="mappedType")]
    product_id: Annotated[str | None, Field(alias="productId")] = None
    """
     Max length: 255;
    """
    sales_code: Annotated[str | None, Field(alias="salesCode")] = None
    """
     Max length: 255;
    """
    segment1: str | None = None
    """
     Max length: 255;
    """
    segment10: str | None = None
    """
     Max length: 255;
    """
    segment2: str | None = None
    """
     Max length: 255;
    """
    segment3: str | None = None
    """
     Max length: 255;
    """
    segment4: str | None = None
    """
     Max length: 255;
    """
    segment5: str | None = None
    """
     Max length: 255;
    """
    segment6: str | None = None
    """
     Max length: 255;
    """
    segment7: str | None = None
    """
     Max length: 255;
    """
    segment8: str | None = None
    """
     Max length: 255;
    """
    segment9: str | None = None
    """
     Max length: 255;
    """


class GLExportAdjustmentTransactionDetail(ConnectWiseModel):
    account_number: Annotated[str | None, Field(alias="accountNumber")] = None
    cost: float | None = None
    cost_account_number: Annotated[str | None, Field(alias="costAccountNumber")] = None
    description: str | None = None
    gl_class: Annotated[str | None, Field(alias="glClass")] = None
    inventory_account_number: Annotated[str | None, Field(alias="inventoryAccountNumber")] = None
    item: IvItemReference | None = None
    memo: str | None = None
    product_account_number: Annotated[str | None, Field(alias="productAccountNumber")] = None
    quantity: int | None = None
    total: float | None = None


class GLExportCustomer(ConnectWiseModel):
    account_number: Annotated[str | None, Field(alias="accountNumber")] = None
    billing_terms: Annotated[BillingTermsReference | None, Field(alias="billingTerms")] = None
    billing_terms_xref: Annotated[str | None, Field(alias="billingTermsXref")] = None
    city_tax_agency_xref: Annotated[str | None, Field(alias="cityTaxAgencyXref")] = None
    city_tax_rate: Annotated[float | None, Field(alias="cityTaxRate")] = None
    city_tax_xref: Annotated[str | None, Field(alias="cityTaxXref")] = None
    company: CompanyReference | None = None
    company_type: Annotated[CompanyTypeReference | None, Field(alias="companyType")] = None
    composite_tax_agency_xref: Annotated[str | None, Field(alias="compositeTaxAgencyXref")] = None
    composite_tax_rate: Annotated[float | None, Field(alias="compositeTaxRate")] = None
    composite_tax_xref: Annotated[str | None, Field(alias="compositeTaxXref")] = None
    contact: ContactReference | None = None
    country_tax_agency_xref: Annotated[str | None, Field(alias="countryTaxAgencyXref")] = None
    country_tax_rate: Annotated[float | None, Field(alias="countryTaxRate")] = None
    country_tax_xref: Annotated[str | None, Field(alias="countryTaxXref")] = None
    county_tax_agency_xref: Annotated[str | None, Field(alias="countyTaxAgencyXref")] = None
    county_tax_rate: Annotated[float | None, Field(alias="countyTaxRate")] = None
    county_tax_xref: Annotated[str | None, Field(alias="countyTaxXref")] = None
    currency: CurrencyReference | None = None
    due_days: Annotated[int | None, Field(alias="dueDays")] = None
    site: SiteReference | None = None
    state_tax_agency_xref: Annotated[str | None, Field(alias="stateTaxAgencyXref")] = None
    state_tax_rate: Annotated[float | None, Field(alias="stateTaxRate")] = None
    state_tax_xref: Annotated[str | None, Field(alias="stateTaxXref")] = None
    tax_agency_xref: Annotated[str | None, Field(alias="taxAgencyXref")] = None
    tax_code: Annotated[TaxCodeReference | None, Field(alias="taxCode")] = None
    tax_group_rate: Annotated[float | None, Field(alias="taxGroupRate")] = None
    tax_levels: Annotated[list[GLExportCustomerTaxLevel] | None, Field(alias="taxLevels")] = None
    taxable: bool | None = None


class GLExportExpenseBill(ConnectWiseModel):
    ap_account_number: Annotated[str | None, Field(alias="apAccountNumber")] = None
    currency: CurrencyReference | None = None
    detail: list[GLExportExpenseBillDetail] | None = None
    document_date: Annotated[datetime | None, Field(alias="documentDate")] = None
    document_number: Annotated[str | None, Field(alias="documentNumber")] = None
    document_type: Annotated[str | None, Field(alias="documentType")] = None
    gl_class: Annotated[str | None, Field(alias="glClass")] = None
    id: int | None = None
    member: MemberReference | None = None
    memo: str | None = None
    total: float | None = None
    vendor_number: Annotated[str | None, Field(alias="vendorNumber")] = None


class GLExportExpenseOffset(ConnectWiseModel):
    account_number: Annotated[str | None, Field(alias="accountNumber")] = None
    description: str | None = None
    document_date: Annotated[datetime | None, Field(alias="documentDate")] = None
    document_type: Annotated[str | None, Field(alias="documentType")] = None
    gl_class: Annotated[str | None, Field(alias="glClass")] = None
    gl_type_id: Annotated[str | None, Field(alias="glTypeId")] = None
    id: int | None = None
    member: MemberReference | None = None
    memo: str | None = None
    total: float | None = None


class GLExportInventoryTransfer(ConnectWiseModel):
    account_number: Annotated[str | None, Field(alias="accountNumber")] = None
    bin: WarehouseBinReference | None = None
    cogs_xref: Annotated[str | None, Field(alias="cogsXref")] = None
    cost: float | None = None
    cost_account_number: Annotated[str | None, Field(alias="costAccountNumber")] = None
    currency: CurrencyReference | None = None
    description: str | None = None
    document_date: Annotated[datetime | None, Field(alias="documentDate")] = None
    document_type: Annotated[str | None, Field(alias="documentType")] = None
    gl_class: Annotated[str | None, Field(alias="glClass")] = None
    gl_item_id: Annotated[str | None, Field(alias="glItemId")] = None
    gl_type_id: Annotated[str | None, Field(alias="glTypeId")] = None
    id: str | None = None
    inventory_account_number: Annotated[str | None, Field(alias="inventoryAccountNumber")] = None
    inventory_xref: Annotated[str | None, Field(alias="inventoryXref")] = None
    item: IvItemReference | None = None
    item_description: Annotated[str | None, Field(alias="itemDescription")] = None
    item_price: Annotated[float | None, Field(alias="itemPrice")] = None
    item_type_xref: Annotated[str | None, Field(alias="itemTypeXref")] = None
    location_xref: Annotated[str | None, Field(alias="locationXref")] = None
    memo: str | None = None
    offset: GLExportInventoryTransferOffset | None = None
    price_level_xref: Annotated[str | None, Field(alias="priceLevelXref")] = None
    quantity: float | None = None
    sales_code: Annotated[str | None, Field(alias="salesCode")] = None
    sales_description: Annotated[str | None, Field(alias="salesDescription")] = None
    serial_numbers: Annotated[str | None, Field(alias="serialNumbers")] = None
    serialized_flag: Annotated[bool | None, Field(alias="serializedFlag")] = None
    sub_category: Annotated[ProductSubCategoryReference | None, Field(alias="subCategory")] = None
    tax_note: Annotated[str | None, Field(alias="taxNote")] = None
    taxable: bool | None = None
    total: float | None = None
    transfer_from_bin: Annotated[WarehouseBinReference | None, Field(alias="transferFromBin")] = None
    transfer_from_location_xref: Annotated[str | None, Field(alias="transferFromLocationXref")] = None
    transfer_id: Annotated[int | None, Field(alias="transferId")] = None
    transfer_to_bin: Annotated[WarehouseBinReference | None, Field(alias="transferToBin")] = None
    transfer_to_location_xref: Annotated[str | None, Field(alias="transferToLocationXref")] = None
    unit_of_measure: Annotated[UnitOfMeasureReference | None, Field(alias="unitOfMeasure")] = None
    uom_schedule_xref: Annotated[str | None, Field(alias="uomScheduleXref")] = None
    warehouse: WarehouseReference | None = None


class GLExportPurchaseTransactionDetail(ConnectWiseModel):
    account_number: Annotated[str | None, Field(alias="accountNumber")] = None
    cogs_xref: Annotated[str | None, Field(alias="cogsXref")] = None
    cost: float | None = None
    cost_account_number: Annotated[str | None, Field(alias="costAccountNumber")] = None
    currency: CurrencyReference | None = None
    description: str | None = None
    document_date: Annotated[datetime | None, Field(alias="documentDate")] = None
    drop_shipped_flag: Annotated[bool | None, Field(alias="dropShippedFlag")] = None
    gl_class: Annotated[str | None, Field(alias="glClass")] = None
    gl_item_id: Annotated[str | None, Field(alias="glItemId")] = None
    gl_type_id: Annotated[str | None, Field(alias="glTypeId")] = None
    id: int | None = None
    inventory_account_number: Annotated[str | None, Field(alias="inventoryAccountNumber")] = None
    inventory_xref: Annotated[str | None, Field(alias="inventoryXref")] = None
    item: IvItemReference | None = None
    item_cost: Annotated[float | None, Field(alias="itemCost")] = None
    item_description: Annotated[str | None, Field(alias="itemDescription")] = None
    item_price: Annotated[float | None, Field(alias="itemPrice")] = None
    item_type_xref: Annotated[str | None, Field(alias="itemTypeXref")] = None
    line_number: Annotated[int | None, Field(alias="lineNumber")] = None
    location_xref: Annotated[str | None, Field(alias="locationXref")] = None
    memo: str | None = None
    price_level_xref: Annotated[str | None, Field(alias="priceLevelXref")] = None
    purchase_header_tax_group: Annotated[str | None, Field(alias="purchaseHeaderTaxGroup")] = None
    quantity: float | None = None
    sales_code: Annotated[str | None, Field(alias="salesCode")] = None
    sales_description: Annotated[str | None, Field(alias="salesDescription")] = None
    serial_numbers: Annotated[str | None, Field(alias="serialNumbers")] = None
    serialized_flag: Annotated[bool | None, Field(alias="serializedFlag")] = None
    shipment_method: Annotated[ShipmentMethodReference | None, Field(alias="shipmentMethod")] = None
    sub_category: Annotated[ProductSubCategoryReference | None, Field(alias="subCategory")] = None
    tax_agency_xref: Annotated[str | None, Field(alias="taxAgencyXref")] = None
    tax_code: Annotated[TaxCodeReference | None, Field(alias="taxCode")] = None
    tax_code_xref: Annotated[str | None, Field(alias="taxCodeXref")] = None
    tax_note: Annotated[str | None, Field(alias="taxNote")] = None
    tax_rate: Annotated[float | None, Field(alias="taxRate")] = None
    taxable: bool | None = None
    total: float | None = None
    unit_of_measure: Annotated[UnitOfMeasureReference | None, Field(alias="unitOfMeasure")] = None
    uom_schedule_xref: Annotated[str | None, Field(alias="uomScheduleXref")] = None
    vendor_account_number: Annotated[str | None, Field(alias="vendorAccountNumber")] = None
    vendor_number: Annotated[str | None, Field(alias="vendorNumber")] = None
    warehouse_bin: Annotated[WarehouseBinReference | None, Field(alias="warehouseBin")] = None
    warehouse_site: Annotated[SiteReference | None, Field(alias="warehouseSite")] = None


class GLExportPurchaseTransactionDetailTax(ConnectWiseModel):
    account_number: Annotated[str | None, Field(alias="accountNumber")] = None
    cogs_xref: Annotated[str | None, Field(alias="cogsXref")] = None
    cost: float | None = None
    cost_account_number: Annotated[str | None, Field(alias="costAccountNumber")] = None
    currency: CurrencyReference | None = None
    document_date: Annotated[datetime | None, Field(alias="documentDate")] = None
    drop_shipped_flag: Annotated[bool | None, Field(alias="dropShippedFlag")] = None
    gl_class: Annotated[str | None, Field(alias="glClass")] = None
    gl_item_id: Annotated[str | None, Field(alias="glItemId")] = None
    gl_type_id: Annotated[str | None, Field(alias="glTypeId")] = None
    id: int | None = None
    inventory_account_number: Annotated[str | None, Field(alias="inventoryAccountNumber")] = None
    inventory_xref: Annotated[str | None, Field(alias="inventoryXref")] = None
    item: IvItemReference | None = None
    item_cost: Annotated[float | None, Field(alias="itemCost")] = None
    item_description: Annotated[str | None, Field(alias="itemDescription")] = None
    item_price: Annotated[float | None, Field(alias="itemPrice")] = None
    item_type_xref: Annotated[str | None, Field(alias="itemTypeXref")] = None
    line_number: Annotated[int | None, Field(alias="lineNumber")] = None
    location_xref: Annotated[str | None, Field(alias="locationXref")] = None
    memo: str | None = None
    price_level_xref: Annotated[str | None, Field(alias="priceLevelXref")] = None
    purchase_header_tax_group: Annotated[str | None, Field(alias="purchaseHeaderTaxGroup")] = None
    quantity: float | None = None
    sales_code: Annotated[str | None, Field(alias="salesCode")] = None
    sales_description: Annotated[str | None, Field(alias="salesDescription")] = None
    serial_numbers: Annotated[str | None, Field(alias="serialNumbers")] = None
    serialized_flag: Annotated[bool | None, Field(alias="serializedFlag")] = None
    shipment_method: Annotated[ShipmentMethodReference | None, Field(alias="shipmentMethod")] = None
    sub_category: Annotated[ProductSubCategoryReference | None, Field(alias="subCategory")] = None
    tax_agency_xref: Annotated[str | None, Field(alias="taxAgencyXref")] = None
    tax_code: Annotated[TaxCodeReference | None, Field(alias="taxCode")] = None
    tax_note: Annotated[str | None, Field(alias="taxNote")] = None
    tax_rate: Annotated[float | None, Field(alias="taxRate")] = None
    tax_rate_percent: Annotated[float | None, Field(alias="taxRatePercent")] = None
    taxable_flag: Annotated[bool | None, Field(alias="taxableFlag")] = None
    total: float | None = None
    unit_of_measure: Annotated[UnitOfMeasureReference | None, Field(alias="unitOfMeasure")] = None
    uom_schedule_xref: Annotated[str | None, Field(alias="uomScheduleXref")] = None
    vendor_account_number: Annotated[str | None, Field(alias="vendorAccountNumber")] = None
    vendor_number: Annotated[str | None, Field(alias="vendorNumber")] = None
    warehouse_bin: Annotated[WarehouseBinReference | None, Field(alias="warehouseBin")] = None
    warehouse_site: Annotated[SiteReference | None, Field(alias="warehouseSite")] = None


class GLExportTransactionDetail(ConnectWiseModel):
    account_number: Annotated[str | None, Field(alias="accountNumber")] = None
    cogs_xref: Annotated[str | None, Field(alias="cogsXref")] = None
    cost: float | None = None
    cost_account_number: Annotated[str | None, Field(alias="costAccountNumber")] = None
    currency: CurrencyReference | None = None
    description: str | None = None
    document_date: Annotated[datetime | None, Field(alias="documentDate")] = None
    document_type: Annotated[str | None, Field(alias="documentType")] = None
    drop_shipped_flag: Annotated[bool | None, Field(alias="dropShippedFlag")] = None
    gl_class: Annotated[str | None, Field(alias="glClass")] = None
    gl_item_id: Annotated[str | None, Field(alias="glItemId")] = None
    gl_type_id: Annotated[str | None, Field(alias="glTypeId")] = None
    id: int | None = None
    inventory_account_number: Annotated[str | None, Field(alias="inventoryAccountNumber")] = None
    inventory_xref: Annotated[str | None, Field(alias="inventoryXref")] = None
    invoice_summary_option: Annotated[str | None, Field(alias="invoiceSummaryOption")] = None
    item: IvItemReference | None = None
    item_cost: Annotated[float | None, Field(alias="itemCost")] = None
    item_description: Annotated[str | None, Field(alias="itemDescription")] = None
    item_price: Annotated[float | None, Field(alias="itemPrice")] = None
    item_taxable_flag: Annotated[bool | None, Field(alias="itemTaxableFlag")] = None
    item_type_xref: Annotated[str | None, Field(alias="itemTypeXref")] = None
    location_xref: Annotated[str | None, Field(alias="locationXref")] = None
    memo: str | None = None
    price_level_xref: Annotated[str | None, Field(alias="priceLevelXref")] = None
    product: ProductReference | None = None
    product_account_number: Annotated[str | None, Field(alias="productAccountNumber")] = None
    quantity: float | None = None
    sales_code: Annotated[str | None, Field(alias="salesCode")] = None
    sales_description: Annotated[str | None, Field(alias="salesDescription")] = None
    serial_numbers: Annotated[str | None, Field(alias="serialNumbers")] = None
    serialized_flag: Annotated[bool | None, Field(alias="serializedFlag")] = None
    shipment_method: Annotated[ShipmentMethodReference | None, Field(alias="shipmentMethod")] = None
    sub_category: Annotated[ProductSubCategoryReference | None, Field(alias="subCategory")] = None
    tax_agency_xref: Annotated[str | None, Field(alias="taxAgencyXref")] = None
    tax_code: Annotated[TaxCodeReference | None, Field(alias="taxCode")] = None
    tax_code_xref: Annotated[str | None, Field(alias="taxCodeXref")] = None
    tax_levels: Annotated[list[GLExportTransactionDetailTaxLevel] | None, Field(alias="taxLevels")] = None
    tax_note: Annotated[str | None, Field(alias="taxNote")] = None
    tax_rate: Annotated[float | None, Field(alias="taxRate")] = None
    tax_rate_percent: Annotated[float | None, Field(alias="taxRatePercent")] = None
    taxable2_flag: Annotated[bool | None, Field(alias="taxable2Flag")] = None
    taxable3_flag: Annotated[bool | None, Field(alias="taxable3Flag")] = None
    taxable4_flag: Annotated[bool | None, Field(alias="taxable4Flag")] = None
    taxable5_flag: Annotated[bool | None, Field(alias="taxable5Flag")] = None
    taxable_flag: Annotated[bool | None, Field(alias="taxableFlag")] = None
    time_entry: Annotated[TimeEntryReference | None, Field(alias="timeEntry")] = None
    total: float | None = None
    unit_of_measure: Annotated[UnitOfMeasureReference | None, Field(alias="unitOfMeasure")] = None
    uom_schedule_xref: Annotated[str | None, Field(alias="uomScheduleXref")] = None
    warehouse_bin: Annotated[WarehouseBinReference | None, Field(alias="warehouseBin")] = None
    warehouse_site: Annotated[SiteReference | None, Field(alias="warehouseSite")] = None


class GLExportVendor(ConnectWiseModel):
    account_number: Annotated[str | None, Field(alias="accountNumber")] = None
    billing_terms: Annotated[BillingTermsReference | None, Field(alias="billingTerms")] = None
    company: CompanyReference | None = None
    contact: ContactReference | None = None
    due_days: Annotated[int | None, Field(alias="dueDays")] = None
    member: MemberReference | None = None
    site: SiteReference | None = None
    tax_code: Annotated[TaxCodeReference | None, Field(alias="taxCode")] = None
    vendor: CompanyReference | None = None
    vendor_number: Annotated[str | None, Field(alias="vendorNumber")] = None


class GLPath(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    database_name: Annotated[str | None, Field(alias="databaseName")] = None
    """
     Max length: 100;
    """
    id: int | None = None
    last_payment_sync: Annotated[datetime | None, Field(alias="lastPaymentSync")] = None
    last_payment_sync_by: Annotated[MemberReference | None, Field(alias="lastPaymentSyncBy")] = None
    location: SystemLocationReference | None = None
    path: str | None = None
    """
     Max length: 255;
    """
    sql_server_name: Annotated[str | None, Field(alias="sqlServerName")] = None
    """
     Max length: 255;
    """


class Holiday(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    all_day_flag: Annotated[bool | None, Field(alias="allDayFlag")] = None
    """
    Can be set to false to set a holiday for specific hours (Defaults to True)
    """
    date: date
    holiday_list: Annotated[HolidayListReference | None, Field(alias="holidayList")] = None
    id: int | None = None
    name: str
    """
     Max length: 50;
    """
    time_end: Annotated[datetime | None, Field(alias="timeEnd")] = None
    time_start: Annotated[datetime | None, Field(alias="timeStart")] = None


class HolidayInfo(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    all_day_flag: Annotated[bool | None, Field(alias="allDayFlag")] = None
    """
    Can be set to false to set a holiday for specific hours (Defaults to True)
    """
    date: str | None = None
    holiday_list: Annotated[HolidayListReference | None, Field(alias="holidayList")] = None
    id: int | None = None
    name: str | None = None
    time_end: Annotated[datetime | None, Field(alias="timeEnd")] = None
    time_start: Annotated[datetime | None, Field(alias="timeStart")] = None


class InOutBoard(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    additional_info: Annotated[str | None, Field(alias="additionalInfo")] = None
    """
     Max length: 100;
    """
    date_back: Annotated[datetime, Field(alias="dateBack")]
    id: int | None = None
    in_out_type: Annotated[InOutTypeReference | None, Field(alias="inOutType")] = None
    member: MemberReference | None = None


class Info(ConnectWiseModel):
    cloud_region: Annotated[str | None, Field(alias="cloudRegion")] = None
    is_cloud: Annotated[bool | None, Field(alias="isCloud")] = None
    license_bits: Annotated[list[LicenseBit] | None, Field(alias="licenseBits")] = None
    server_time_zone: Annotated[str | None, Field(alias="serverTimeZone")] = None
    version: str | None = None


class IntegratorLogin(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    activity_api_flag: Annotated[bool | None, Field(alias="activityApiFlag")] = None
    activity_callback_url: Annotated[str | None, Field(alias="activityCallbackUrl")] = None
    """
     Max length: 1000;
    """
    activity_legacy_callback_flag: Annotated[bool | None, Field(alias="activityLegacyCallbackFlag")] = None
    agreement_api_flag: Annotated[bool | None, Field(alias="agreementApiFlag")] = None
    agreement_callback_legacy_flag: Annotated[bool | None, Field(alias="agreementCallbackLegacyFlag")] = None
    agreement_callback_url: Annotated[str | None, Field(alias="agreementCallbackUrl")] = None
    """
     Max length: 1000;
    """
    board: BoardReference | None = None
    can_access_all_apis_flag: Annotated[bool | None, Field(alias="canAccessAllApisFlag")] = None
    """
    Setting this flag to true will create an integrator that can access all of the available apis in the system.
                If this field is set to true, both the member and board fields are required.
    """
    can_access_all_records_flag: Annotated[bool | None, Field(alias="canAccessAllRecordsFlag")] = None
    """
    This flag controls whether the integrator can access only the db records it created, or all system records
    """
    company_api_flag: Annotated[bool | None, Field(alias="companyApiFlag")] = None
    company_callback_url: Annotated[str | None, Field(alias="companyCallbackUrl")] = None
    """
     Max length: 1000;
    """
    company_legacy_callback_flag: Annotated[bool | None, Field(alias="companyLegacyCallbackFlag")] = None
    configuration_api_flag: Annotated[bool | None, Field(alias="configurationApiFlag")] = None
    configuration_auto_child_flag: Annotated[bool | None, Field(alias="configurationAutoChildFlag")] = None
    configuration_callback_url: Annotated[str | None, Field(alias="configurationCallbackUrl")] = None
    """
     Max length: 1000;
    """
    configuration_childling_flag: Annotated[bool | None, Field(alias="configurationChildlingFlag")] = None
    """
    True if integrator is allowed to child configurations
    """
    configuration_legacy_callback_flag: Annotated[bool | None, Field(alias="configurationLegacyCallbackFlag")] = None
    contact_api_flag: Annotated[bool | None, Field(alias="contactApiFlag")] = None
    contact_callback_url: Annotated[str | None, Field(alias="contactCallbackUrl")] = None
    """
     Max length: 1000;
    """
    contact_legacy_callback_flag: Annotated[bool | None, Field(alias="contactLegacyCallbackFlag")] = None
    date_inactivated: Annotated[datetime | None, Field(alias="dateInactivated")] = None
    document_api_flag: Annotated[bool | None, Field(alias="documentApiFlag")] = None
    id: int | None = None
    inactivated_by: Annotated[MemberReference | None, Field(alias="inactivatedBy")] = None
    inactive_flag: Annotated[bool | None, Field(alias="inactiveFlag")] = None
    invoice_api_flag: Annotated[bool | None, Field(alias="invoiceApiFlag")] = None
    managed_services_api_flag: Annotated[bool | None, Field(alias="managedServicesApiFlag")] = None
    managed_services_auto_child_flag: Annotated[bool | None, Field(alias="managedServicesAutoChildFlag")] = None
    managed_services_childing_flag: Annotated[bool | None, Field(alias="managedServicesChildingFlag")] = None
    """
    True if integrator is allowed to child configurations
    """
    marketing_api_flag: Annotated[bool | None, Field(alias="marketingApiFlag")] = None
    member: MemberReference | None = None
    member_api_flag: Annotated[bool | None, Field(alias="memberApiFlag")] = None
    opportunity_api_flag: Annotated[bool | None, Field(alias="opportunityApiFlag")] = None
    opportunity_callback_url: Annotated[str | None, Field(alias="opportunityCallbackUrl")] = None
    """
     Max length: 1000;
    """
    opportunity_conversion_api_flag: Annotated[bool | None, Field(alias="opportunityConversionApiFlag")] = None
    """
    True if the member has access to the Opportunity Conversion Api
    """
    opportunity_legacy_callback_flag: Annotated[bool | None, Field(alias="opportunityLegacyCallbackFlag")] = None
    password: str | None = None
    """
    The password will never be returned in response Max length: 50;
    """
    product_api_flag: Annotated[bool | None, Field(alias="productApiFlag")] = None
    product_callback_url: Annotated[str | None, Field(alias="productCallbackUrl")] = None
    """
     Max length: 1000;
    """
    product_legacy_callback_flag: Annotated[bool | None, Field(alias="productLegacyCallbackFlag")] = None
    project_api_flag: Annotated[bool | None, Field(alias="projectApiFlag")] = None
    project_callback_url: Annotated[str | None, Field(alias="projectCallbackUrl")] = None
    """
     Max length: 1000;
    """
    project_legacy_callback_flag: Annotated[bool | None, Field(alias="projectLegacyCallbackFlag")] = None
    purchasing_api_flag: Annotated[bool | None, Field(alias="purchasingApiFlag")] = None
    purchasing_callback_url: Annotated[str | None, Field(alias="purchasingCallbackUrl")] = None
    """
     Max length: 1000;
    """
    purchasing_legacy_callback_flag: Annotated[bool | None, Field(alias="purchasingLegacyCallbackFlag")] = None
    reporting_api_flag: Annotated[bool | None, Field(alias="reportingApiFlag")] = None
    schedule_api_flag: Annotated[bool | None, Field(alias="scheduleApiFlag")] = None
    schedule_callback_url: Annotated[str | None, Field(alias="scheduleCallbackUrl")] = None
    """
     Max length: 1000;
    """
    schedule_legacy_callback_flag: Annotated[bool | None, Field(alias="scheduleLegacyCallbackFlag")] = None
    service_board_callback_url: Annotated[str | None, Field(alias="serviceBoardCallbackUrl")] = None
    """
     Max length: 1000;
    """
    service_board_legacy_callback_flag: Annotated[bool | None, Field(alias="serviceBoardLegacyCallbackFlag")] = None
    service_ticket_api_flag: Annotated[bool | None, Field(alias="serviceTicketApiFlag")] = None
    system_api_flag: Annotated[bool | None, Field(alias="systemApiFlag")] = None
    time_entry_api_flag: Annotated[bool | None, Field(alias="timeEntryApiFlag")] = None
    time_entry_callback_url: Annotated[str | None, Field(alias="timeEntryCallbackUrl")] = None
    """
     Max length: 1000;
    """
    time_entry_legacy_callback_flag: Annotated[bool | None, Field(alias="timeEntryLegacyCallbackFlag")] = None
    username: str
    """
     Max length: 50;
    """


class InventoryOnHand(CatalogInventory):
    pass


class Invoice(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    account_number: Annotated[str | None, Field(alias="accountNumber")] = None
    add_to_batch_email_list: Annotated[bool | None, Field(alias="addToBatchEmailList")] = None
    adjusted_by: Annotated[str | None, Field(alias="adjustedBy")] = None
    adjustment_reason: Annotated[str | None, Field(alias="adjustmentReason")] = None
    agreement: AgreementReference | None = None
    agreement_amount: Annotated[float | None, Field(alias="agreementAmount")] = None
    apply_to_id: Annotated[int | None, Field(alias="applyToId")] = None
    apply_to_type: Annotated[
        Literal["All", "Agreement", "Project", "ProjectPhase", "SalesOrder", "Ticket"] | None,
        Field(alias="applyToType"),
    ] = None
    attention: str | None = None
    """
     Max length: 60;
    """
    balance: float | None = None
    bill_to_company: Annotated[CompanyReference | None, Field(alias="billToCompany")] = None
    billing_setup_reference: Annotated[BillingSetupReference | None, Field(alias="billingSetupReference")] = None
    billing_site: Annotated[SiteReference | None, Field(alias="billingSite")] = None
    billing_site_address_line1: Annotated[str | None, Field(alias="billingSiteAddressLine1")] = None
    billing_site_address_line2: Annotated[str | None, Field(alias="billingSiteAddressLine2")] = None
    billing_site_city: Annotated[str | None, Field(alias="billingSiteCity")] = None
    billing_site_country: Annotated[str | None, Field(alias="billingSiteCountry")] = None
    billing_site_state: Annotated[str | None, Field(alias="billingSiteState")] = None
    billing_site_zip: Annotated[str | None, Field(alias="billingSiteZip")] = None
    billing_terms: Annotated[BillingTermsReference | None, Field(alias="billingTerms")] = None
    bottom_comment: Annotated[str | None, Field(alias="bottomComment")] = None
    company: CompanyReference | None = None
    credits: float | None = None
    currency: CurrencyReference | None = None
    custom_fields: Annotated[list[CustomFieldValue] | None, Field(alias="customFields")] = None
    customer_po: Annotated[str | None, Field(alias="customerPO")] = None
    """
     Max length: 50;
    """
    date: datetime | None = None
    department_id: Annotated[int | None, Field(alias="departmentId")] = None
    """
    departmentId is only required for special invoices
    """
    downpayment_applied: Annotated[float | None, Field(alias="downpaymentApplied")] = None
    downpayment_previously_taxed_flag: Annotated[bool | None, Field(alias="downpaymentPreviouslyTaxedFlag")] = None
    due_date: Annotated[datetime | None, Field(alias="dueDate")] = None
    email_template_id: Annotated[int | None, Field(alias="emailTemplateId")] = None
    """
    Can be obtained via InvoiceEmailTemplate report
    """
    expense_total: Annotated[float | None, Field(alias="expenseTotal")] = None
    id: int | None = None
    internal_notes: Annotated[str | None, Field(alias="internalNotes")] = None
    invoice_number: Annotated[str | None, Field(alias="invoiceNumber")] = None
    """
     Max length: 15; Required On Updates;
    """
    invoice_template: Annotated[InvoiceTemplateDetailReference | None, Field(alias="invoiceTemplate")] = None
    location_id: Annotated[int | None, Field(alias="locationId")] = None
    """
     Required On Updates;
    """
    override_down_payment_amount_flag: Annotated[bool | None, Field(alias="overrideDownPaymentAmountFlag")] = None
    payments: float | None = None
    phase: ProjectPhaseReference | None = None
    previous_progress_applied: Annotated[float | None, Field(alias="previousProgressApplied")] = None
    product_total: Annotated[float | None, Field(alias="productTotal")] = None
    project: ProjectReference | None = None
    reference: str | None = None
    """
     Max length: 50;
    """
    remaining_downpayment: Annotated[float | None, Field(alias="remainingDownpayment")] = None
    restrict_downpayment_flag: Annotated[bool | None, Field(alias="restrictDownpaymentFlag")] = None
    sales_order: Annotated[SalesOrderReference | None, Field(alias="salesOrder")] = None
    sales_tax: Annotated[float | None, Field(alias="salesTax")] = None
    service_adjustment_amount: Annotated[float | None, Field(alias="serviceAdjustmentAmount")] = None
    service_total: Annotated[float | None, Field(alias="serviceTotal")] = None
    ship_to_attention: Annotated[str | None, Field(alias="shipToAttention")] = None
    """
     Max length: 60;
    """
    ship_to_company: Annotated[CompanyReference | None, Field(alias="shipToCompany")] = None
    shipping_site: Annotated[SiteReference | None, Field(alias="shippingSite")] = None
    shipping_site_address_line1: Annotated[str | None, Field(alias="shippingSiteAddressLine1")] = None
    shipping_site_address_line2: Annotated[str | None, Field(alias="shippingSiteAddressLine2")] = None
    shipping_site_city: Annotated[str | None, Field(alias="shippingSiteCity")] = None
    shipping_site_country: Annotated[str | None, Field(alias="shippingSiteCountry")] = None
    shipping_site_state: Annotated[str | None, Field(alias="shippingSiteState")] = None
    shipping_site_zip: Annotated[str | None, Field(alias="shippingSiteZip")] = None
    special_invoice_flag: Annotated[bool | None, Field(alias="specialInvoiceFlag")] = None
    status: BillingStatusReference | None = None
    subtotal: float | None = None
    tax_code: Annotated[TaxCodeReference | None, Field(alias="taxCode")] = None
    taxable_flag: Annotated[bool | None, Field(alias="taxableFlag")] = None
    template_setup_id: Annotated[int | None, Field(alias="templateSetupId")] = None
    """
    Can be obtained via InvoiceTemplate report
    """
    territory_id: Annotated[int | None, Field(alias="territoryId")] = None
    ticket: TicketReference | None = None
    top_comment: Annotated[str | None, Field(alias="topComment")] = None
    total: float | None = None
    type: Literal["Agreement", "CreditMemo", "DownPayment", "Miscellaneous", "Progress", "Standard"]


class InvoiceEmailTemplate(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    attach_invoice_flag: Annotated[bool | None, Field(alias="attachInvoiceFlag")] = None
    body: str | None = None
    copy_sender_flag: Annotated[bool | None, Field(alias="copySenderFlag")] = None
    email_address: Annotated[str | None, Field(alias="emailAddress")] = None
    """
    From fields (first name, last name, email address) are required if useSenderFlag is false Max length: 100;
    """
    first_name: Annotated[str | None, Field(alias="firstName")] = None
    """
    From fields (first name, last name, email address) are required if useSenderFlag is false Max length: 100;
    """
    id: int | None = None
    invoice_status: Annotated[BillingStatusReference | None, Field(alias="invoiceStatus")] = None
    last_name: Annotated[str | None, Field(alias="lastName")] = None
    """
    From fields (first name, last name, email address) are required if useSenderFlag is false Max length: 100;
    """
    name: str
    """
     Max length: 50;
    """
    service_survey: Annotated[ServiceSurveyReference | None, Field(alias="serviceSurvey")] = None
    subject: str
    """
     Max length: 200;
    """
    use_sender_flag: Annotated[bool | None, Field(alias="useSenderFlag")] = None


class KPI(ConnectWiseModel):
    category: KPICategoryReference | None = None
    date_filter: Annotated[str | None, Field(alias="dateFilter")] = None
    id: int | None = None
    inactive_flag: Annotated[bool | None, Field(alias="inactiveFlag")] = None
    name: str | None = None
    sort_order: Annotated[int | None, Field(alias="sortOrder")] = None


class KnowledgeBaseCategory(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    approver: MemberReference | None = None
    department: SystemDepartmentReference | None = None
    id: int | None = None
    location: SystemLocationReference | None = None
    name: str
    """
     Max length: 50;
    """


class KnowledgeBaseSettings(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    default_approver: Annotated[MemberReference | None, Field(alias="defaultApprover")] = None
    id: int | None = None
    require_approval: Annotated[bool, Field(alias="requireApproval")]


class KnowledgeBaseSubCategory(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    category: KBCategoryReference
    department: SystemDepartmentReference | None = None
    id: int | None = None
    location: SystemLocationReference | None = None
    name: str
    """
     Max length: 50;
    """


class Location(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    calendar: CalendarReference | None = None
    client_flag: Annotated[bool | None, Field(alias="clientFlag")] = None
    department_ids: Annotated[list[int] | None, Field(alias="departmentIds")] = None
    id: int | None = None
    location_flag: Annotated[bool | None, Field(alias="locationFlag")] = None
    manager: MemberReference | None = None
    name: str
    """
     Max length: 50;
    """
    override_address_line1: Annotated[str | None, Field(alias="overrideAddressLine1")] = None
    """
     Max length: 50;
    """
    override_address_line2: Annotated[str | None, Field(alias="overrideAddressLine2")] = None
    """
     Max length: 50;
    """
    override_city: Annotated[str | None, Field(alias="overrideCity")] = None
    """
     Max length: 50;
    """
    override_country: Annotated[CountryReference | None, Field(alias="overrideCountry")] = None
    override_fax_number: Annotated[str | None, Field(alias="overrideFaxNumber")] = None
    """
     Max length: 15;
    """
    override_phone_number: Annotated[str | None, Field(alias="overridePhoneNumber")] = None
    """
     Max length: 15;
    """
    override_state: Annotated[str | None, Field(alias="overrideState")] = None
    """
     Max length: 50;
    """
    override_zip: Annotated[str | None, Field(alias="overrideZip")] = None
    """
     Max length: 12;
    """
    owa_url: Annotated[str | None, Field(alias="owaUrl")] = None
    """
     Max length: 100;
    """
    owner_level_id: Annotated[int | None, Field(alias="ownerLevelId")] = None
    payroll_xref: Annotated[str | None, Field(alias="payrollXref")] = None
    """
     Max length: 10;
    """
    reports_to: Annotated[SystemLocationReference | None, Field(alias="reportsTo")] = None
    sales_rep: Annotated[str | None, Field(alias="salesRep")] = None
    """
     Max length: 50;
    """
    structure_level: Annotated[CorporateStructureLevelReference | None, Field(alias="structureLevel")] = None
    time_zone_setup: Annotated[TimeZoneSetupReference | None, Field(alias="timeZoneSetup")] = None
    work_role_ids: Annotated[list[int] | None, Field(alias="workRoleIds")] = None


class LocationDepartment(DepartmentLocationInfo):
    pass


class LocationWorkRole(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    location: SystemLocationReference | None = None
    work_role: Annotated[WorkRoleReference | None, Field(alias="workRole")] = None
    work_role_inactive_flag: Annotated[bool | None, Field(alias="workRoleInactiveFlag")] = None


class ManagedDeviceAccount(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    managed_devices_integration: Annotated[
        ManagedDevicesIntegrationReference | None, Field(alias="managedDevicesIntegration")
    ] = None
    password: str | None = None
    username: str | None = None


class ManagedDevicesIntegration(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    config_bill_customer_flag: Annotated[bool | None, Field(alias="configBillCustomerFlag")] = None
    default_billing_level: Annotated[Literal["Detail", "Summary"], Field(alias="defaultBillingLevel")]
    default_department: Annotated[SystemDepartmentReference | None, Field(alias="defaultDepartment")] = None
    default_location: Annotated[SystemLocationReference | None, Field(alias="defaultLocation")] = None
    disable_new_cross_references_flag: Annotated[bool | None, Field(alias="disableNewCrossReferencesFlag")] = None
    global_login_password: Annotated[str | None, Field(alias="globalLoginPassword")] = None
    """
    This is only required when globalLoginFlag = true Max length: 50;
    """
    global_login_username: Annotated[str | None, Field(alias="globalLoginUsername")] = None
    """
    This is only required when globalLoginFlag = true Max length: 50;
    """
    id: int | None = None
    integrator_login: Annotated[IntegratorLoginReference | None, Field(alias="integratorLogin")] = None
    login_by: Annotated[Literal["Global", "Member"], Field(alias="loginBy")]
    management_it_setup_type: Annotated[str | None, Field(alias="managementItSetupType")] = None
    match_on_serial_number_flag: Annotated[bool | None, Field(alias="matchOnSerialNumberFlag")] = None
    name: str
    """
     Max length: 30;
    """
    portal_url: Annotated[str | None, Field(alias="portalUrl")] = None
    """
     Max length: 200;
    """
    solution: str
    """
     Max length: 30;
    """


class ManagedDevicesIntegrationCrossReference(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    agreement_type: Annotated[AgreementTypeReference | None, Field(alias="agreementType")] = None
    configuration_type: Annotated[ConfigurationTypeReference | None, Field(alias="configurationType")] = None
    id: int | None = None
    inactive_flag: Annotated[bool | None, Field(alias="inactiveFlag")] = None
    managed_devices_integration: Annotated[
        ManagedDevicesIntegrationReference | None, Field(alias="managedDevicesIntegration")
    ] = None
    product: IvItemReference | None = None
    vendor_level: Annotated[str | None, Field(alias="vendorLevel")] = None
    """
     Max length: 255;
    """
    vendor_type: Annotated[str | None, Field(alias="vendorType")] = None
    """
     Max length: 255;
    """


class ManagedDevicesIntegrationLogin(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    managed_devices_integration: Annotated[
        ManagedDevicesIntegrationReference | None, Field(alias="managedDevicesIntegration")
    ] = None
    member: MemberReference | None = None
    password: str | None = None
    """
     Max length: 50;
    """
    username: str
    """
     Max length: 50;
    """


class ManagedDevicesIntegrationNotification(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    log_type: Annotated[
        Literal["All", "Error", "NewManagedSolution", "NewDeviceType", "NewConfiguration", "NewAddition", "Info"],
        Field(alias="logType"),
    ]
    managed_devices_integration: Annotated[
        ManagedDevicesIntegrationReference | None, Field(alias="managedDevicesIntegration")
    ] = None
    member: MemberReference | None = None
    notify_who: Annotated[NotificationRecipientReference | None, Field(alias="notifyWho")] = None


class ManagementReportNotification(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    company: CompanyReference | None = None
    email: str | None = None
    """
     Max length: 50;
    """
    global_flag: Annotated[bool | None, Field(alias="globalFlag")] = None
    id: int | None = None
    member: MemberReference | None = None
    notify_who: Annotated[NotificationRecipientReference | None, Field(alias="notifyWho")] = None


class Member(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    admin_flag: Annotated[bool | None, Field(alias="adminFlag")] = None
    agreement_invoicing_display_options: Annotated[
        Literal["RemainOnInvoicingScreen", "ShowRecentInvoices"], Field(alias="agreementInvoicingDisplayOptions")
    ]
    allow_expenses_entered_against_companies_flag: Annotated[
        bool | None, Field(alias="allowExpensesEnteredAgainstCompaniesFlag")
    ] = None
    allow_in_cell_entry_on_time_sheet: Annotated[bool | None, Field(alias="allowInCellEntryOnTimeSheet")] = None
    authentication_service_type: Annotated[
        Literal["AuthAnvil", "GoogleAuthenticator", "Email"] | None, Field(alias="authenticationServiceType")
    ] = None
    auto_popup_quick_notes_with_stopwatch: Annotated[
        bool | None, Field(alias="autoPopupQuickNotesWithStopwatch")
    ] = None
    auto_start_stopwatch: Annotated[bool | None, Field(alias="autoStartStopwatch")] = None
    billable_forecast: Annotated[float | None, Field(alias="billableForecast")] = None
    calendar: CalendarReference | None = None
    calendar_sync_integration_flag: Annotated[bool | None, Field(alias="calendarSyncIntegrationFlag")] = None
    client_id: Annotated[str | None, Field(alias="clientId")] = None
    company_activity_tab_format: Annotated[
        Literal["SummaryList", "DetailList"], Field(alias="companyActivityTabFormat")
    ]
    copy_column_layouts_and_filters: Annotated[bool | None, Field(alias="copyColumnLayoutsAndFilters")] = None
    copy_pod_layouts: Annotated[bool | None, Field(alias="copyPodLayouts")] = None
    copy_shared_default_views: Annotated[bool | None, Field(alias="copySharedDefaultViews")] = None
    country: CountryReference | None = None
    custom_fields: Annotated[list[CustomFieldValue] | None, Field(alias="customFields")] = None
    daily_capacity: Annotated[float | None, Field(alias="dailyCapacity")] = None
    days_tolerance: Annotated[int | None, Field(alias="daysTolerance")] = None
    default_department: Annotated[SystemDepartmentReference | None, Field(alias="defaultDepartment")] = None
    default_email: Annotated[Literal["Office", "Mobile", "Home"], Field(alias="defaultEmail")]
    default_location: Annotated[SystemLocationReference | None, Field(alias="defaultLocation")] = None
    default_phone: Annotated[Literal["Office", "Mobile", "Home"], Field(alias="defaultPhone")]
    disable_online_flag: Annotated[bool | None, Field(alias="disableOnlineFlag")] = None
    employee_identifer: Annotated[str | None, Field(alias="employeeIdentifer")] = None
    """
     Max length: 10;
    """
    enable_ldap_authentication_flag: Annotated[bool | None, Field(alias="enableLdapAuthenticationFlag")] = None
    enable_mobile_flag: Annotated[bool | None, Field(alias="enableMobileFlag")] = None
    enable_mobile_gps_flag: Annotated[bool | None, Field(alias="enableMobileGpsFlag")] = None
    enter_time_against_company_flag: Annotated[bool | None, Field(alias="enterTimeAgainstCompanyFlag")] = None
    excluded_project_board_ids: Annotated[list[int] | None, Field(alias="excludedProjectBoardIds")] = None
    excluded_service_board_ids: Annotated[list[int] | None, Field(alias="excludedServiceBoardIds")] = None
    expense_approver: Annotated[MemberReference | None, Field(alias="expenseApprover")] = None
    first_name: Annotated[str, Field(alias="firstName")]
    """
     Max length: 30;
    """
    from_member_rec_id: Annotated[int | None, Field(alias="fromMemberRecId")] = None
    global_search_default_sort: Annotated[
        Literal["None", "LastUpdatedDesc", "LastUpdatedAsc", "CreatedDesc", "CreatedAsc"] | None,
        Field(alias="globalSearchDefaultSort"),
    ] = None
    global_search_default_ticket_filter: Annotated[
        Literal["OpenRecords", "ClosedRecords", "AllRecords"] | None, Field(alias="globalSearchDefaultTicketFilter")
    ] = None
    hide_member_in_dispatch_portal_flag: Annotated[bool | None, Field(alias="hideMemberInDispatchPortalFlag")] = None
    hire_date: Annotated[datetime, Field(alias="hireDate")]
    home_email: Annotated[str | None, Field(alias="homeEmail")] = None
    """
     Max length: 250;
    """
    home_extension: Annotated[str | None, Field(alias="homeExtension")] = None
    """
     Max length: 10;
    """
    home_phone: Annotated[str | None, Field(alias="homePhone")] = None
    """
     Max length: 15;
    """
    hourly_cost: Annotated[float | None, Field(alias="hourlyCost")] = None
    hourly_rate: Annotated[float | None, Field(alias="hourlyRate")] = None
    id: int | None = None
    identifier: str
    """
     Max length: 15;
    """
    inactive_date: Annotated[datetime | None, Field(alias="inactiveDate")] = None
    inactive_flag: Annotated[bool | None, Field(alias="inactiveFlag")] = None
    include_in_utilization_reporting_flag: Annotated[
        bool | None, Field(alias="includeInUtilizationReportingFlag")
    ] = None
    invoice_screen_default_tab_format: Annotated[
        Literal["ShowInvoicingTab", "ShowAgreementInvoicingTab"], Field(alias="invoiceScreenDefaultTabFormat")
    ]
    invoice_time_tab_format: Annotated[Literal["SummaryList", "DetailList"], Field(alias="invoiceTimeTabFormat")]
    invoicing_display_options: Annotated[
        Literal["RemainOnInvoicingScreen", "ShowRecentInvoices"], Field(alias="invoicingDisplayOptions")
    ]
    last_login: Annotated[str | None, Field(alias="lastLogin")] = None
    last_name: Annotated[str | None, Field(alias="lastName")] = None
    """
     Max length: 30;
    """
    ldap_configuration: Annotated[LdapConfigurationReference | None, Field(alias="ldapConfiguration")] = None
    ldap_user_name: Annotated[str | None, Field(alias="ldapUserName")] = None
    """
     Max length: 50;
    """
    license_class: Annotated[Literal["A", "C", "F", "X"], Field(alias="licenseClass")]
    """
    F = Full Member, A = API Member, C = StreamlineIT Member, X = Subcontractor Member
    """
    mapi_name: Annotated[str | None, Field(alias="mapiName")] = None
    member_personas: Annotated[list[int] | None, Field(alias="memberPersonas")] = None
    middle_initial: Annotated[str | None, Field(alias="middleInitial")] = None
    """
     Max length: 1;
    """
    minimum_hours: Annotated[float | None, Field(alias="minimumHours")] = None
    mobile_email: Annotated[str | None, Field(alias="mobileEmail")] = None
    """
     Max length: 250;
    """
    mobile_extension: Annotated[str | None, Field(alias="mobileExtension")] = None
    """
     Max length: 10;
    """
    mobile_phone: Annotated[str | None, Field(alias="mobilePhone")] = None
    """
     Max length: 15;
    """
    notes: str | None = None
    office365: MemberOffice365 | None = None
    office_email: Annotated[str | None, Field(alias="officeEmail")] = None
    """
     Max length: 250;
    """
    office_extension: Annotated[str | None, Field(alias="officeExtension")] = None
    """
     Max length: 10;
    """
    office_phone: Annotated[str | None, Field(alias="officePhone")] = None
    """
     Max length: 15;
    """
    partner_portal_flag: Annotated[bool | None, Field(alias="partnerPortalFlag")] = None
    password: str | None = None
    """
    ConditionallyRequired. API Member will get random password generated Max length: 60;
    """
    phone_integration_type: Annotated[
        Literal["TAPI", "SKYPE", "NONE"] | None, Field(alias="phoneIntegrationType")
    ] = None
    phone_source: Annotated[str | None, Field(alias="phoneSource")] = None
    photo: DocumentReference | None = None
    primary_email: Annotated[str | None, Field(alias="primaryEmail")] = None
    """
     Max length: 250;
    """
    project_default_board: Annotated[ProjectBoardReference | None, Field(alias="projectDefaultBoard")] = None
    project_default_department: Annotated[
        SystemDepartmentReference | None, Field(alias="projectDefaultDepartment")
    ] = None
    project_default_location: Annotated[SystemLocationReference | None, Field(alias="projectDefaultLocation")] = None
    report_card: Annotated[ReportCardReference | None, Field(alias="reportCard")] = None
    reports_to: Annotated[MemberReference | None, Field(alias="reportsTo")] = None
    require_expense_entry_flag: Annotated[bool | None, Field(alias="requireExpenseEntryFlag")] = None
    require_start_and_end_time_on_time_entry_flag: Annotated[
        bool | None, Field(alias="requireStartAndEndTimeOnTimeEntryFlag")
    ] = None
    require_time_sheet_entry_flag: Annotated[bool | None, Field(alias="requireTimeSheetEntryFlag")] = None
    restrict_default_sales_territory_flag: Annotated[
        bool | None, Field(alias="restrictDefaultSalesTerritoryFlag")
    ] = None
    restrict_default_warehouse_bin_flag: Annotated[bool | None, Field(alias="restrictDefaultWarehouseBinFlag")] = None
    restrict_default_warehouse_flag: Annotated[bool | None, Field(alias="restrictDefaultWarehouseFlag")] = None
    restrict_department_flag: Annotated[bool | None, Field(alias="restrictDepartmentFlag")] = None
    restrict_location_flag: Annotated[bool | None, Field(alias="restrictLocationFlag")] = None
    restrict_project_default_department_flag: Annotated[
        bool | None, Field(alias="restrictProjectDefaultDepartmentFlag")
    ] = None
    restrict_project_default_location_flag: Annotated[
        bool | None, Field(alias="restrictProjectDefaultLocationFlag")
    ] = None
    restrict_schedule_flag: Annotated[bool | None, Field(alias="restrictScheduleFlag")] = None
    restrict_service_default_department_flag: Annotated[
        bool | None, Field(alias="restrictServiceDefaultDepartmentFlag")
    ] = None
    restrict_service_default_location_flag: Annotated[
        bool | None, Field(alias="restrictServiceDefaultLocationFlag")
    ] = None
    sales_default_location: Annotated[SystemLocationReference | None, Field(alias="salesDefaultLocation")] = None
    schedule_capacity: Annotated[float | None, Field(alias="scheduleCapacity")] = None
    schedule_default_department: Annotated[
        SystemDepartmentReference | None, Field(alias="scheduleDefaultDepartment")
    ] = None
    schedule_default_location: Annotated[SystemLocationReference | None, Field(alias="scheduleDefaultLocation")] = None
    security_location: Annotated[SystemLocationReference | None, Field(alias="securityLocation")] = None
    security_role: Annotated[SecurityRoleReference | None, Field(alias="securityRole")] = None
    service_board_team_ids: Annotated[list[int] | None, Field(alias="serviceBoardTeamIds")] = None
    service_default_board: Annotated[BoardReference | None, Field(alias="serviceDefaultBoard")] = None
    service_default_department: Annotated[
        SystemDepartmentReference | None, Field(alias="serviceDefaultDepartment")
    ] = None
    service_default_location: Annotated[SystemLocationReference | None, Field(alias="serviceDefaultLocation")] = None
    service_location: Annotated[ServiceLocationReference | None, Field(alias="serviceLocation")] = None
    signature: str | None = None
    sso_settings: Annotated[MemberSsoSettingsReference | None, Field(alias="ssoSettings")] = None
    structure_level: Annotated[StructureReference | None, Field(alias="structureLevel")] = None
    sts_user_admin_url: Annotated[str | None, Field(alias="stsUserAdminUrl")] = None
    time_approver: Annotated[MemberReference | None, Field(alias="timeApprover")] = None
    time_reminder_email_flag: Annotated[bool | None, Field(alias="timeReminderEmailFlag")] = None
    time_sheet_start_date: Annotated[datetime | None, Field(alias="timeSheetStartDate")] = None
    time_zone: Annotated[TimeZoneSetupReference | None, Field(alias="timeZone")] = None
    timebased_one_time_password_activated: Annotated[
        bool | None, Field(alias="timebasedOneTimePasswordActivated")
    ] = None
    title: str | None = None
    """
     Max length: 50;
    """
    toast_notification_flag: Annotated[bool | None, Field(alias="toastNotificationFlag")] = None
    token: str | None = None
    type: MemberTypeReference | None = None
    use_browser_language_flag: Annotated[bool | None, Field(alias="useBrowserLanguageFlag")] = None
    vendor_number: Annotated[str | None, Field(alias="vendorNumber")] = None
    warehouse: WarehouseReference | None = None
    warehouse_bin: Annotated[WarehouseBinReference | None, Field(alias="warehouseBin")] = None
    work_role: Annotated[WorkRoleReference | None, Field(alias="workRole")] = None
    work_type: Annotated[WorkTypeReference | None, Field(alias="workType")] = None


class MemberAccrual(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    accrual_type: Annotated[Literal["Holiday", "PTO", "Sick", "Vacation"], Field(alias="accrualType")]
    hours: float
    id: int | None = None
    member: MemberReference | None = None
    reason: str
    year: int


class MemberCertification(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    certification: CertificationReference
    certification_number: Annotated[str | None, Field(alias="certificationNumber")] = None
    """
     Max length: 50;
    """
    company: CompanyReference | None = None
    date_expires: Annotated[datetime | None, Field(alias="dateExpires")] = None
    date_received: Annotated[datetime | None, Field(alias="dateReceived")] = None
    id: int | None = None
    member: MemberReference | None = None
    notes: str | None = None
    percent_complete: Annotated[int | None, Field(alias="percentComplete")] = None


class MemberDeactivationCompanyTeam(ConnectWiseModel):
    count: int | None = None
    id: int | None = None
    name: str | None = None
    re_assign_to_contact: Annotated[ContactReference | None, Field(alias="reAssignToContact")] = None
    re_assign_to_member: Annotated[MemberReference | None, Field(alias="reAssignToMember")] = None


class MemberDeactivationDepartmentMananager(ConnectWiseModel):
    count: int | None = None
    re_assign_to_member: Annotated[MemberReference | None, Field(alias="reAssignToMember")] = None


class MemberDeactivationDispatchMember(MemberDeactivationDepartmentMananager):
    pass


class MemberDeactivationDutyManager(MemberDeactivationDepartmentMananager):
    pass


class MemberDeactivationKnowledgebaseArticle(MemberDeactivationDepartmentMananager):
    pass


class MemberDeactivationMyCompanyCOORole(MemberDeactivationDepartmentMananager):
    pass


class MemberDeactivationMyCompanyControllerRole(MemberDeactivationDepartmentMananager):
    pass


class MemberDeactivationMyCompanyDispatchRole(MemberDeactivationDepartmentMananager):
    pass


class MemberDeactivationMyCompanyDutyManagerRole(MemberDeactivationDepartmentMananager):
    pass


class MemberDeactivationMyCompanyPresidentRole(MemberDeactivationDepartmentMananager):
    pass


class MemberDeactivationMyCompanyServiceManagerRole(MemberDeactivationDepartmentMananager):
    pass


class MemberDeactivationOpportunity(MemberDeactivationDepartmentMananager):
    pass


class MemberDeactivationProjectManager(MemberDeactivationDepartmentMananager):
    pass


class MemberDeactivationSalesActivity(MemberDeactivationDepartmentMananager):
    pass


class MemberDeactivationSalesTeam(MemberDeactivationDepartmentMananager):
    pass


class MemberDeactivationSendFromEmailNotify(MemberDeactivationDepartmentMananager):
    pass


class MemberDeactivationServiceManger(MemberDeactivationDepartmentMananager):
    pass


class MemberDeactivationServiceTeam(MemberDeactivationDepartmentMananager):
    pass


class MemberDeactivationServiceTemplate(MemberDeactivationDepartmentMananager):
    pass


class MemberDeactivationStatusWorkflow(ConnectWiseModel):
    count: int | None = None
    id: int | None = None
    name: str | None = None
    re_assign_to_member: Annotated[MemberReference | None, Field(alias="reAssignToMember")] = None


class MemberDeactivationWorkflow(MemberDeactivationDepartmentMananager):
    pass


class MemberDelegation(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    date_end: Annotated[datetime, Field(alias="dateEnd")]
    date_start: Annotated[datetime, Field(alias="dateStart")]
    delegated_to: Annotated[MemberReference | None, Field(alias="delegatedTo")] = None
    delegation_type: Annotated[Literal["Approval", "Project"], Field(alias="delegationType")]
    id: int | None = None
    member: MemberReference | None = None


class MemberPersona(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    member: MemberReference | None = None
    name: str | None = None


class MemberSkill(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    certified_flag: Annotated[bool | None, Field(alias="certifiedFlag")] = None
    id: int | None = None
    member: MemberReference | None = None
    notes: str | None = None
    skill: SkillReference
    skill_level: Annotated[Literal["Beginner", "Intermediate", "Advanced", "Expert"], Field(alias="skillLevel")]
    years_experience: Annotated[int | None, Field(alias="yearsExperience")] = None


class MenuEntry(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    add_all_locations: Annotated[bool | None, Field(alias="addAllLocations")] = None
    caption: str
    """
     Max length: 50;
    """
    client_id: Annotated[str | None, Field(alias="clientId")] = None
    """
    Only required if not already set Max length: 36;
    """
    id: int | None = None
    large_menu_icon_id: Annotated[int | None, Field(alias="largeMenuIconId")] = None
    link: str
    """
     Max length: 2000;
    """
    location_ids: Annotated[list[int] | None, Field(alias="locationIds")] = None
    menu_location: Annotated[MenuLocationReference | None, Field(alias="menuLocation")] = None
    new_window_flag: Annotated[bool, Field(alias="newWindowFlag")]
    origin: str | None = None
    """
     Max length: 2000;
    """
    remove_all_locations: Annotated[bool | None, Field(alias="removeAllLocations")] = None
    small_menu_icon_id: Annotated[int | None, Field(alias="smallMenuIconId")] = None


class MenuEntryLocation(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    location: SystemLocationReference | None = None
    menu_entry: Annotated[SystemMenuEntryReference | None, Field(alias="menuEntry")] = None


class MinimumStockByWarehouse(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    minimum_stock: Annotated[int, Field(alias="minimumStock")]
    warehouse: WarehouseReference


class MyAccount(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    agreement_invoicing_display_options: Annotated[
        Literal["RemainOnInvoicingScreen", "ShowRecentInvoices"], Field(alias="agreementInvoicingDisplayOptions")
    ]
    allow_expenses_entered_against_companies_flag: Annotated[
        bool | None, Field(alias="allowExpensesEnteredAgainstCompaniesFlag")
    ] = None
    allow_in_cell_entry_on_time_sheet: Annotated[bool | None, Field(alias="allowInCellEntryOnTimeSheet")] = None
    authentication_service_type: Annotated[
        Literal["AuthAnvil", "GoogleAuthenticator", "Email"] | None, Field(alias="authenticationServiceType")
    ] = None
    auto_popup_quick_notes_with_stopwatch: Annotated[
        bool | None, Field(alias="autoPopupQuickNotesWithStopwatch")
    ] = None
    auto_start_stopwatch: Annotated[bool | None, Field(alias="autoStartStopwatch")] = None
    billable_forecast: Annotated[float | None, Field(alias="billableForecast")] = None
    calendar: CalendarReference | None = None
    calendar_sync_integration_flag: Annotated[bool | None, Field(alias="calendarSyncIntegrationFlag")] = None
    client_id: Annotated[str | None, Field(alias="clientId")] = None
    company_activity_tab_format: Annotated[
        Literal["SummaryList", "DetailList"], Field(alias="companyActivityTabFormat")
    ]
    copy_column_layouts_and_filters: Annotated[bool | None, Field(alias="copyColumnLayoutsAndFilters")] = None
    copy_pod_layouts: Annotated[bool | None, Field(alias="copyPodLayouts")] = None
    copy_shared_default_views: Annotated[bool | None, Field(alias="copySharedDefaultViews")] = None
    country: CountryReference | None = None
    custom_fields: Annotated[list[CustomFieldValue] | None, Field(alias="customFields")] = None
    daily_capacity: Annotated[float | None, Field(alias="dailyCapacity")] = None
    days_tolerance: Annotated[int | None, Field(alias="daysTolerance")] = None
    default_department: Annotated[SystemDepartmentReference | None, Field(alias="defaultDepartment")] = None
    default_email: Annotated[Literal["Office", "Mobile", "Home"], Field(alias="defaultEmail")]
    default_location: Annotated[SystemLocationReference | None, Field(alias="defaultLocation")] = None
    default_phone: Annotated[Literal["Office", "Mobile", "Home"], Field(alias="defaultPhone")]
    disable_online_flag: Annotated[bool | None, Field(alias="disableOnlineFlag")] = None
    employee_identifer: Annotated[str | None, Field(alias="employeeIdentifer")] = None
    """
     Max length: 10;
    """
    enable_mobile_flag: Annotated[bool | None, Field(alias="enableMobileFlag")] = None
    enable_mobile_gps_flag: Annotated[bool | None, Field(alias="enableMobileGpsFlag")] = None
    enter_time_against_company_flag: Annotated[bool | None, Field(alias="enterTimeAgainstCompanyFlag")] = None
    expense_approver: Annotated[MemberReference | None, Field(alias="expenseApprover")] = None
    first_name: Annotated[str, Field(alias="firstName")]
    """
     Max length: 30;
    """
    from_member_rec_id: Annotated[int | None, Field(alias="fromMemberRecId")] = None
    global_search_default_sort: Annotated[
        Literal["None", "LastUpdatedDesc", "LastUpdatedAsc", "CreatedDesc", "CreatedAsc"] | None,
        Field(alias="globalSearchDefaultSort"),
    ] = None
    global_search_default_ticket_filter: Annotated[
        Literal["OpenRecords", "ClosedRecords", "AllRecords"] | None, Field(alias="globalSearchDefaultTicketFilter")
    ] = None
    hide_member_in_dispatch_portal_flag: Annotated[bool | None, Field(alias="hideMemberInDispatchPortalFlag")] = None
    hire_date: Annotated[datetime, Field(alias="hireDate")]
    home_email: Annotated[str | None, Field(alias="homeEmail")] = None
    """
     Max length: 250;
    """
    home_extension: Annotated[str | None, Field(alias="homeExtension")] = None
    """
     Max length: 10;
    """
    home_phone: Annotated[str | None, Field(alias="homePhone")] = None
    """
     Max length: 15;
    """
    id: int | None = None
    identifier: str
    """
     Max length: 15;
    """
    inactive_date: Annotated[datetime | None, Field(alias="inactiveDate")] = None
    inactive_flag: Annotated[bool | None, Field(alias="inactiveFlag")] = None
    include_in_utilization_reporting_flag: Annotated[
        bool | None, Field(alias="includeInUtilizationReportingFlag")
    ] = None
    invoice_screen_default_tab_format: Annotated[
        Literal["ShowInvoicingTab", "ShowAgreementInvoicingTab"], Field(alias="invoiceScreenDefaultTabFormat")
    ]
    invoice_time_tab_format: Annotated[Literal["SummaryList", "DetailList"], Field(alias="invoiceTimeTabFormat")]
    invoicing_display_options: Annotated[
        Literal["RemainOnInvoicingScreen", "ShowRecentInvoices"], Field(alias="invoicingDisplayOptions")
    ]
    last_login: Annotated[str | None, Field(alias="lastLogin")] = None
    last_name: Annotated[str, Field(alias="lastName")]
    """
     Max length: 30;
    """
    license_class: Annotated[Literal["A", "C", "F", "X"], Field(alias="licenseClass")]
    """
    F = Full Member, A = API Member, C = StreamlineIT Member, X = Subcontractor Member
    """
    mapi_name: Annotated[str | None, Field(alias="mapiName")] = None
    member_personas: Annotated[list[int] | None, Field(alias="memberPersonas")] = None
    middle_initial: Annotated[str | None, Field(alias="middleInitial")] = None
    """
     Max length: 1;
    """
    minimum_hours: Annotated[float | None, Field(alias="minimumHours")] = None
    mobile_email: Annotated[str | None, Field(alias="mobileEmail")] = None
    """
     Max length: 250;
    """
    mobile_extension: Annotated[str | None, Field(alias="mobileExtension")] = None
    """
     Max length: 10;
    """
    mobile_phone: Annotated[str | None, Field(alias="mobilePhone")] = None
    """
     Max length: 15;
    """
    notes: str | None = None
    office365: MemberOffice365 | None = None
    office_email: Annotated[str | None, Field(alias="officeEmail")] = None
    """
     Max length: 250;
    """
    office_extension: Annotated[str | None, Field(alias="officeExtension")] = None
    """
     Max length: 10;
    """
    office_phone: Annotated[str | None, Field(alias="officePhone")] = None
    """
     Max length: 15;
    """
    partner_portal_flag: Annotated[bool | None, Field(alias="partnerPortalFlag")] = None
    password: str | None = None
    """
    ConditionallyRequired. API Member will get random password generated Max length: 60;
    """
    phone_integration_type: Annotated[
        Literal["TAPI", "SKYPE", "NONE"] | None, Field(alias="phoneIntegrationType")
    ] = None
    phone_source: Annotated[str | None, Field(alias="phoneSource")] = None
    photo: DocumentReference | None = None
    primary_email: Annotated[str | None, Field(alias="primaryEmail")] = None
    """
     Max length: 250;
    """
    project_default_board: Annotated[ProjectBoardReference | None, Field(alias="projectDefaultBoard")] = None
    project_default_department: Annotated[
        SystemDepartmentReference | None, Field(alias="projectDefaultDepartment")
    ] = None
    project_default_location: Annotated[SystemLocationReference | None, Field(alias="projectDefaultLocation")] = None
    report_card: Annotated[ReportCardReference | None, Field(alias="reportCard")] = None
    reports_to: Annotated[MemberReference | None, Field(alias="reportsTo")] = None
    require_expense_entry_flag: Annotated[bool | None, Field(alias="requireExpenseEntryFlag")] = None
    require_start_and_end_time_on_time_entry_flag: Annotated[
        bool | None, Field(alias="requireStartAndEndTimeOnTimeEntryFlag")
    ] = None
    require_time_sheet_entry_flag: Annotated[bool | None, Field(alias="requireTimeSheetEntryFlag")] = None
    sales_default_location: Annotated[SystemLocationReference | None, Field(alias="salesDefaultLocation")] = None
    schedule_capacity: Annotated[float | None, Field(alias="scheduleCapacity")] = None
    schedule_default_department: Annotated[
        SystemDepartmentReference | None, Field(alias="scheduleDefaultDepartment")
    ] = None
    schedule_default_location: Annotated[SystemLocationReference | None, Field(alias="scheduleDefaultLocation")] = None
    service_board_team_ids: Annotated[list[int] | None, Field(alias="serviceBoardTeamIds")] = None
    service_default_board: Annotated[BoardReference | None, Field(alias="serviceDefaultBoard")] = None
    service_default_department: Annotated[
        SystemDepartmentReference | None, Field(alias="serviceDefaultDepartment")
    ] = None
    service_default_location: Annotated[SystemLocationReference | None, Field(alias="serviceDefaultLocation")] = None
    service_location: Annotated[ServiceLocationReference | None, Field(alias="serviceLocation")] = None
    signature: str | None = None
    sts_user_admin_url: Annotated[str | None, Field(alias="stsUserAdminUrl")] = None
    time_approver: Annotated[MemberReference | None, Field(alias="timeApprover")] = None
    time_reminder_email_flag: Annotated[bool | None, Field(alias="timeReminderEmailFlag")] = None
    time_sheet_start_date: Annotated[datetime | None, Field(alias="timeSheetStartDate")] = None
    time_zone: Annotated[TimeZoneSetupReference | None, Field(alias="timeZone")] = None
    timebased_one_time_password_activated: Annotated[
        bool | None, Field(alias="timebasedOneTimePasswordActivated")
    ] = None
    title: str | None = None
    """
     Max length: 50;
    """
    toast_notification_flag: Annotated[bool | None, Field(alias="toastNotificationFlag")] = None
    token: str | None = None
    type: MemberTypeReference | None = None
    use_browser_language_flag: Annotated[bool | None, Field(alias="useBrowserLanguageFlag")] = None
    vendor_number: Annotated[str | None, Field(alias="vendorNumber")] = None
    warehouse: WarehouseReference | None = None
    warehouse_bin: Annotated[WarehouseBinReference | None, Field(alias="warehouseBin")] = None
    work_role: Annotated[WorkRoleReference | None, Field(alias="workRole")] = None
    work_type: Annotated[WorkTypeReference | None, Field(alias="workType")] = None


class MyMember(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    admin_flag: Annotated[bool | None, Field(alias="adminFlag")] = None
    agreement_invoicing_display_options: Annotated[
        Literal["RemainOnInvoicingScreen", "ShowRecentInvoices"] | None, Field(alias="agreementInvoicingDisplayOptions")
    ] = None
    allow_expenses_entered_against_companies_flag: Annotated[
        bool | None, Field(alias="allowExpensesEnteredAgainstCompaniesFlag")
    ] = None
    allow_in_cell_entry_on_time_sheet: Annotated[bool | None, Field(alias="allowInCellEntryOnTimeSheet")] = None
    authentication_service_type: Annotated[
        Literal["AuthAnvil", "GoogleAuthenticator", "Email"] | None, Field(alias="authenticationServiceType")
    ] = None
    billable_forecast: Annotated[float | None, Field(alias="billableForecast")] = None
    calendar: CalendarReference | None = None
    calendar_sync_integration_flag: Annotated[bool | None, Field(alias="calendarSyncIntegrationFlag")] = None
    company_activity_tab_format: Annotated[
        Literal["SummaryList", "DetailList"] | None, Field(alias="companyActivityTabFormat")
    ] = None
    corelytics_password: Annotated[str | None, Field(alias="corelyticsPassword")] = None
    corelytics_username: Annotated[str | None, Field(alias="corelyticsUsername")] = None
    country: CountryReference | None = None
    daily_capacity: Annotated[float | None, Field(alias="dailyCapacity")] = None
    days_tolerance: Annotated[int | None, Field(alias="daysTolerance")] = None
    default_department: Annotated[SystemDepartmentReference | None, Field(alias="defaultDepartment")] = None
    default_email: Annotated[Literal["Office", "Mobile", "Home"] | None, Field(alias="defaultEmail")] = None
    default_location: Annotated[SystemLocationReference | None, Field(alias="defaultLocation")] = None
    default_phone: Annotated[Literal["Office", "Mobile", "Home"] | None, Field(alias="defaultPhone")] = None
    disable_online_flag: Annotated[bool | None, Field(alias="disableOnlineFlag")] = None
    employee_identifer: Annotated[str | None, Field(alias="employeeIdentifer")] = None
    enable_ldap_authentication_flag: Annotated[bool | None, Field(alias="enableLdapAuthenticationFlag")] = None
    enable_mobile_flag: Annotated[bool | None, Field(alias="enableMobileFlag")] = None
    enable_mobile_gps_flag: Annotated[bool | None, Field(alias="enableMobileGpsFlag")] = None
    enter_time_against_company_flag: Annotated[bool | None, Field(alias="enterTimeAgainstCompanyFlag")] = None
    excluded_project_board_ids: Annotated[list[int] | None, Field(alias="excludedProjectBoardIds")] = None
    excluded_service_board_ids: Annotated[list[int] | None, Field(alias="excludedServiceBoardIds")] = None
    expense_approver: Annotated[MemberReference | None, Field(alias="expenseApprover")] = None
    first_name: Annotated[str | None, Field(alias="firstName")] = None
    hide_member_in_dispatch_portal_flag: Annotated[bool | None, Field(alias="hideMemberInDispatchPortalFlag")] = None
    hire_date: Annotated[datetime | None, Field(alias="hireDate")] = None
    home_email: Annotated[str | None, Field(alias="homeEmail")] = None
    home_extension: Annotated[str | None, Field(alias="homeExtension")] = None
    home_phone: Annotated[str | None, Field(alias="homePhone")] = None
    hourly_cost: Annotated[float | None, Field(alias="hourlyCost")] = None
    hourly_rate: Annotated[float | None, Field(alias="hourlyRate")] = None
    id: int | None = None
    identifier: str | None = None
    inactive_date: Annotated[datetime | None, Field(alias="inactiveDate")] = None
    inactive_flag: Annotated[bool | None, Field(alias="inactiveFlag")] = None
    include_in_utilization_reporting_flag: Annotated[
        bool | None, Field(alias="includeInUtilizationReportingFlag")
    ] = None
    invoice_screen_default_tab_format: Annotated[
        Literal["ShowInvoicingTab", "ShowAgreementInvoicingTab"] | None, Field(alias="invoiceScreenDefaultTabFormat")
    ] = None
    invoice_time_tab_format: Annotated[
        Literal["SummaryList", "DetailList"] | None, Field(alias="invoiceTimeTabFormat")
    ] = None
    invoicing_display_options: Annotated[
        Literal["RemainOnInvoicingScreen", "ShowRecentInvoices"] | None, Field(alias="invoicingDisplayOptions")
    ] = None
    last_login: Annotated[str | None, Field(alias="lastLogin")] = None
    last_name: Annotated[str | None, Field(alias="lastName")] = None
    ldap_configuration: Annotated[LdapConfigurationReference | None, Field(alias="ldapConfiguration")] = None
    ldap_user_name: Annotated[str | None, Field(alias="ldapUserName")] = None
    license_class: Annotated[Literal["A", "C", "F", "X"] | None, Field(alias="licenseClass")] = None
    """
    F = Full Member, A = API Member, C = StreamlineIT Member, X = Subcontractor Member
    """
    mapi_name: Annotated[str | None, Field(alias="mapiName")] = None
    middle_initial: Annotated[str | None, Field(alias="middleInitial")] = None
    minimum_hours: Annotated[float | None, Field(alias="minimumHours")] = None
    mobile_email: Annotated[str | None, Field(alias="mobileEmail")] = None
    mobile_extension: Annotated[str | None, Field(alias="mobileExtension")] = None
    mobile_phone: Annotated[str | None, Field(alias="mobilePhone")] = None
    notes: str | None = None
    office_email: Annotated[str | None, Field(alias="officeEmail")] = None
    office_extension: Annotated[str | None, Field(alias="officeExtension")] = None
    office_phone: Annotated[str | None, Field(alias="officePhone")] = None
    password: str | None = None
    """
    ConditionallyRequired. API Member will get random password generated
    """
    photo: DocumentReference | None = None
    project_default_board: Annotated[ProjectBoardReference | None, Field(alias="projectDefaultBoard")] = None
    project_default_department: Annotated[
        SystemDepartmentReference | None, Field(alias="projectDefaultDepartment")
    ] = None
    project_default_location: Annotated[SystemLocationReference | None, Field(alias="projectDefaultLocation")] = None
    report_card: Annotated[ReportCardReference | None, Field(alias="reportCard")] = None
    reports_to: Annotated[MemberReference | None, Field(alias="reportsTo")] = None
    require_expense_entry_flag: Annotated[bool | None, Field(alias="requireExpenseEntryFlag")] = None
    require_start_and_end_time_on_time_entry_flag: Annotated[
        bool | None, Field(alias="requireStartAndEndTimeOnTimeEntryFlag")
    ] = None
    require_time_sheet_entry_flag: Annotated[bool | None, Field(alias="requireTimeSheetEntryFlag")] = None
    restrict_default_sales_territory_flag: Annotated[
        bool | None, Field(alias="restrictDefaultSalesTerritoryFlag")
    ] = None
    restrict_default_warehouse_bin_flag: Annotated[bool | None, Field(alias="restrictDefaultWarehouseBinFlag")] = None
    restrict_default_warehouse_flag: Annotated[bool | None, Field(alias="restrictDefaultWarehouseFlag")] = None
    restrict_department_flag: Annotated[bool | None, Field(alias="restrictDepartmentFlag")] = None
    restrict_location_flag: Annotated[bool | None, Field(alias="restrictLocationFlag")] = None
    restrict_project_default_department_flag: Annotated[
        bool | None, Field(alias="restrictProjectDefaultDepartmentFlag")
    ] = None
    restrict_project_default_location_flag: Annotated[
        bool | None, Field(alias="restrictProjectDefaultLocationFlag")
    ] = None
    restrict_schedule_flag: Annotated[bool | None, Field(alias="restrictScheduleFlag")] = None
    restrict_service_default_department_flag: Annotated[
        bool | None, Field(alias="restrictServiceDefaultDepartmentFlag")
    ] = None
    restrict_service_default_location_flag: Annotated[
        bool | None, Field(alias="restrictServiceDefaultLocationFlag")
    ] = None
    sales_default_location: Annotated[SystemLocationReference | None, Field(alias="salesDefaultLocation")] = None
    schedule_capacity: Annotated[float | None, Field(alias="scheduleCapacity")] = None
    schedule_default_department: Annotated[
        SystemDepartmentReference | None, Field(alias="scheduleDefaultDepartment")
    ] = None
    schedule_default_location: Annotated[SystemLocationReference | None, Field(alias="scheduleDefaultLocation")] = None
    security_location: Annotated[SystemLocationReference | None, Field(alias="securityLocation")] = None
    security_role: Annotated[SecurityRoleReference | None, Field(alias="securityRole")] = None
    service_board_team_ids: Annotated[list[int] | None, Field(alias="serviceBoardTeamIds")] = None
    service_default_board: Annotated[BoardReference | None, Field(alias="serviceDefaultBoard")] = None
    service_default_department: Annotated[
        SystemDepartmentReference | None, Field(alias="serviceDefaultDepartment")
    ] = None
    service_default_location: Annotated[SystemLocationReference | None, Field(alias="serviceDefaultLocation")] = None
    service_location: Annotated[ServiceLocationReference | None, Field(alias="serviceLocation")] = None
    sso_client_id: Annotated[str | None, Field(alias="ssoClientId")] = None
    sso_session_flag: Annotated[bool | None, Field(alias="ssoSessionFlag")] = None
    structure_level: Annotated[StructureReference | None, Field(alias="structureLevel")] = None
    time_approver: Annotated[MemberReference | None, Field(alias="timeApprover")] = None
    time_reminder_email_flag: Annotated[bool | None, Field(alias="timeReminderEmailFlag")] = None
    time_sheet_start_date: Annotated[datetime | None, Field(alias="timeSheetStartDate")] = None
    time_zone: Annotated[TimeZoneSetupReference | None, Field(alias="timeZone")] = None
    timebased_one_time_password_activated: Annotated[
        bool | None, Field(alias="timebasedOneTimePasswordActivated")
    ] = None
    title: str | None = None
    toast_notification_flag: Annotated[bool | None, Field(alias="toastNotificationFlag")] = None
    type: MemberTypeReference | None = None
    vendor_number: Annotated[str | None, Field(alias="vendorNumber")] = None
    warehouse: WarehouseReference | None = None
    warehouse_bin: Annotated[WarehouseBinReference | None, Field(alias="warehouseBin")] = None
    work_role: Annotated[WorkRoleReference | None, Field(alias="workRole")] = None
    work_type: Annotated[WorkTypeReference | None, Field(alias="workType")] = None


class MyMemberInfo(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    allow_expenses_entered_against_companies_flag: Annotated[
        bool | None, Field(alias="allowExpensesEnteredAgainstCompaniesFlag")
    ] = None
    daily_capacity: Annotated[float | None, Field(alias="dailyCapacity")] = None
    default_department: Annotated[SystemDepartmentReference | None, Field(alias="defaultDepartment")] = None
    default_email: Annotated[str | None, Field(alias="defaultEmail")] = None
    default_location: Annotated[SystemLocationReference | None, Field(alias="defaultLocation")] = None
    enter_time_against_company_flag: Annotated[bool | None, Field(alias="enterTimeAgainstCompanyFlag")] = None
    excluded_project_board_ids: Annotated[list[int] | None, Field(alias="excludedProjectBoardIds")] = None
    excluded_service_board_ids: Annotated[list[int] | None, Field(alias="excludedServiceBoardIds")] = None
    first_name: Annotated[str | None, Field(alias="firstName")] = None
    full_name: Annotated[str | None, Field(alias="fullName")] = None
    id: int | None = None
    identifier: str | None = None
    inactive_flag: Annotated[bool | None, Field(alias="inactiveFlag")] = None
    last_name: Annotated[str | None, Field(alias="lastName")] = None
    license_class: Annotated[Literal["A", "C", "F", "X"] | None, Field(alias="licenseClass")] = None
    """
    F = Full Member, A = API Member, C = StreamlineIT Member, X = Subcontractor Member
    """
    middle_initial: Annotated[str | None, Field(alias="middleInitial")] = None
    photo: DocumentReference | None = None
    project_default_board: Annotated[ProjectBoardReference | None, Field(alias="projectDefaultBoard")] = None
    project_default_department: Annotated[
        SystemDepartmentReference | None, Field(alias="projectDefaultDepartment")
    ] = None
    project_default_location: Annotated[SystemLocationReference | None, Field(alias="projectDefaultLocation")] = None
    require_expense_entry_flag: Annotated[bool | None, Field(alias="requireExpenseEntryFlag")] = None
    require_start_and_end_time_on_time_entry_flag: Annotated[
        bool | None, Field(alias="requireStartAndEndTimeOnTimeEntryFlag")
    ] = None
    require_time_sheet_entry_flag: Annotated[bool | None, Field(alias="requireTimeSheetEntryFlag")] = None
    restrict_default_warehouse_bin_flag: Annotated[bool | None, Field(alias="restrictDefaultWarehouseBinFlag")] = None
    restrict_default_warehouse_flag: Annotated[bool | None, Field(alias="restrictDefaultWarehouseFlag")] = None
    restrict_project_default_department_flag: Annotated[
        bool | None, Field(alias="restrictProjectDefaultDepartmentFlag")
    ] = None
    restrict_project_default_location_flag: Annotated[
        bool | None, Field(alias="restrictProjectDefaultLocationFlag")
    ] = None
    restrict_service_default_department_flag: Annotated[
        bool | None, Field(alias="restrictServiceDefaultDepartmentFlag")
    ] = None
    restrict_service_default_location_flag: Annotated[
        bool | None, Field(alias="restrictServiceDefaultLocationFlag")
    ] = None
    sales_default_location: Annotated[SystemLocationReference | None, Field(alias="salesDefaultLocation")] = None
    schedule_capacity: Annotated[float | None, Field(alias="scheduleCapacity")] = None
    schedule_default_department: Annotated[
        SystemDepartmentReference | None, Field(alias="scheduleDefaultDepartment")
    ] = None
    schedule_default_location: Annotated[SystemLocationReference | None, Field(alias="scheduleDefaultLocation")] = None
    service_default_board: Annotated[BoardReference | None, Field(alias="serviceDefaultBoard")] = None
    service_default_department: Annotated[
        SystemDepartmentReference | None, Field(alias="serviceDefaultDepartment")
    ] = None
    service_default_location: Annotated[SystemLocationReference | None, Field(alias="serviceDefaultLocation")] = None
    service_location: Annotated[ServiceLocationReference | None, Field(alias="serviceLocation")] = None
    sso_client_id: Annotated[str | None, Field(alias="ssoClientId")] = None
    sso_session_flag: Annotated[bool | None, Field(alias="ssoSessionFlag")] = None
    time_zone: Annotated[TimeZoneSetupReference | None, Field(alias="timeZone")] = None
    use_browser_language_flag: Annotated[bool | None, Field(alias="useBrowserLanguageFlag")] = None
    warehouse: WarehouseReference | None = None
    warehouse_bin: Annotated[WarehouseBinReference | None, Field(alias="warehouseBin")] = None
    work_role: Annotated[WorkRoleReference | None, Field(alias="workRole")] = None
    work_type: Annotated[WorkTypeReference | None, Field(alias="workType")] = None


class OnHandSerialNumber(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    catalog_item: Annotated[CatalogItemReference | None, Field(alias="catalogItem")] = None
    id: int | None = None
    serial: str | None = None
    warehouse: WarehouseReference | None = None
    warehouse_bin: Annotated[WarehouseBinReference | None, Field(alias="warehouseBin")] = None


class Opportunity(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    bill_to_company: Annotated[CompanyReference | None, Field(alias="billToCompany")] = None
    bill_to_contact: Annotated[ContactReference | None, Field(alias="billToContact")] = None
    bill_to_site: Annotated[SiteReference | None, Field(alias="billToSite")] = None
    billing_terms: Annotated[BillingTermsReference | None, Field(alias="billingTerms")] = None
    business_unit_id: Annotated[int | None, Field(alias="businessUnitId")] = None
    """
     Required On Updates;
    """
    campaign: CampaignReference | None = None
    closed_by: Annotated[MemberReference | None, Field(alias="closedBy")] = None
    closed_date: Annotated[datetime | None, Field(alias="closedDate")] = None
    company: CompanyReference | None = None
    company_location_id: Annotated[int | None, Field(alias="companyLocationId")] = None
    contact: ContactReference | None = None
    currency: CurrencyReference | None = None
    custom_fields: Annotated[list[CustomFieldValue] | None, Field(alias="customFields")] = None
    customer_po: Annotated[str | None, Field(alias="customerPO")] = None
    """
     Max length: 25;
    """
    date_became_lead: Annotated[datetime | None, Field(alias="dateBecameLead")] = None
    expected_close_date: Annotated[datetime | None, Field(alias="expectedCloseDate")] = None
    """
     Required On Updates;
    """
    id: int | None = None
    location_id: Annotated[int | None, Field(alias="locationId")] = None
    """
     Required On Updates;
    """
    name: str
    """
     Max length: 100;
    """
    notes: str | None = None
    pipeline_change_date: Annotated[datetime | None, Field(alias="pipelineChangeDate")] = None
    primary_sales_rep: Annotated[MemberReference | None, Field(alias="primarySalesRep")] = None
    priority: OpportunityPriorityReference | None = None
    probability: OpportunityProbabilityReference | None = None
    rating: OpportunityRatingReference | None = None
    secondary_sales_rep: Annotated[MemberReference | None, Field(alias="secondarySalesRep")] = None
    ship_to_company: Annotated[CompanyReference | None, Field(alias="shipToCompany")] = None
    ship_to_contact: Annotated[ContactReference | None, Field(alias="shipToContact")] = None
    ship_to_site: Annotated[SiteReference | None, Field(alias="shipToSite")] = None
    site: SiteReference | None = None
    source: str | None = None
    """
     Max length: 50;
    """
    stage: OpportunityStageReference | None = None
    status: OpportunityStatusReference | None = None
    tax_code: Annotated[TaxCodeReference | None, Field(alias="taxCode")] = None
    technical_contact: Annotated[ContactReference | None, Field(alias="technicalContact")] = None
    total_sales_tax: Annotated[float | None, Field(alias="totalSalesTax")] = None
    type: OpportunityTypeReference | None = None


class OpportunityContact(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    company: CompanyReference | None = None
    contact: ContactReference | None = None
    email_address: Annotated[str | None, Field(alias="emailAddress")] = None
    id: int | None = None
    notes: str | None = None
    opportunity_id: Annotated[int | None, Field(alias="opportunityId")] = None
    phone_number: Annotated[str | None, Field(alias="phoneNumber")] = None
    referral_flag: Annotated[bool | None, Field(alias="referralFlag")] = None
    role: OpportunitySalesRoleReference | None = None


class OpportunityToProjectConversion(ConnectWiseModel):
    board: ProjectBoardReference | None = None
    business_unit_id: Annotated[int | None, Field(alias="businessUnitId")] = None
    estimated_end: Annotated[datetime | None, Field(alias="estimatedEnd")] = None
    estimated_start: Annotated[datetime | None, Field(alias="estimatedStart")] = None
    include_all_documents_flag: Annotated[bool | None, Field(alias="includeAllDocumentsFlag")] = None
    include_all_notes_flag: Annotated[bool | None, Field(alias="includeAllNotesFlag")] = None
    include_all_products_flag: Annotated[bool | None, Field(alias="includeAllProductsFlag")] = None
    include_document_ids: Annotated[list[int] | None, Field(alias="includeDocumentIds")] = None
    include_note_ids: Annotated[list[int] | None, Field(alias="includeNoteIds")] = None
    include_product_ids: Annotated[list[int] | None, Field(alias="includeProductIds")] = None
    location_id: Annotated[int | None, Field(alias="locationId")] = None
    manager: MemberReference | None = None
    name: str | None = None
    project_id: Annotated[int | None, Field(alias="projectId")] = None
    status: ProjectStatusReference | None = None


class Order(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    bill_closed_flag: Annotated[bool | None, Field(alias="billClosedFlag")] = None
    bill_shipped_flag: Annotated[bool | None, Field(alias="billShippedFlag")] = None
    bill_to_company: Annotated[CompanyReference | None, Field(alias="billToCompany")] = None
    bill_to_contact: Annotated[ContactReference | None, Field(alias="billToContact")] = None
    bill_to_site: Annotated[SiteReference | None, Field(alias="billToSite")] = None
    billing_terms: Annotated[BillingTermsReference | None, Field(alias="billingTerms")] = None
    bottom_comment_flag: Annotated[bool | None, Field(alias="bottomCommentFlag")] = None
    company: CompanyReference | None = None
    company_location: Annotated[SystemLocationReference | None, Field(alias="companyLocation")] = None
    config_ids: Annotated[list[int] | None, Field(alias="configIds")] = None
    contact: ContactReference | None = None
    currency: CurrencyReference | None = None
    custom_fields: Annotated[list[CustomFieldValue] | None, Field(alias="customFields")] = None
    department: SystemDepartmentReference | None = None
    description: str | None = None
    document_ids: Annotated[list[int] | None, Field(alias="documentIds")] = None
    due_date: Annotated[datetime | None, Field(alias="dueDate")] = None
    email: str | None = None
    id: int | None = None
    invoice_ids: Annotated[list[int] | None, Field(alias="invoiceIds")] = None
    location: SystemLocationReference | None = None
    notes: str | None = None
    opportunity: OpportunityReference | None = None
    order_date: Annotated[datetime | None, Field(alias="orderDate")] = None
    phone: str | None = None
    phone_ext: Annotated[str | None, Field(alias="phoneExt")] = None
    po_number: Annotated[str | None, Field(alias="poNumber")] = None
    """
     Max length: 50;
    """
    product_ids: Annotated[list[int] | None, Field(alias="productIds")] = None
    restrict_downpayment_flag: Annotated[bool | None, Field(alias="restrictDownpaymentFlag")] = None
    sales_rep: Annotated[MemberReference | None, Field(alias="salesRep")] = None
    ship_to_company: Annotated[CompanyReference | None, Field(alias="shipToCompany")] = None
    ship_to_contact: Annotated[ContactReference | None, Field(alias="shipToContact")] = None
    ship_to_site: Annotated[SiteReference | None, Field(alias="shipToSite")] = None
    site: SiteReference | None = None
    status: OrderStatusReference | None = None
    sub_total: Annotated[float | None, Field(alias="subTotal")] = None
    tax_code: Annotated[TaxCodeReference | None, Field(alias="taxCode")] = None
    tax_total: Annotated[float | None, Field(alias="taxTotal")] = None
    top_comment_flag: Annotated[bool | None, Field(alias="topCommentFlag")] = None
    total: float | None = None


class OrderStatus(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    closed_flag: Annotated[bool | None, Field(alias="closedFlag")] = None
    default_flag: Annotated[bool | None, Field(alias="defaultFlag")] = None
    email_template: Annotated[OrderStatusEmailTemplateReference | None, Field(alias="emailTemplate")] = None
    id: int | None = None
    inactive_flag: Annotated[bool | None, Field(alias="inactiveFlag")] = None
    name: str
    """
     Max length: 50;
    """
    sort_order: Annotated[int | None, Field(alias="sortOrder")] = None


class OrderStatusEmailTemplate(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    body: str
    copy_sender_flag: Annotated[bool | None, Field(alias="copySenderFlag")] = None
    email_address: Annotated[str | None, Field(alias="emailAddress")] = None
    """
     Max length: 100;
    """
    first_name: Annotated[str | None, Field(alias="firstName")] = None
    """
     Max length: 100;
    """
    id: int | None = None
    last_name: Annotated[str | None, Field(alias="lastName")] = None
    """
     Max length: 100;
    """
    status: OrderStatusReference | None = None
    subject: str
    """
     Max length: 200;
    """
    use_sender_flag: Annotated[bool | None, Field(alias="useSenderFlag")] = None


class OrderStatusNotification(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    email: str | None = None
    """
    Order Status Notification sendEmail must be entered if the notify type is "Email Address" Max length: 50;
    """
    id: int | None = None
    member: MemberReference | None = None
    notify_who: Annotated[NotificationRecipientReference | None, Field(alias="notifyWho")] = None
    status: OrderStatusReference | None = None
    workflow_step: Annotated[int | None, Field(alias="workflowStep")] = None


class Other(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    contact_sync: Annotated[Literal["FL", "LF", "CFL", "CLF"] | None, Field(alias="contactSync")] = None
    default_address_format: Annotated[AddressFormatReference | None, Field(alias="defaultAddressFormat")] = None
    default_calendar: Annotated[CalendarReference | None, Field(alias="defaultCalendar")] = None
    default_from_address: Annotated[str, Field(alias="defaultFromAddress")]
    """
     Max length: 50;
    """
    default_ldap: Annotated[LdapConfigurationReference | None, Field(alias="defaultLdap")] = None
    disable_z_admin_login_flag: Annotated[bool | None, Field(alias="disableZAdminLoginFlag")] = None
    id: int | None = None
    include_portal_link_flag: Annotated[bool | None, Field(alias="includePortalLinkFlag")] = None
    locale: LocaleReference | None = None
    logo_path: Annotated[str | None, Field(alias="logoPath")] = None
    """
     Max length: 200;
    """
    portal_url_override: Annotated[str, Field(alias="portalUrlOverride")]
    """
     Max length: 100;
    """
    server_time_zone: Annotated[TimeZoneSetupReference | None, Field(alias="serverTimeZone")] = None
    site_url: Annotated[str, Field(alias="siteUrl")]
    """
     Max length: 100;
    """
    sync_leads_flag: Annotated[bool | None, Field(alias="syncLeadsFlag")] = None
    update_member_time_zones_flag: Annotated[bool | None, Field(alias="updateMemberTimeZonesFlag")] = None
    """
    If true, all Members time zone will also be set to serverTimeZone. Otherwise, only My Company time zone will be updated.
    """
    use_expanded_format_activity_flag: Annotated[bool | None, Field(alias="useExpandedFormatActivityFlag")] = None
    use_expanded_format_time_flag: Annotated[bool | None, Field(alias="useExpandedFormatTimeFlag")] = None
    use_ssl_flag: Annotated[bool | None, Field(alias="useSslFlag")] = None


class PhaseStatus(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    board_association_ids: Annotated[list[int] | None, Field(alias="boardAssociationIds")] = None
    closed_flag: Annotated[bool | None, Field(alias="closedFlag")] = None
    collapsed_flag: Annotated[bool | None, Field(alias="collapsedFlag")] = None
    custom_status_indicator_name: Annotated[str | None, Field(alias="customStatusIndicatorName")] = None
    """
    Required when statusIndicator is Custom Max length: 30;
    """
    default_flag: Annotated[bool | None, Field(alias="defaultFlag")] = None
    id: int | None = None
    inactive_flag: Annotated[bool | None, Field(alias="inactiveFlag")] = None
    name: str
    """
     Max length: 30;
    """
    status_indicator: Annotated[StatusIndicatorReference | None, Field(alias="statusIndicator")] = None


class PortalConfigurationInvoiceSetup(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    add_all_statuses: Annotated[bool | None, Field(alias="addAllStatuses")] = None
    allow_inv_pmt_flag: Annotated[bool | None, Field(alias="allowInvPmtFlag")] = None
    billing_status_ids: Annotated[list[int] | None, Field(alias="billingStatusIds")] = None
    display_inv_pmt_flag: Annotated[bool | None, Field(alias="displayInvPmtFlag")] = None
    id: int | None = None
    location: SystemLocationReference | None = None
    login: str | None = None
    password: str | None = None
    payment_processor: Annotated[
        PortalConfigurationPaymentProcessorReference | None, Field(alias="paymentProcessor")
    ] = None
    portal_configuration: Annotated[PortalConfigurationReference | None, Field(alias="portalConfiguration")] = None
    remove_all_statuses: Annotated[bool | None, Field(alias="removeAllStatuses")] = None
    url_override: Annotated[str | None, Field(alias="urlOverride")] = None


class PortalConfigurationProjectSetup(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    billing_method_flag: Annotated[bool | None, Field(alias="billingMethodFlag")] = None
    contact_flag: Annotated[bool | None, Field(alias="contactFlag")] = None
    description_flag: Annotated[bool | None, Field(alias="descriptionFlag")] = None
    estimated_end_flag: Annotated[bool | None, Field(alias="estimatedEndFlag")] = None
    estimated_start_flag: Annotated[bool | None, Field(alias="estimatedStartFlag")] = None
    fixed_fee_actual_finish_flag: Annotated[bool | None, Field(alias="fixedFeeActualFinishFlag")] = None
    fixed_fee_actual_hrs_flag: Annotated[bool | None, Field(alias="fixedFeeActualHrsFlag")] = None
    fixed_fee_actual_start_flag: Annotated[bool | None, Field(alias="fixedFeeActualStartFlag")] = None
    fixed_fee_assigned_flag: Annotated[bool | None, Field(alias="fixedFeeAssignedFlag")] = None
    fixed_fee_bill_flag: Annotated[bool | None, Field(alias="fixedFeeBillFlag")] = None
    fixed_fee_budget_hrs_flag: Annotated[bool | None, Field(alias="fixedFeeBudgetHrsFlag")] = None
    fixed_fee_scheduled_finish_flag: Annotated[bool | None, Field(alias="fixedFeeScheduledFinishFlag")] = None
    fixed_fee_scheduled_hrs_flag: Annotated[bool | None, Field(alias="fixedFeeScheduledHrsFlag")] = None
    fixed_fee_scheduled_start_flag: Annotated[bool | None, Field(alias="fixedFeeScheduledStartFlag")] = None
    fixed_fee_status_flag: Annotated[bool | None, Field(alias="fixedFeeStatusFlag")] = None
    id: int | None = None
    last_updated_flag: Annotated[bool | None, Field(alias="lastUpdatedFlag")] = None
    only_display: Annotated[
        Literal["DoNotDisplay", "Closed30Days", "Closed60Days", "Closed90Days", "Closed120Days", "AllClosed"],
        Field(alias="onlyDisplay"),
    ]
    portal_config: Annotated[PortalConfigurationReference | None, Field(alias="portalConfig")] = None
    project_detail_total_hours_flag: Annotated[bool | None, Field(alias="projectDetailTotalHoursFlag")] = None
    project_issue_actual_finish_flag: Annotated[bool | None, Field(alias="projectIssueActualFinishFlag")] = None
    project_issue_actual_hrs_flag: Annotated[bool | None, Field(alias="projectIssueActualHrsFlag")] = None
    project_issue_actual_start_flag: Annotated[bool | None, Field(alias="projectIssueActualStartFlag")] = None
    project_issue_assigned_flag: Annotated[bool | None, Field(alias="projectIssueAssignedFlag")] = None
    project_issue_bill_flag: Annotated[bool | None, Field(alias="projectIssueBillFlag")] = None
    project_issue_budget_hrs_flag: Annotated[bool | None, Field(alias="projectIssueBudgetHrsFlag")] = None
    project_issue_scheduled_finish_flag: Annotated[bool | None, Field(alias="projectIssueScheduledFinishFlag")] = None
    project_issue_scheduled_hrs_flag: Annotated[bool | None, Field(alias="projectIssueScheduledHrsFlag")] = None
    project_issue_scheduled_start_flag: Annotated[bool | None, Field(alias="projectIssueScheduledStartFlag")] = None
    project_issue_status_flag: Annotated[bool | None, Field(alias="projectIssueStatusFlag")] = None
    project_manager_flag: Annotated[bool | None, Field(alias="projectManagerFlag")] = None
    project_name_flag: Annotated[bool | None, Field(alias="projectNameFlag")] = None
    project_type_flag: Annotated[bool | None, Field(alias="projectTypeFlag")] = None
    status_flag: Annotated[bool | None, Field(alias="statusFlag")] = None
    time_material_actual_finish_flag: Annotated[bool | None, Field(alias="timeMaterialActualFinishFlag")] = None
    time_material_actual_hrs_flag: Annotated[bool | None, Field(alias="timeMaterialActualHrsFlag")] = None
    time_material_actual_start_flag: Annotated[bool | None, Field(alias="timeMaterialActualStartFlag")] = None
    time_material_assigned_flag: Annotated[bool | None, Field(alias="timeMaterialAssignedFlag")] = None
    time_material_bill_flag: Annotated[bool | None, Field(alias="timeMaterialBillFlag")] = None
    time_material_budget_hrs_flag: Annotated[bool | None, Field(alias="timeMaterialBudgetHrsFlag")] = None
    time_material_scheduled_finish_flag: Annotated[bool | None, Field(alias="timeMaterialScheduledFinishFlag")] = None
    time_material_scheduled_hrs_flag: Annotated[bool | None, Field(alias="timeMaterialScheduledHrsFlag")] = None
    time_material_scheduled_start_flag: Annotated[bool | None, Field(alias="timeMaterialScheduledStartFlag")] = None
    time_material_status_flag: Annotated[bool | None, Field(alias="timeMaterialStatusFlag")] = None


class PortalConfigurationServiceSetup(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    actual_hours_flag: Annotated[bool | None, Field(alias="actualHoursFlag")] = None
    approval_status_flag: Annotated[bool | None, Field(alias="approvalStatusFlag")] = None
    assigned_resources_flag: Annotated[bool | None, Field(alias="assignedResourcesFlag")] = None
    budget_hours_flag: Annotated[bool | None, Field(alias="budgetHoursFlag")] = None
    closed_tasks_flag: Annotated[bool | None, Field(alias="closedTasksFlag")] = None
    contact_flag: Annotated[bool | None, Field(alias="contactFlag")] = None
    display_closed_tickets_option: Annotated[
        Literal["DoNotDisplay", "Closed30Days", "Closed60Days", "Closed90Days", "Closed120Days", "AllClosed"],
        Field(alias="displayClosedTicketsOption"),
    ]
    enable_chat_assist_flag: Annotated[bool | None, Field(alias="enableChatAssistFlag")] = None
    entered_date_flag: Annotated[bool | None, Field(alias="enteredDateFlag")] = None
    fixed_fee_ticket_template: Annotated[ServiceSignoffReference | None, Field(alias="fixedFeeTicketTemplate")] = None
    id: int | None = None
    last_update_flag: Annotated[bool | None, Field(alias="lastUpdateFlag")] = None
    open_tasks_flag: Annotated[bool | None, Field(alias="openTasksFlag")] = None
    required_date_flag: Annotated[bool | None, Field(alias="requiredDateFlag")] = None
    service_board_flag: Annotated[bool | None, Field(alias="serviceBoardFlag")] = None
    service_sub_type_flag: Annotated[bool | None, Field(alias="serviceSubTypeFlag")] = None
    service_sub_type_item_flag: Annotated[bool | None, Field(alias="serviceSubTypeItemFlag")] = None
    service_type_flag: Annotated[bool | None, Field(alias="serviceTypeFlag")] = None
    site_name_flag: Annotated[bool | None, Field(alias="siteNameFlag")] = None
    sla_info_flag: Annotated[bool | None, Field(alias="slaInfoFlag")] = None
    status_flag: Annotated[bool | None, Field(alias="statusFlag")] = None
    time_materials_ticket_template: Annotated[
        ServiceSignoffReference | None, Field(alias="timeMaterialsTicketTemplate")
    ] = None


class PricingDetail(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    category: ProductCategoryReference | None = None
    end_date: Annotated[datetime | None, Field(alias="endDate")] = None
    id: int | None = None
    no_end_date: Annotated[bool | None, Field(alias="noEndDate")] = None
    product: CatalogItemReference | None = None
    start_date: Annotated[datetime, Field(alias="startDate")]
    sub_category: Annotated[ProductSubCategoryReference | None, Field(alias="subCategory")] = None


class ProcurementAdjustment(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    adjustment_details: Annotated[list[AdjustmentDetail] | None, Field(alias="adjustmentDetails")] = None
    closed_by: Annotated[str | None, Field(alias="closedBy")] = None
    closed_date: Annotated[datetime | None, Field(alias="closedDate")] = None
    closed_flag: Annotated[bool | None, Field(alias="closedFlag")] = None
    id: int | None = None
    identifier: str
    """
     Max length: 50;
    """
    notes: str | None = None
    reason: str | None = None
    """
     Max length: 100;
    """
    type: AdjustmentTypeReference | None = None


class ProductComponent(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    catalog_item: Annotated[CatalogItemReference | None, Field(alias="catalogItem")] = None
    cost: float | None = None
    hide_description_flag: Annotated[bool | None, Field(alias="hideDescriptionFlag")] = None
    hide_extended_price_flag: Annotated[bool | None, Field(alias="hideExtendedPriceFlag")] = None
    hide_item_identifier_flag: Annotated[bool | None, Field(alias="hideItemIdentifierFlag")] = None
    hide_price_flag: Annotated[bool | None, Field(alias="hidePriceFlag")] = None
    hide_quantity_flag: Annotated[bool | None, Field(alias="hideQuantityFlag")] = None
    id: int | None = None
    parent_product_item: Annotated[ProductItemReference | None, Field(alias="parentProductItem")] = None
    price: float | None = None
    product_item: Annotated[ProductItemReference | None, Field(alias="productItem")] = None
    quantity: float
    sequence_number: Annotated[int | None, Field(alias="sequenceNumber")] = None
    """
     Required On Updates;
    """
    vendor: CompanyReference | None = None


class ProductItem(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    add_components_flag: Annotated[bool | None, Field(alias="addComponentsFlag")] = None
    agreement: AgreementReference | None = None
    agreement_amount: Annotated[float | None, Field(alias="agreementAmount")] = None
    billable_option: Annotated[Literal["Billable", "DoNotBill", "NoCharge"], Field(alias="billableOption")]
    business_unit_id: Annotated[int | None, Field(alias="businessUnitId")] = None
    """
     Required On Updates;
    """
    bypass_forecast_update: Annotated[bool | None, Field(alias="bypassForecastUpdate")] = None
    calculated_cost: Annotated[float | None, Field(alias="calculatedCost")] = None
    calculated_cost_flag: Annotated[bool | None, Field(alias="calculatedCostFlag")] = None
    calculated_price: Annotated[float | None, Field(alias="calculatedPrice")] = None
    calculated_price_flag: Annotated[bool | None, Field(alias="calculatedPriceFlag")] = None
    cancelled_by: Annotated[int | None, Field(alias="cancelledBy")] = None
    cancelled_date: Annotated[datetime | None, Field(alias="cancelledDate")] = None
    cancelled_flag: Annotated[bool | None, Field(alias="cancelledFlag")] = None
    cancelled_reason: Annotated[str | None, Field(alias="cancelledReason")] = None
    """
     Max length: 100;
    """
    catalog_item: Annotated[CatalogItemReference | None, Field(alias="catalogItem")] = None
    company: CompanyReference | None = None
    cost: float | None = None
    custom_fields: Annotated[list[CustomFieldValue] | None, Field(alias="customFields")] = None
    customer_description: Annotated[str | None, Field(alias="customerDescription")] = None
    """
     Max length: 6000; Required On Updates;
    """
    description: str | None = None
    """
     Max length: 2000;
    """
    discount: float | None = None
    dropship_flag: Annotated[bool | None, Field(alias="dropshipFlag")] = None
    entity_type: Annotated[EntityTypeReference | None, Field(alias="entityType")] = None
    forecast_detail_id: Annotated[int | None, Field(alias="forecastDetailId")] = None
    forecast_status: Annotated[OpportunityStatusReference | None, Field(alias="forecastStatus")] = None
    id: int | None = None
    ignore_pricing_schedules_flag: Annotated[bool | None, Field(alias="ignorePricingSchedulesFlag")] = None
    integration_x_ref: Annotated[str | None, Field(alias="integrationXRef")] = None
    internal_notes: Annotated[str | None, Field(alias="internalNotes")] = None
    """
     Max length: 1000;
    """
    invoice: InvoiceReference | None = None
    invoice_grouping: Annotated[InvoiceGroupingReference | None, Field(alias="invoiceGrouping")] = None
    list_price: Annotated[float | None, Field(alias="listPrice")] = None
    location_id: Annotated[int | None, Field(alias="locationId")] = None
    """
     Required On Updates;
    """
    minimum_stock_flag: Annotated[bool | None, Field(alias="minimumStockFlag")] = None
    need_to_order_quantity: Annotated[int | None, Field(alias="needToOrderQuantity")] = None
    need_to_purchase_flag: Annotated[bool | None, Field(alias="needToPurchaseFlag")] = None
    opportunity: OpportunityReference | None = None
    phase: ProjectPhaseReference | None = None
    phase_product_flag: Annotated[bool | None, Field(alias="phaseProductFlag")] = None
    po_approved_flag: Annotated[bool | None, Field(alias="poApprovedFlag")] = None
    price: float | None = None
    price_method: Annotated[
        Literal["FlatRateForRange", "PercentMarkupFromCost", "PercentMarkdownFromPrice", "PricePerUnit"] | None,
        Field(alias="priceMethod"),
    ] = None
    product_class: Annotated[
        Literal["Agreement", "Bundle", "Inventory", "NonInventory", "Service"] | None, Field(alias="productClass")
    ] = None
    product_supplied_flag: Annotated[bool | None, Field(alias="productSuppliedFlag")] = None
    project: ProjectReference | None = None
    purchase_date: Annotated[datetime | None, Field(alias="purchaseDate")] = None
    quantity: float | None = None
    quantity_cancelled: Annotated[float | None, Field(alias="quantityCancelled")] = None
    recurring: ProductRecurring | None = None
    sales_order: Annotated[SalesOrderReference | None, Field(alias="salesOrder")] = None
    sequence_number: Annotated[float | None, Field(alias="sequenceNumber")] = None
    serial_number_ids: Annotated[list[int] | None, Field(alias="serialNumberIds")] = None
    serial_numbers: Annotated[list[str] | None, Field(alias="serialNumbers")] = None
    ship_set: Annotated[str | None, Field(alias="shipSet")] = None
    """
     Max length: 10;
    """
    sla: SLAReference | None = None
    special_order_flag: Annotated[bool | None, Field(alias="specialOrderFlag")] = None
    sub_contractor_amount_limit: Annotated[float | None, Field(alias="subContractorAmountLimit")] = None
    sub_contractor_ship_to_id: Annotated[int | None, Field(alias="subContractorShipToId")] = None
    taxable_flag: Annotated[bool | None, Field(alias="taxableFlag")] = None
    ticket: TicketReference | None = None
    vendor: CompanyReference | None = None
    vendor_sku: Annotated[str | None, Field(alias="vendorSku")] = None
    """
     Max length: 50;
    """
    warehouse: str | None = None
    warehouse_bin: Annotated[str | None, Field(alias="warehouseBin")] = None
    warehouse_bin_id: Annotated[int | None, Field(alias="warehouseBinId")] = None
    warehouse_id: Annotated[int | None, Field(alias="warehouseId")] = None


class ProductPickingShippingDetail(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    line_number: Annotated[int | None, Field(alias="lineNumber")] = None
    picked_quantity: Annotated[int | None, Field(alias="pickedQuantity")] = None
    product_item: Annotated[ProductItemReference | None, Field(alias="productItem")] = None
    quantity: int | None = None
    serial_number: Annotated[str | None, Field(alias="serialNumber")] = None
    serial_number_ids: Annotated[list[int] | None, Field(alias="serialNumberIds")] = None
    shipment_method: Annotated[ShipmentMethodReference | None, Field(alias="shipmentMethod")] = None
    shipped_quantity: Annotated[int | None, Field(alias="shippedQuantity")] = None
    tracking_number: Annotated[str | None, Field(alias="trackingNumber")] = None
    warehouse: WarehouseReference | None = None
    warehouse_bin: Annotated[WarehouseBinReference | None, Field(alias="warehouseBin")] = None


class ProductTypeExemption(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    product_type: Annotated[ProductTypeReference, Field(alias="productType")]
    taxable_levels: Annotated[list[int] | None, Field(alias="taxableLevels")] = None


class Project(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    actual_end: Annotated[datetime | None, Field(alias="actualEnd")] = None
    actual_hours: Annotated[float | None, Field(alias="actualHours")] = None
    actual_start: Annotated[datetime | None, Field(alias="actualStart")] = None
    agreement: AgreementReference | None = None
    bill_expenses: Annotated[
        Literal["Billable", "DoNotBill", "NoCharge", "NoDefault"] | None, Field(alias="billExpenses")
    ] = None
    """
     Required On Updates;
    """
    bill_products: Annotated[
        Literal["Billable", "DoNotBill", "NoCharge", "NoDefault"] | None, Field(alias="billProducts")
    ] = None
    """
     Required On Updates;
    """
    bill_project_after_closed_flag: Annotated[bool | None, Field(alias="billProjectAfterClosedFlag")] = None
    bill_time: Annotated[
        Literal["Billable", "DoNotBill", "NoCharge", "NoDefault"] | None, Field(alias="billTime")
    ] = None
    """
     Required On Updates;
    """
    bill_to_company: Annotated[CompanyReference | None, Field(alias="billToCompany")] = None
    bill_to_contact: Annotated[ContactReference | None, Field(alias="billToContact")] = None
    bill_to_site: Annotated[SiteReference | None, Field(alias="billToSite")] = None
    bill_unapproved_time_and_expense: Annotated[bool | None, Field(alias="billUnapprovedTimeAndExpense")] = None
    billing_amount: Annotated[float | None, Field(alias="billingAmount")] = None
    billing_attention: Annotated[str | None, Field(alias="billingAttention")] = None
    """
     Max length: 50;
    """
    billing_method: Annotated[
        Literal["ActualRates", "FixedFee", "NotToExceed", "OverrideRate"], Field(alias="billingMethod")
    ]
    billing_rate_type: Annotated[Literal["StaffMember", "WorkRole"] | None, Field(alias="billingRateType")] = None
    """
     Required On Updates;
    """
    billing_start_date: Annotated[datetime | None, Field(alias="billingStartDate")] = None
    billing_terms: Annotated[BillingTermsReference | None, Field(alias="billingTerms")] = None
    board: ProjectBoardReference | None = None
    budget_analysis: Annotated[Literal["ActualHours", "BillableHours"] | None, Field(alias="budgetAnalysis")] = None
    """
     Required On Updates;
    """
    budget_flag: Annotated[bool | None, Field(alias="budgetFlag")] = None
    budget_hours: Annotated[float | None, Field(alias="budgetHours")] = None
    closed_flag: Annotated[bool | None, Field(alias="closedFlag")] = None
    company: CompanyReference | None = None
    company_location: Annotated[SystemLocationReference | None, Field(alias="companyLocation")] = None
    contact: ContactReference | None = None
    currency: CurrencyReference | None = None
    custom_fields: Annotated[list[CustomFieldValue] | None, Field(alias="customFields")] = None
    customer_po: Annotated[str | None, Field(alias="customerPO")] = None
    """
     Max length: 50;
    """
    department: SystemDepartmentReference | None = None
    description: str | None = None
    do_not_display_in_portal_flag: Annotated[bool | None, Field(alias="doNotDisplayInPortalFlag")] = None
    downpayment: float | None = None
    estimated_end: Annotated[datetime, Field(alias="estimatedEnd")]
    estimated_expense_cost: Annotated[float | None, Field(alias="estimatedExpenseCost")] = None
    estimated_expense_revenue: Annotated[float | None, Field(alias="estimatedExpenseRevenue")] = None
    estimated_hours: Annotated[float | None, Field(alias="estimatedHours")] = None
    estimated_product_cost: Annotated[float | None, Field(alias="estimatedProductCost")] = None
    estimated_product_revenue: Annotated[float | None, Field(alias="estimatedProductRevenue")] = None
    estimated_start: Annotated[datetime, Field(alias="estimatedStart")]
    estimated_time_cost: Annotated[float | None, Field(alias="estimatedTimeCost")] = None
    estimated_time_revenue: Annotated[float | None, Field(alias="estimatedTimeRevenue")] = None
    expense_approver: Annotated[MemberReference | None, Field(alias="expenseApprover")] = None
    id: int | None = None
    include_dependencies_flag: Annotated[bool | None, Field(alias="includeDependenciesFlag")] = None
    include_estimates_flag: Annotated[bool | None, Field(alias="includeEstimatesFlag")] = None
    location: SystemLocationReference | None = None
    manager: MemberReference | None = None
    name: str
    """
     Max length: 100;
    """
    opportunity: OpportunityReference | None = None
    percent_complete: Annotated[float | None, Field(alias="percentComplete")] = None
    project_template_id: Annotated[int | None, Field(alias="projectTemplateId")] = None
    restrict_down_payment_flag: Annotated[bool | None, Field(alias="restrictDownPaymentFlag")] = None
    scheduled_end: Annotated[datetime | None, Field(alias="scheduledEnd")] = None
    scheduled_hours: Annotated[float | None, Field(alias="scheduledHours")] = None
    scheduled_start: Annotated[datetime | None, Field(alias="scheduledStart")] = None
    ship_to_company: Annotated[CompanyReference | None, Field(alias="shipToCompany")] = None
    ship_to_contact: Annotated[ContactReference | None, Field(alias="shipToContact")] = None
    ship_to_site: Annotated[SiteReference | None, Field(alias="shipToSite")] = None
    site: SiteReference | None = None
    status: ProjectStatusReference | None = None
    tax_code: Annotated[TaxCodeReference | None, Field(alias="taxCode")] = None
    time_approver: Annotated[MemberReference | None, Field(alias="timeApprover")] = None
    type: ProjectTypeReference | None = None


class ProjectBoardTeam(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    default_flag: Annotated[bool | None, Field(alias="defaultFlag")] = None
    department: SystemDepartmentReference | None = None
    id: int | None = None
    location: SystemLocationReference | None = None
    name: str
    """
     Max length: 50;
    """


class ProjectBoardTeamMember(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    member: MemberReference | None = None
    project_role: Annotated[ProjectRoleReference | None, Field(alias="projectRole")] = None
    work_role: Annotated[WorkRoleReference | None, Field(alias="workRole")] = None


class ProjectPhase(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    actual_end: Annotated[datetime | None, Field(alias="actualEnd")] = None
    actual_hours: Annotated[float | None, Field(alias="actualHours")] = None
    actual_start: Annotated[datetime | None, Field(alias="actualStart")] = None
    agreement: AgreementReference | None = None
    bill_expenses: Annotated[
        Literal["Billable", "DoNotBill", "NoCharge", "NoDefault"] | None, Field(alias="billExpenses")
    ] = None
    """
     Required On Updates;
    """
    bill_phase_closed_flag: Annotated[bool | None, Field(alias="billPhaseClosedFlag")] = None
    """
    This phase can only be billed after it has been closed
    """
    bill_products: Annotated[
        Literal["Billable", "DoNotBill", "NoCharge", "NoDefault"] | None, Field(alias="billProducts")
    ] = None
    """
     Required On Updates;
    """
    bill_project_closed_flag: Annotated[bool | None, Field(alias="billProjectClosedFlag")] = None
    """
    This phase can only be billed after the project has been closed
    """
    bill_separately_flag: Annotated[bool | None, Field(alias="billSeparatelyFlag")] = None
    bill_time: Annotated[
        Literal["Billable", "DoNotBill", "NoCharge", "NoDefault"] | None, Field(alias="billTime")
    ] = None
    """
     Required On Updates;
    """
    bill_to_company: Annotated[CompanyReference | None, Field(alias="billToCompany")] = None
    bill_to_contact: Annotated[ContactReference | None, Field(alias="billToContact")] = None
    bill_to_site: Annotated[SiteReference | None, Field(alias="billToSite")] = None
    billing_method: Annotated[
        Literal["ActualRates", "FixedFee", "NotToExceed", "OverrideRate"] | None, Field(alias="billingMethod")
    ] = None
    """
    billingMethod is required if the phase billSeparatelyFlag is true
    """
    billing_start_date: Annotated[datetime | None, Field(alias="billingStartDate")] = None
    board: ProjectBoardReference | None = None
    budget_hours: Annotated[float | None, Field(alias="budgetHours")] = None
    business_unit_id: Annotated[int | None, Field(alias="businessUnitId")] = None
    currency: CurrencyReference | None = None
    custom_fields: Annotated[list[CustomFieldValue] | None, Field(alias="customFields")] = None
    deadline_date: Annotated[datetime | None, Field(alias="deadlineDate")] = None
    description: str
    """
     Max length: 100;
    """
    downpayment: float | None = None
    estimated_expense_cost: Annotated[float | None, Field(alias="estimatedExpenseCost")] = None
    estimated_expense_revenue: Annotated[float | None, Field(alias="estimatedExpenseRevenue")] = None
    estimated_product_cost: Annotated[float | None, Field(alias="estimatedProductCost")] = None
    estimated_product_revenue: Annotated[float | None, Field(alias="estimatedProductRevenue")] = None
    estimated_time_cost: Annotated[float | None, Field(alias="estimatedTimeCost")] = None
    estimated_time_revenue: Annotated[float | None, Field(alias="estimatedTimeRevenue")] = None
    hourly_rate: Annotated[float | None, Field(alias="hourlyRate")] = None
    id: int | None = None
    location_id: Annotated[int | None, Field(alias="locationId")] = None
    mark_as_milestone_flag: Annotated[bool | None, Field(alias="markAsMilestoneFlag")] = None
    notes: str | None = None
    opportunity: OpportunityReference | None = None
    parent_phase: Annotated[ProjectPhaseReference | None, Field(alias="parentPhase")] = None
    po_amount: Annotated[float | None, Field(alias="poAmount")] = None
    po_number: Annotated[str | None, Field(alias="poNumber")] = None
    """
     Max length: 25;
    """
    project_id: Annotated[int | None, Field(alias="projectId")] = None
    scheduled_end: Annotated[datetime | None, Field(alias="scheduledEnd")] = None
    scheduled_hours: Annotated[float | None, Field(alias="scheduledHours")] = None
    scheduled_start: Annotated[datetime | None, Field(alias="scheduledStart")] = None
    ship_to_company: Annotated[CompanyReference | None, Field(alias="shipToCompany")] = None
    ship_to_contact: Annotated[ContactReference | None, Field(alias="shipToContact")] = None
    ship_to_site: Annotated[SiteReference | None, Field(alias="shipToSite")] = None
    status: PhaseStatusReference | None = None
    wbs_code: Annotated[str | None, Field(alias="wbsCode")] = None
    """
     Max length: 50;
    """


class ProjectStatus(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    closed_flag: Annotated[bool | None, Field(alias="closedFlag")] = None
    custom_status_indicator_name: Annotated[str | None, Field(alias="customStatusIndicatorName")] = None
    """
    Required when statusIndicator is Custom Max length: 30;
    """
    default_flag: Annotated[bool | None, Field(alias="defaultFlag")] = None
    id: int | None = None
    inactive_flag: Annotated[bool | None, Field(alias="inactiveFlag")] = None
    name: str
    """
     Max length: 30;
    """
    no_time_flag: Annotated[bool | None, Field(alias="noTimeFlag")] = None
    status_indicator: Annotated[StatusIndicatorReference | None, Field(alias="statusIndicator")] = None


class ProjectTeamMember(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    end_date: Annotated[datetime | None, Field(alias="endDate")] = None
    hours: float | None = None
    id: int | None = None
    member: MemberReference | None = None
    project_id: Annotated[int | None, Field(alias="projectId")] = None
    project_role: Annotated[ProjectRoleReference | None, Field(alias="projectRole")] = None
    start_date: Annotated[datetime | None, Field(alias="startDate")] = None
    work_role: Annotated[WorkRoleReference | None, Field(alias="workRole")] = None


class ProjectTicket(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    actual_hours: Annotated[float | None, Field(alias="actualHours")] = None
    address_line1: Annotated[str | None, Field(alias="addressLine1")] = None
    """
     Max length: 50;
    """
    address_line2: Annotated[str | None, Field(alias="addressLine2")] = None
    """
     Max length: 50;
    """
    agreement: AgreementReference | None = None
    allow_all_clients_portal_view: Annotated[bool | None, Field(alias="allowAllClientsPortalView")] = None
    approved: bool | None = None
    automatic_email_cc: Annotated[str | None, Field(alias="automaticEmailCc")] = None
    """
     Max length: 1000;
    """
    automatic_email_cc_flag: Annotated[bool | None, Field(alias="automaticEmailCcFlag")] = None
    automatic_email_contact_flag: Annotated[bool | None, Field(alias="automaticEmailContactFlag")] = None
    automatic_email_resource_flag: Annotated[bool | None, Field(alias="automaticEmailResourceFlag")] = None
    bill_expenses: Annotated[
        Literal["Billable", "DoNotBill", "NoCharge", "NoDefault"] | None, Field(alias="billExpenses")
    ] = None
    bill_products: Annotated[
        Literal["Billable", "DoNotBill", "NoCharge", "NoDefault"] | None, Field(alias="billProducts")
    ] = None
    bill_time: Annotated[
        Literal["Billable", "DoNotBill", "NoCharge", "NoDefault"] | None, Field(alias="billTime")
    ] = None
    board: BoardReference | None = None
    budget_hours: Annotated[float | None, Field(alias="budgetHours")] = None
    city: str | None = None
    """
     Max length: 50;
    """
    closed_by: Annotated[str | None, Field(alias="closedBy")] = None
    closed_date: Annotated[datetime | None, Field(alias="closedDate")] = None
    closed_flag: Annotated[bool | None, Field(alias="closedFlag")] = None
    company: CompanyReference | None = None
    contact: ContactReference | None = None
    contact_email_address: Annotated[str | None, Field(alias="contactEmailAddress")] = None
    """
     Max length: 250;
    """
    contact_email_lookup: Annotated[str | None, Field(alias="contactEmailLookup")] = None
    contact_name: Annotated[str | None, Field(alias="contactName")] = None
    """
     Max length: 62;
    """
    contact_phone_extension: Annotated[str | None, Field(alias="contactPhoneExtension")] = None
    """
     Max length: 15;
    """
    contact_phone_number: Annotated[str | None, Field(alias="contactPhoneNumber")] = None
    """
     Max length: 20;
    """
    country: CountryReference | None = None
    currency: CurrencyReference | None = None
    custom_fields: Annotated[list[CustomFieldValue] | None, Field(alias="customFields")] = None
    customer_updated_flag: Annotated[bool | None, Field(alias="customerUpdatedFlag")] = None
    department: SystemDepartmentReference | None = None
    duration: int | None = None
    estimated_start_date: Annotated[datetime | None, Field(alias="estimatedStartDate")] = None
    id: int | None = None
    initial_description: Annotated[str | None, Field(alias="initialDescription")] = None
    """
    Only available for POST, will not be returned in the response
    """
    initial_internal_analysis: Annotated[str | None, Field(alias="initialInternalAnalysis")] = None
    """
    Only available for POST, will not be returned in the response
    """
    initial_resolution: Annotated[str | None, Field(alias="initialResolution")] = None
    """
    Only available for POST, will not be returned in the response
    """
    is_issue_flag: Annotated[bool | None, Field(alias="isIssueFlag")] = None
    item: ServiceItemReference | None = None
    knowledge_base_category_id: Annotated[int | None, Field(alias="knowledgeBaseCategoryId")] = None
    knowledge_base_link_id: Annotated[int | None, Field(alias="knowledgeBaseLinkId")] = None
    knowledge_base_link_type: Annotated[
        Literal["Activity", "ProjectIssue", "KnowledgeBaseArticle", "ProjectTicket", "ServiceTicket", "Time"] | None,
        Field(alias="knowledgeBaseLinkType"),
    ] = None
    knowledge_base_sub_category_id: Annotated[int | None, Field(alias="knowledgeBaseSubCategoryId")] = None
    lag_days: Annotated[int | None, Field(alias="lagDays")] = None
    lag_nonworking_days_flag: Annotated[bool | None, Field(alias="lagNonworkingDaysFlag")] = None
    location: SystemLocationReference | None = None
    mobile_guid: Annotated[UUID | None, Field(alias="mobileGuid")] = None
    opportunity: OpportunityReference | None = None
    owner: MemberReference | None = None
    phase: ProjectPhaseReference | None = None
    predecessor_closed_flag: Annotated[bool | None, Field(alias="predecessorClosedFlag")] = None
    predecessor_id: Annotated[int | None, Field(alias="predecessorId")] = None
    predecessor_type: Annotated[Literal["Ticket", "Phase"] | None, Field(alias="predecessorType")] = None
    priority: PriorityReference | None = None
    process_notifications: Annotated[bool | None, Field(alias="processNotifications")] = None
    """
    Can be set to false to skip notification processing when adding or updating a ticket (Defaults to True)
    """
    project: ProjectReference | None = None
    required_date: Annotated[datetime | None, Field(alias="requiredDate")] = None
    resources: str | None = None
    service_location: Annotated[ServiceLocationReference | None, Field(alias="serviceLocation")] = None
    site: SiteReference | None = None
    site_name: Annotated[str | None, Field(alias="siteName")] = None
    """
     Max length: 50;
    """
    skip_callback: Annotated[bool | None, Field(alias="skipCallback")] = None
    source: ServiceSourceReference | None = None
    state_identifier: Annotated[str | None, Field(alias="stateIdentifier")] = None
    """
     Max length: 50;
    """
    status: ServiceStatusReference | None = None
    sub_billing_amount: Annotated[float | None, Field(alias="subBillingAmount")] = None
    sub_billing_method: Annotated[
        Literal["ActualRates", "FixedFee", "NotToExceed", "OverrideRate"] | None, Field(alias="subBillingMethod")
    ] = None
    sub_date_accepted: Annotated[str | None, Field(alias="subDateAccepted")] = None
    sub_type: Annotated[ServiceSubTypeReference | None, Field(alias="subType")] = None
    summary: str
    """
     Max length: 100;
    """
    type: ServiceTypeReference | None = None
    wbs_code: Annotated[str | None, Field(alias="wbsCode")] = None
    """
     Max length: 50;
    """
    work_role: Annotated[WorkRoleReference | None, Field(alias="workRole")] = None
    work_type: Annotated[WorkTypeReference | None, Field(alias="workType")] = None
    zip: str | None = None
    """
     Max length: 12;
    """


class ProjectTicketNote(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    bundled_flag: Annotated[bool | None, Field(alias="bundledFlag")] = None
    contact: ContactReference | None = None
    detail_description_flag: Annotated[bool | None, Field(alias="detailDescriptionFlag")] = None
    id: int | None = None
    internal_analysis_flag: Annotated[bool | None, Field(alias="internalAnalysisFlag")] = None
    issue_flag: Annotated[bool | None, Field(alias="issueFlag")] = None
    member: MemberReference | None = None
    merged_flag: Annotated[bool | None, Field(alias="mergedFlag")] = None
    note_type: Annotated[Literal["TicketNote", "TimeEntryNote", "MeetingNote"] | None, Field(alias="noteType")] = None
    original_author: Annotated[str | None, Field(alias="originalAuthor")] = None
    resolution_flag: Annotated[bool | None, Field(alias="resolutionFlag")] = None
    text: str | None = None
    ticket: TicketReference | None = None
    time_end: Annotated[datetime | None, Field(alias="timeEnd")] = None
    time_start: Annotated[datetime | None, Field(alias="timeStart")] = None


class PurchaseOrder(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    business_unit_id: Annotated[int | None, Field(alias="businessUnitId")] = None
    cancel_reason: Annotated[str | None, Field(alias="cancelReason")] = None
    closed_flag: Annotated[bool | None, Field(alias="closedFlag")] = None
    """
    The closed flag can only be updated via updating the purchase order status to a closed/open status.
    """
    currency: CurrencyReference | None = None
    custom_fields: Annotated[list[CustomFieldValue] | None, Field(alias="customFields")] = None
    customer_city: Annotated[str | None, Field(alias="customerCity")] = None
    customer_company: Annotated[CompanyReference | None, Field(alias="customerCompany")] = None
    customer_contact: Annotated[ContactReference | None, Field(alias="customerContact")] = None
    customer_country: Annotated[CountryReference | None, Field(alias="customerCountry")] = None
    customer_extension: Annotated[str | None, Field(alias="customerExtension")] = None
    customer_name: Annotated[str | None, Field(alias="customerName")] = None
    customer_phone: Annotated[str | None, Field(alias="customerPhone")] = None
    customer_site: Annotated[SiteReference | None, Field(alias="customerSite")] = None
    customer_site_name: Annotated[str | None, Field(alias="customerSiteName")] = None
    customer_state: Annotated[str | None, Field(alias="customerState")] = None
    customer_street_line1: Annotated[str | None, Field(alias="customerStreetLine1")] = None
    customer_street_line2: Annotated[str | None, Field(alias="customerStreetLine2")] = None
    customer_zip: Annotated[str | None, Field(alias="customerZip")] = None
    date_closed: Annotated[datetime | None, Field(alias="dateClosed")] = None
    drop_ship_customer_flag: Annotated[bool | None, Field(alias="dropShipCustomerFlag")] = None
    entered_by: Annotated[str | None, Field(alias="enteredBy")] = None
    freight_cost: Annotated[float | None, Field(alias="freightCost")] = None
    freight_packing_slip: Annotated[str | None, Field(alias="freightPackingSlip")] = None
    freight_tax_total: Annotated[float | None, Field(alias="freightTaxTotal")] = None
    id: int | None = None
    internal_notes: Annotated[str | None, Field(alias="internalNotes")] = None
    location_id: Annotated[int | None, Field(alias="locationId")] = None
    po_date: Annotated[datetime | None, Field(alias="poDate")] = None
    """
     Required On Updates;
    """
    po_number: Annotated[str | None, Field(alias="poNumber")] = None
    """
     Required On Updates; Max length: 50;
    """
    sales_tax: Annotated[float | None, Field(alias="salesTax")] = None
    shipment_date: Annotated[datetime | None, Field(alias="shipmentDate")] = None
    shipment_method: Annotated[ShipmentMethodReference | None, Field(alias="shipmentMethod")] = None
    shipping_instructions: Annotated[str | None, Field(alias="shippingInstructions")] = None
    status: PurchaseOrderStatusReference | None = None
    sub_total: Annotated[float | None, Field(alias="subTotal")] = None
    tax_code: Annotated[TaxCodeReference | None, Field(alias="taxCode")] = None
    tax_freight_flag: Annotated[bool | None, Field(alias="taxFreightFlag")] = None
    tax_po_flag: Annotated[bool | None, Field(alias="taxPoFlag")] = None
    terms: BillingTermsReference | None = None
    total: float | None = None
    tracking_number: Annotated[str | None, Field(alias="trackingNumber")] = None
    """
     Max length: 50;
    """
    update_shipment_info: Annotated[bool | None, Field(alias="updateShipmentInfo")] = None
    """
    Determines whether or not to update all of the shipment info for each associated line item when new shipment info is passed in
    """
    update_vendor_order_number: Annotated[bool | None, Field(alias="updateVendorOrderNumber")] = None
    """
    Determines whether or not to update vendor order number for each associated line item when new vendor order number is passed in
    """
    vendor_company: Annotated[CompanyReference | None, Field(alias="vendorCompany")] = None
    vendor_contact: Annotated[ContactReference | None, Field(alias="vendorContact")] = None
    vendor_invoice_date: Annotated[datetime | None, Field(alias="vendorInvoiceDate")] = None
    vendor_invoice_number: Annotated[str | None, Field(alias="vendorInvoiceNumber")] = None
    """
     Max length: 50;
    """
    vendor_order_number: Annotated[str | None, Field(alias="vendorOrderNumber")] = None
    """
     Max length: 50;
    """
    vendor_site: Annotated[SiteReference | None, Field(alias="vendorSite")] = None
    warehouse: WarehouseReference | None = None


class PurchaseOrderLineItem(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    backordered_flag: Annotated[bool | None, Field(alias="backorderedFlag")] = None
    canceled_by: Annotated[str | None, Field(alias="canceledBy")] = None
    canceled_flag: Annotated[bool | None, Field(alias="canceledFlag")] = None
    canceled_reason: Annotated[str | None, Field(alias="canceledReason")] = None
    """
     Max length: 100;
    """
    closed_flag: Annotated[bool | None, Field(alias="closedFlag")] = None
    custom_fields: Annotated[list[CustomFieldValue] | None, Field(alias="customFields")] = None
    date_canceled: Annotated[datetime | None, Field(alias="dateCanceled")] = None
    date_canceled_utc: Annotated[datetime | None, Field(alias="dateCanceledUtc")] = None
    date_received: Annotated[datetime | None, Field(alias="dateReceived")] = None
    description: str
    """
     Max length: 6000;
    """
    display_internal_notes_flag: Annotated[bool | None, Field(alias="displayInternalNotesFlag")] = None
    expected_ship_date: Annotated[datetime | None, Field(alias="expectedShipDate")] = None
    id: int | None = None
    internal_notes: Annotated[str | None, Field(alias="internalNotes")] = None
    """
     Max length: 1000;
    """
    line_number: Annotated[int, Field(alias="lineNumber")]
    packing_slip: Annotated[str | None, Field(alias="packingSlip")] = None
    """
     Max length: 50;
    """
    product: IvItemReference | None = None
    purchase_order_id: Annotated[int | None, Field(alias="purchaseOrderId")] = None
    quantity: float
    received_quantity: Annotated[int | None, Field(alias="receivedQuantity")] = None
    received_status: Annotated[
        Literal["Waiting", "FullyReceived", "PartiallyReceiveCancelRest", "PartiallyReceiveCloneRest"] | None,
        Field(alias="receivedStatus"),
    ] = None
    serial_numbers: Annotated[str | None, Field(alias="serialNumbers")] = None
    ship_date: Annotated[datetime | None, Field(alias="shipDate")] = None
    ship_set: Annotated[str | None, Field(alias="shipSet")] = None
    """
     Max length: 10;
    """
    shipment_method: Annotated[ShipmentMethodReference | None, Field(alias="shipmentMethod")] = None
    tax: float | None = None
    tracking_number: Annotated[str | None, Field(alias="trackingNumber")] = None
    """
     Max length: 50;
    """
    unit_cost: Annotated[float | None, Field(alias="unitCost")] = None
    unit_of_measure: Annotated[UnitOfMeasureReference | None, Field(alias="unitOfMeasure")] = None
    vendor_order_number: Annotated[str | None, Field(alias="vendorOrderNumber")] = None
    """
     Max length: 50;
    """
    vendor_sku: Annotated[str | None, Field(alias="vendorSku")] = None
    """
     Max length: 50;
    """
    warehouse: WarehouseReference | None = None
    warehouse_bin: Annotated[WarehouseBinReference | None, Field(alias="warehouseBin")] = None


class PurchaseOrderStatus(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    closed_flag: Annotated[bool | None, Field(alias="closedFlag")] = None
    default_closed_flag: Annotated[bool | None, Field(alias="defaultClosedFlag")] = None
    default_flag: Annotated[bool | None, Field(alias="defaultFlag")] = None
    email_template: Annotated[PurchaseOrderStatusEmailTemplateReference | None, Field(alias="emailTemplate")] = None
    id: int | None = None
    inactive_flag: Annotated[bool | None, Field(alias="inactiveFlag")] = None
    name: str
    """
     Max length: 50;
    """
    sort_order: Annotated[int | None, Field(alias="sortOrder")] = None


class PurchaseOrderStatusEmailTemplate(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    body: str | None = None
    copy_sender_flag: Annotated[bool | None, Field(alias="copySenderFlag")] = None
    email_address: Annotated[str | None, Field(alias="emailAddress")] = None
    """
     Max length: 100;
    """
    first_name: Annotated[str | None, Field(alias="firstName")] = None
    """
     Max length: 100;
    """
    id: int | None = None
    last_name: Annotated[str | None, Field(alias="lastName")] = None
    """
     Max length: 100;
    """
    status: PurchaseOrderStatusReference | None = None
    subject: str
    """
     Max length: 200;
    """
    use_sender_flag: Annotated[bool | None, Field(alias="useSenderFlag")] = None


class PurchaseOrderStatusNotification(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    email: str | None = None
    """
    Purchase Order Status Notification email must be entered if the notify type is "Email Address" Max length: 50;
    """
    id: int | None = None
    member: MemberReference | None = None
    notify_who: Annotated[NotificationRecipientReference | None, Field(alias="notifyWho")] = None
    status: PurchaseOrderStatusReference | None = None
    workflow_step: Annotated[int | None, Field(alias="workflowStep")] = None


class PurchasingDemand(ConnectWiseModel):
    products: list[ProductDemand] | None = None
    purchase_order: Annotated[PurchaseOrder | None, Field(alias="purchaseOrder")] = None
    vendor: CompanyReference | None = None
    warehouse: WarehouseReference | None = None


class QuoteLink(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    all_locations_flag: Annotated[bool | None, Field(alias="allLocationsFlag")] = None
    id: int | None = None
    link: str
    """
     Max length: 2000;
    """
    location: SystemLocationReference | None = None
    new_window_flag: Annotated[bool | None, Field(alias="newWindowFlag")] = None


class ReportCardDetail(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    kpi: KPIReference | None = None
    report_card: Annotated[ReportCardReference | None, Field(alias="reportCard")] = None
    sort_order: Annotated[int | None, Field(alias="sortOrder")] = None


class ResultInfo(ConnectWiseModel):
    data: IRestIdentifiedItem | None = None
    error: ErrorResponseMessage | None = None
    original_index: Annotated[int | None, Field(alias="originalIndex")] = None
    status_code: Annotated[int | None, Field(alias="statusCode")] = None
    success: bool | None = None


class RmaStatus(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    closed_flag: Annotated[bool | None, Field(alias="closedFlag")] = None
    default_flag: Annotated[bool | None, Field(alias="defaultFlag")] = None
    email_template: Annotated[RmaStatusEmailTemplateReference | None, Field(alias="emailTemplate")] = None
    id: int | None = None
    name: str
    """
     Max length: 50;
    """
    sort_order: Annotated[int | None, Field(alias="sortOrder")] = None


class RmaStatusEmailTemplate(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    body: str
    copy_sender_flag: Annotated[bool | None, Field(alias="copySenderFlag")] = None
    email_address: Annotated[str | None, Field(alias="emailAddress")] = None
    """
     Max length: 100;
    """
    first_name: Annotated[str | None, Field(alias="firstName")] = None
    """
     Max length: 100;
    """
    id: int | None = None
    last_name: Annotated[str | None, Field(alias="lastName")] = None
    """
     Max length: 100;
    """
    status: RmaStatusReference | None = None
    subject: str
    """
     Max length: 200;
    """
    use_sender_flag: Annotated[bool | None, Field(alias="useSenderFlag")] = None


class RmaStatusNotification(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    email: str | None = None
    """
    RMA Status Notification sendEmail must be entered if the notify type is "Email Address" Max length: 50;
    """
    id: int | None = None
    member: MemberReference | None = None
    notify_who: Annotated[NotificationRecipientReference | None, Field(alias="notifyWho")] = None
    status: RmaStatusReference | None = None
    workflow_step: Annotated[int | None, Field(alias="workflowStep")] = None


class RmaTag(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    account_manager: Annotated[MemberReference | None, Field(alias="accountManager")] = None
    closed_by: Annotated[MemberReference | None, Field(alias="closedBy")] = None
    closing_notes: Annotated[str | None, Field(alias="closingNotes")] = None
    """
     Max length: 1000;
    """
    currency: CurrencyReference | None = None
    custom_fields: Annotated[list[CustomFieldValue] | None, Field(alias="customFields")] = None
    date_closed: Annotated[datetime | None, Field(alias="dateClosed")] = None
    department: SystemDepartmentReference | None = None
    drop_ship_flag: Annotated[bool | None, Field(alias="dropShipFlag")] = None
    id: int | None = None
    internal_notes: Annotated[str | None, Field(alias="internalNotes")] = None
    """
     Max length: 1000;
    """
    invoice: InvoiceReference | None = None
    iv_description: Annotated[str | None, Field(alias="ivDescription")] = None
    list_price: Annotated[float | None, Field(alias="listPrice")] = None
    location: SystemLocationReference | None = None
    mfg_item_id: Annotated[str | None, Field(alias="mfgItemID")] = None
    """
     Max length: 100;
    """
    problem_description: Annotated[str | None, Field(alias="problemDescription")] = None
    """
     Max length: 1000;
    """
    product: IvItemReference | None = None
    product_description: Annotated[str, Field(alias="productDescription")]
    """
     Max length: 200;
    """
    project: ProjectReference | None = None
    purchased_company: Annotated[CompanyReference | None, Field(alias="purchasedCompany")] = None
    purchased_contact: Annotated[ContactReference | None, Field(alias="purchasedContact")] = None
    purchased_contact_address_line1: Annotated[str | None, Field(alias="purchasedContactAddressLine1")] = None
    """
     Max length: 50;
    """
    purchased_contact_address_line2: Annotated[str | None, Field(alias="purchasedContactAddressLine2")] = None
    """
     Max length: 50;
    """
    purchased_contact_city: Annotated[str | None, Field(alias="purchasedContactCity")] = None
    """
     Max length: 50;
    """
    purchased_contact_country: Annotated[CountryReference | None, Field(alias="purchasedContactCountry")] = None
    purchased_contact_email: Annotated[str | None, Field(alias="purchasedContactEmail")] = None
    purchased_contact_extension: Annotated[str | None, Field(alias="purchasedContactExtension")] = None
    purchased_contact_phone: Annotated[str | None, Field(alias="purchasedContactPhone")] = None
    purchased_contact_state: Annotated[str | None, Field(alias="purchasedContactState")] = None
    """
     Max length: 50;
    """
    purchased_contact_type: Annotated[str | None, Field(alias="purchasedContactType")] = None
    purchased_contact_zip: Annotated[str | None, Field(alias="purchasedContactZip")] = None
    """
     Max length: 12;
    """
    purchased_invoice_date: Annotated[date | None, Field(alias="purchasedInvoiceDate")] = None
    purchased_invoice_number: Annotated[str | None, Field(alias="purchasedInvoiceNumber")] = None
    """
     Max length: 50;
    """
    purchased_notes: Annotated[str | None, Field(alias="purchasedNotes")] = None
    """
     Max length: 1000;
    """
    purchased_order_number: Annotated[str | None, Field(alias="purchasedOrderNumber")] = None
    """
     Max length: 50;
    """
    purchased_site: Annotated[SiteReference | None, Field(alias="purchasedSite")] = None
    purchased_vendor_action: Annotated[RmaActionReference | None, Field(alias="purchasedVendorAction")] = None
    purchased_vendor_rma_number: Annotated[str | None, Field(alias="purchasedVendorRmaNumber")] = None
    """
     Max length: 50;
    """
    repair_company: Annotated[CompanyReference | None, Field(alias="repairCompany")] = None
    repair_contact: Annotated[ContactReference | None, Field(alias="repairContact")] = None
    repair_contact_address_line1: Annotated[str | None, Field(alias="repairContactAddressLine1")] = None
    """
     Max length: 50;
    """
    repair_contact_address_line2: Annotated[str | None, Field(alias="repairContactAddressLine2")] = None
    """
     Max length: 50;
    """
    repair_contact_city: Annotated[str | None, Field(alias="repairContactCity")] = None
    """
     Max length: 50;
    """
    repair_contact_country: Annotated[CountryReference | None, Field(alias="repairContactCountry")] = None
    repair_contact_email: Annotated[str | None, Field(alias="repairContactEmail")] = None
    repair_contact_extension: Annotated[str | None, Field(alias="repairContactExtension")] = None
    repair_contact_phone: Annotated[str | None, Field(alias="repairContactPhone")] = None
    repair_contact_state: Annotated[str | None, Field(alias="repairContactState")] = None
    """
     Max length: 50;
    """
    repair_contact_type: Annotated[str | None, Field(alias="repairContactType")] = None
    repair_contact_zip: Annotated[str | None, Field(alias="repairContactZip")] = None
    """
     Max length: 12;
    """
    repair_notes: Annotated[str | None, Field(alias="repairNotes")] = None
    """
     Max length: 1000;
    """
    repair_order_number: Annotated[str | None, Field(alias="repairOrderNumber")] = None
    """
     Max length: 50;
    """
    repair_site: Annotated[SiteReference | None, Field(alias="repairSite")] = None
    returned_company: Annotated[CompanyReference | None, Field(alias="returnedCompany")] = None
    returned_contact: Annotated[ContactReference | None, Field(alias="returnedContact")] = None
    returned_contact_address_line1: Annotated[str | None, Field(alias="returnedContactAddressLine1")] = None
    """
     Max length: 50;
    """
    returned_contact_address_line2: Annotated[str | None, Field(alias="returnedContactAddressLine2")] = None
    """
     Max length: 50;
    """
    returned_contact_city: Annotated[str | None, Field(alias="returnedContactCity")] = None
    """
     Max length: 50;
    """
    returned_contact_country: Annotated[CountryReference | None, Field(alias="returnedContactCountry")] = None
    returned_contact_email: Annotated[str | None, Field(alias="returnedContactEmail")] = None
    returned_contact_extension: Annotated[str | None, Field(alias="returnedContactExtension")] = None
    returned_contact_phone: Annotated[str | None, Field(alias="returnedContactPhone")] = None
    returned_contact_state: Annotated[str | None, Field(alias="returnedContactState")] = None
    """
     Max length: 50;
    """
    returned_contact_type: Annotated[str | None, Field(alias="returnedContactType")] = None
    returned_contact_zip: Annotated[str | None, Field(alias="returnedContactZip")] = None
    """
     Max length: 12;
    """
    returned_site: Annotated[SiteReference | None, Field(alias="returnedSite")] = None
    rma_disposition: Annotated[RmaDispositionReference | None, Field(alias="rmaDisposition")] = None
    sales_order: Annotated[SalesOrderReference | None, Field(alias="salesOrder")] = None
    serial_number: Annotated[str | None, Field(alias="serialNumber")] = None
    service_ticket: Annotated[TicketReference | None, Field(alias="serviceTicket")] = None
    ship_method: Annotated[ShipmentMethodReference | None, Field(alias="shipMethod")] = None
    shipping_date: Annotated[date | None, Field(alias="shippingDate")] = None
    shipping_tracking_number: Annotated[str | None, Field(alias="shippingTrackingNumber")] = None
    """
     Max length: 50;
    """
    status: RmaStatusReference | None = None
    summary: str | None = None
    """
     Max length: 150;
    """
    technical_contact: Annotated[MemberReference | None, Field(alias="technicalContact")] = None
    unit_price: Annotated[float | None, Field(alias="unitPrice")] = None
    warranty_company: Annotated[CompanyReference | None, Field(alias="warrantyCompany")] = None
    warranty_contact: Annotated[ContactReference | None, Field(alias="warrantyContact")] = None
    warranty_contact_address_line1: Annotated[str | None, Field(alias="warrantyContactAddressLine1")] = None
    """
     Max length: 50;
    """
    warranty_contact_address_line2: Annotated[str | None, Field(alias="warrantyContactAddressLine2")] = None
    """
     Max length: 50;
    """
    warranty_contact_city: Annotated[str | None, Field(alias="warrantyContactCity")] = None
    """
     Max length: 50;
    """
    warranty_contact_country: Annotated[CountryReference | None, Field(alias="warrantyContactCountry")] = None
    warranty_contact_email: Annotated[str | None, Field(alias="warrantyContactEmail")] = None
    warranty_contact_extension: Annotated[str | None, Field(alias="warrantyContactExtension")] = None
    warranty_contact_phone: Annotated[str | None, Field(alias="warrantyContactPhone")] = None
    warranty_contact_state: Annotated[str | None, Field(alias="warrantyContactState")] = None
    """
     Max length: 50;
    """
    warranty_contact_type: Annotated[str | None, Field(alias="warrantyContactType")] = None
    warranty_contact_zip: Annotated[str | None, Field(alias="warrantyContactZip")] = None
    """
     Max length: 12;
    """
    warranty_notes: Annotated[str | None, Field(alias="warrantyNotes")] = None
    """
     Max length: 1000;
    """
    warranty_site: Annotated[SiteReference | None, Field(alias="warrantySite")] = None


class SLAPriority(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    plan_within: Annotated[float | None, Field(alias="planWithin")] = None
    plan_within_percent: Annotated[int | None, Field(alias="planWithinPercent")] = None
    priority: PriorityReference | None = None
    resolution_hours: Annotated[float | None, Field(alias="resolutionHours")] = None
    resolution_percent: Annotated[int | None, Field(alias="resolutionPercent")] = None
    respond_hours: Annotated[float | None, Field(alias="respondHours")] = None
    respond_percent: Annotated[int | None, Field(alias="respondPercent")] = None
    sla: SLAReference | None = None


class SalesQuota(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    april_margin: Annotated[float | None, Field(alias="aprilMargin")] = None
    april_revenue: Annotated[float | None, Field(alias="aprilRevenue")] = None
    august_margin: Annotated[float | None, Field(alias="augustMargin")] = None
    august_revenue: Annotated[float | None, Field(alias="augustRevenue")] = None
    category: ProductCategoryReference | None = None
    currency: CurrencyReference | None = None
    december_margin: Annotated[float | None, Field(alias="decemberMargin")] = None
    december_revenue: Annotated[float | None, Field(alias="decemberRevenue")] = None
    department: SystemDepartmentReference | None = None
    february_margin: Annotated[float | None, Field(alias="februaryMargin")] = None
    february_revenue: Annotated[float | None, Field(alias="februaryRevenue")] = None
    forecast_year: Annotated[int | None, Field(alias="forecastYear")] = None
    id: int | None = None
    january_margin: Annotated[float | None, Field(alias="januaryMargin")] = None
    january_revenue: Annotated[float | None, Field(alias="januaryRevenue")] = None
    july_margin: Annotated[float | None, Field(alias="julyMargin")] = None
    july_revenue: Annotated[float | None, Field(alias="julyRevenue")] = None
    june_margin: Annotated[float | None, Field(alias="juneMargin")] = None
    june_revenue: Annotated[float | None, Field(alias="juneRevenue")] = None
    location: SystemLocationReference | None = None
    march_margin: Annotated[float | None, Field(alias="marchMargin")] = None
    march_revenue: Annotated[float | None, Field(alias="marchRevenue")] = None
    may_margin: Annotated[float | None, Field(alias="mayMargin")] = None
    may_revenue: Annotated[float | None, Field(alias="mayRevenue")] = None
    member: MemberReference | None = None
    november_margin: Annotated[float | None, Field(alias="novemberMargin")] = None
    november_revenue: Annotated[float | None, Field(alias="novemberRevenue")] = None
    october_margin: Annotated[float | None, Field(alias="octoberMargin")] = None
    october_revenue: Annotated[float | None, Field(alias="octoberRevenue")] = None
    september_margin: Annotated[float | None, Field(alias="septemberMargin")] = None
    september_revenue: Annotated[float | None, Field(alias="septemberRevenue")] = None
    sub_category: Annotated[ProductSubCategoryReference | None, Field(alias="subCategory")] = None


class SalesTeam(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    inactive_flag: Annotated[bool | None, Field(alias="inactiveFlag")] = None
    sales_team_description: Annotated[str, Field(alias="salesTeamDescription")]
    """
     Max length: 50;
    """
    sales_team_identifier: Annotated[str, Field(alias="salesTeamIdentifier")]
    """
     Max length: 20;
    """
    sales_team_location: Annotated[SystemLocationReference | None, Field(alias="salesTeamLocation")] = None


class SalesTeamMember(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    allow_access_flag: Annotated[bool | None, Field(alias="allowAccessFlag")] = None
    department: SystemDepartmentReference | None = None
    id: int | None = None
    location: SystemLocationReference | None = None
    member: MemberReference | None = None


class ScheduleDetail(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    date_end: Annotated[datetime | None, Field(alias="dateEnd")] = None
    date_start: Annotated[datetime | None, Field(alias="dateStart")] = None
    id: int | None = None
    member: MemberReference | None = None
    schedule_entry: Annotated[ScheduleEntryReference | None, Field(alias="scheduleEntry")] = None


class ScheduleEntry(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    acknowledged_date: Annotated[datetime | None, Field(alias="acknowledgedDate")] = None
    acknowledged_flag: Annotated[bool | None, Field(alias="acknowledgedFlag")] = None
    add_member_to_project_flag: Annotated[bool | None, Field(alias="addMemberToProjectFlag")] = None
    allow_schedule_conflicts_flag: Annotated[bool | None, Field(alias="allowScheduleConflictsFlag")] = None
    close_date: Annotated[datetime | None, Field(alias="closeDate")] = None
    date_end: Annotated[datetime | None, Field(alias="dateEnd")] = None
    date_start: Annotated[datetime | None, Field(alias="dateStart")] = None
    done_flag: Annotated[bool | None, Field(alias="doneFlag")] = None
    hours: float | None = None
    id: int | None = None
    meeting_flag: Annotated[bool | None, Field(alias="meetingFlag")] = None
    member: MemberReference | None = None
    mobile_guid: Annotated[UUID | None, Field(alias="mobileGuid")] = None
    name: str | None = None
    """
     Max length: 250;
    """
    object_id: Annotated[int | None, Field(alias="objectId")] = None
    owner_flag: Annotated[bool | None, Field(alias="ownerFlag")] = None
    project_role_id: Annotated[int | None, Field(alias="projectRoleId")] = None
    reminder: ReminderReference | None = None
    span: ScheduleSpanReference | None = None
    status: ScheduleStatusReference | None = None
    type: ScheduleTypeReference | None = None
    where: ServiceLocationReference | None = None


class ScheduleEntryDetail(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    date_end: Annotated[datetime | None, Field(alias="dateEnd")] = None
    date_start: Annotated[datetime | None, Field(alias="dateStart")] = None
    hours_scheduled: Annotated[float | None, Field(alias="hoursScheduled")] = None
    id: int | None = None
    schedule_entry: Annotated[ScheduleEntryReference | None, Field(alias="scheduleEntry")] = None


class ScheduleStopwatch(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    agreement: AgreementReference | None = None
    billable_option: Annotated[
        Literal["Billable", "DoNotBill", "NoCharge", "NoDefault"] | None, Field(alias="billableOption")
    ] = None
    business_unit_id: Annotated[int | None, Field(alias="businessUnitId")] = None
    date_entered: Annotated[datetime | None, Field(alias="dateEntered")] = None
    end_time: Annotated[datetime | None, Field(alias="endTime")] = None
    id: int | None = None
    internal_notes: Annotated[str | None, Field(alias="internalNotes")] = None
    location_id: Annotated[int | None, Field(alias="locationId")] = None
    member: MemberReference | None = None
    mobile_guid: Annotated[UUID | None, Field(alias="mobileGuid")] = None
    notes: str | None = None
    """
     Max length: 4000;
    """
    schedule_id: Annotated[int, Field(alias="scheduleId")]
    schedule_mobile_guid: Annotated[UUID | None, Field(alias="scheduleMobileGuid")] = None
    start_time: Annotated[datetime | None, Field(alias="startTime")] = None
    status: Literal["Reset", "Running", "Paused", "Stopped"]
    total_pause_time: Annotated[int | None, Field(alias="totalPauseTime")] = None
    work_role: Annotated[WorkRoleReference | None, Field(alias="workRole")] = None
    work_type: Annotated[WorkTypeReference | None, Field(alias="workType")] = None


class ScheduleType(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    charge_code: Annotated[ChargeCodeReference | None, Field(alias="chargeCode")] = None
    id: int | None = None
    identifier: str
    """
     Max length: 1;
    """
    name: str
    """
     Max length: 50;
    """
    system_flag: Annotated[bool | None, Field(alias="systemFlag")] = None
    where: ServiceLocationReference | None = None


class ScheduleTypeInfo(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    charge_code: Annotated[ChargeCodeReference | None, Field(alias="chargeCode")] = None
    id: int | None = None
    identifier: str | None = None
    name: str | None = None
    system_flag: Annotated[bool | None, Field(alias="systemFlag")] = None
    where: ServiceLocationReference | None = None


class ServiceEmailTemplate(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    body: str | None = None
    copy_sender_flag: Annotated[bool | None, Field(alias="copySenderFlag")] = None
    email_address: Annotated[str | None, Field(alias="emailAddress")] = None
    """
    From fields (first name, last name, email address) are required if useSenderFlag is false. Max length: 100;
    """
    external_contact_notifications: Annotated[bool | None, Field(alias="externalContactNotifications")] = None
    first_name: Annotated[str | None, Field(alias="firstName")] = None
    """
    From fields (first name, last name, email address) are required if useSenderFlag is false. Max length: 100;
    """
    id: int | None = None
    internal_contact_notifications: Annotated[bool | None, Field(alias="internalContactNotifications")] = None
    last_name: Annotated[str | None, Field(alias="lastName")] = None
    """
    From fields (first name, last name, email address) are required if useSenderFlag is false. Max length: 100;
    """
    resource_records_flag: Annotated[bool | None, Field(alias="resourceRecordsFlag")] = None
    service_board: Annotated[BoardReference | None, Field(alias="serviceBoard")] = None
    service_status: Annotated[ServiceStatusReference | None, Field(alias="serviceStatus")] = None
    service_survey: Annotated[ServiceSurveyReference | None, Field(alias="serviceSurvey")] = None
    subject: str | None = None
    """
     Max length: 200;
    """
    tasks_flag: Annotated[bool | None, Field(alias="tasksFlag")] = None
    type: Literal["Any", "Closed", "Invoice", "New", "SalesOrder", "PurchaseOrder", "RMA", "Specific"]
    use_sender_flag: Annotated[bool | None, Field(alias="useSenderFlag")] = None


class ServiceSurveyQuestion(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    include_flag: Annotated[bool | None, Field(alias="includeFlag")] = None
    no_answer_points: Annotated[int | None, Field(alias="noAnswerPoints")] = None
    options: list[ServiceSurveyQuestionOption] | None = None
    question: str
    """
     Max length: 1000;
    """
    required_flag: Annotated[bool | None, Field(alias="requiredFlag")] = None
    sequence_number: Annotated[int | None, Field(alias="sequenceNumber")] = None
    survey_id: Annotated[int | None, Field(alias="surveyId")] = None
    type: Literal["OpenEnded", "Selection"]


class ServiceTeam(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    delete_notify_flag: Annotated[bool | None, Field(alias="deleteNotifyFlag")] = None
    department: SystemDepartmentReference | None = None
    id: int | None = None
    leader: MemberReference | None = None
    location: SystemLocationReference | None = None
    name: str | None = None


class ServiceTemplate(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    agreement: AgreementReference | None = None
    assigned_by: Annotated[MemberReference | None, Field(alias="assignedBy")] = None
    assigned_notify_flag: Annotated[bool | None, Field(alias="assignedNotifyFlag")] = None
    attach_schedule_to_new_service_flag: Annotated[bool | None, Field(alias="attachScheduleToNewServiceFlag")] = None
    bill_complete_flag: Annotated[bool | None, Field(alias="billComplete_Flag")] = None
    bill_service_separately_flag: Annotated[bool | None, Field(alias="billServiceSeparatelyFlag")] = None
    bill_unapproved_time_and_expenses_flag: Annotated[
        bool | None, Field(alias="billUnapprovedTimeAndExpensesFlag")
    ] = None
    billing_amount: Annotated[float | None, Field(alias="billingAmount")] = None
    billing_method: Annotated[
        Literal["ActualRates", "FixedFee", "NotToExceed", "OverrideRate"] | None, Field(alias="billingMethod")
    ] = None
    board: BoardReference | None = None
    company: CompanyReference | None = None
    contact: ContactReference | None = None
    department: SystemDepartmentReference | None = None
    email_cc: Annotated[str | None, Field(alias="emailCC")] = None
    email_cc_flag: Annotated[bool | None, Field(alias="emailCCFlag")] = None
    email_contact_flag: Annotated[bool | None, Field(alias="emailContactFlag")] = None
    email_resource_flag: Annotated[bool | None, Field(alias="emailResourceFlag")] = None
    expense_billable_flag: Annotated[bool | None, Field(alias="expenseBillableFlag")] = None
    expense_invoice_flag: Annotated[bool | None, Field(alias="expenseInvoiceFlag")] = None
    hours_budget: Annotated[float | None, Field(alias="hoursBudget")] = None
    id: int | None = None
    impact: Literal["Low", "Medium", "High"] | None = None
    internal_analysis: Annotated[str | None, Field(alias="internalAnalysis")] = None
    item: ServiceItemReference | None = None
    location: SystemLocationReference | None = None
    name: str | None = None
    override_flag: Annotated[bool | None, Field(alias="overrideFlag")] = None
    priority: PriorityReference | None = None
    problem: str | None = None
    product_invoice_flag: Annotated[bool | None, Field(alias="productInvoiceFlag")] = None
    purchase_order_number: Annotated[str | None, Field(alias="purchaseOrderNumber")] = None
    reference: str | None = None
    restrict_downpayment_flag: Annotated[bool | None, Field(alias="restrictDownpaymentFlag")] = None
    schedule_days_before: Annotated[int | None, Field(alias="scheduleDaysBefore")] = None
    service_days_before: Annotated[int | None, Field(alias="serviceDaysBefore")] = None
    service_location: Annotated[ServiceLocationReference | None, Field(alias="serviceLocation")] = None
    severity: Literal["Low", "Medium", "High"] | None = None
    site: SiteReference | None = None
    source: ServiceSourceReference | None = None
    status: ServiceStatusReference | None = None
    subtype: ServiceSubTypeReference | None = None
    summary: str | None = None
    team: ServiceTeamReference | None = None
    template_flag: Annotated[bool | None, Field(alias="templateFlag")] = None
    time_billable_flag: Annotated[bool | None, Field(alias="timeBillableFlag")] = None
    time_invoice_flag: Annotated[bool | None, Field(alias="timeInvoiceFlag")] = None
    type: ServiceTypeReference | None = None


class ServiceTicketNote(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    bundled_flag: Annotated[bool | None, Field(alias="bundledFlag")] = None
    contact: ContactReference | None = None
    detail_description_flag: Annotated[bool | None, Field(alias="detailDescriptionFlag")] = None
    id: int | None = None
    internal_analysis_flag: Annotated[bool | None, Field(alias="internalAnalysisFlag")] = None
    is_markdown_flag: Annotated[bool | None, Field(alias="isMarkdownFlag")] = None
    issue_flag: Annotated[bool | None, Field(alias="issueFlag")] = None
    member: MemberReference | None = None
    merged_flag: Annotated[bool | None, Field(alias="mergedFlag")] = None
    note_type: Annotated[Literal["TicketNote", "TimeEntryNote", "MeetingNote"] | None, Field(alias="noteType")] = None
    original_author: Annotated[str | None, Field(alias="originalAuthor")] = None
    resolution_flag: Annotated[bool | None, Field(alias="resolutionFlag")] = None
    text: str | None = None
    ticket: TicketReference | None = None
    time_end: Annotated[datetime | None, Field(alias="timeEnd")] = None
    time_start: Annotated[datetime | None, Field(alias="timeStart")] = None


class Skill(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    category: SkillCategoryReference | None = None
    id: int | None = None
    name: str
    """
     Max length: 50;
    """


class StandardNote(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    board: BoardReference | None = None
    contents: str
    department: SystemDepartmentReference | None = None
    id: int | None = None
    location: SystemLocationReference | None = None
    name: str
    """
     Max length: 50;
    """


class StandardNoteInfo(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    board: BoardReference | None = None
    contents: str | None = None
    department: SystemDepartmentReference | None = None
    id: int | None = None
    location: SystemLocationReference | None = None
    name: str | None = None


class SurveyQuestion(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    entry_type: Annotated[Literal["Date", "EntryField", "List", "Option"], Field(alias="entryType")]
    field_type: Annotated[
        Literal[
            "TextArea",
            "Button",
            "Currency",
            "Date",
            "Hyperlink",
            "IPAddress",
            "Checkbox",
            "Number",
            "Percent",
            "Text",
            "Password",
        ],
        Field(alias="fieldType"),
    ]
    id: int | None = None
    inactive_flag: Annotated[bool | None, Field(alias="inactiveFlag")] = None
    number_of_decimals: Annotated[int | None, Field(alias="numberOfDecimals")] = None
    question: str
    """
     Max length: 1000;
    """
    required_flag: Annotated[bool | None, Field(alias="requiredFlag")] = None
    sequence_number: Annotated[float, Field(alias="sequenceNumber")]
    survey: SurveyReference | None = None


class SurveyQuestionValue(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    default_flag: Annotated[bool | None, Field(alias="defaultFlag")] = None
    id: int | None = None
    inactive_flag: Annotated[bool | None, Field(alias="inactiveFlag")] = None
    point_value: Annotated[int | None, Field(alias="pointValue")] = None
    question: SurveyQuestionReference | None = None
    survey: SurveyReference | None = None
    value: str
    """
     Max length: 1000;
    """


class SurveyResult(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    company: CompanyReference | None = None
    contact: ContactReference | None = None
    contact_me_flag: Annotated[bool | None, Field(alias="contactMeFlag")] = None
    email_address: Annotated[str | None, Field(alias="emailAddress")] = None
    footer_response: Annotated[str | None, Field(alias="footerResponse")] = None
    id: int | None = None
    results: list[SurveyResultDetail] | None = None
    survey_id: Annotated[int | None, Field(alias="surveyId")] = None
    ticket_id: Annotated[int, Field(alias="ticketId")]
    total_points: Annotated[int | None, Field(alias="totalPoints")] = None


class Ticket(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    actual_hours: Annotated[float | None, Field(alias="actualHours")] = None
    address_line1: Annotated[str | None, Field(alias="addressLine1")] = None
    """
     Max length: 50;
    """
    address_line2: Annotated[str | None, Field(alias="addressLine2")] = None
    """
     Max length: 50;
    """
    agreement: AgreementReference | None = None
    allow_all_clients_portal_view: Annotated[bool | None, Field(alias="allowAllClientsPortalView")] = None
    approved: bool | None = None
    automatic_email_cc: Annotated[str | None, Field(alias="automaticEmailCc")] = None
    """
     Max length: 1000;
    """
    automatic_email_cc_flag: Annotated[bool | None, Field(alias="automaticEmailCcFlag")] = None
    automatic_email_contact_flag: Annotated[bool | None, Field(alias="automaticEmailContactFlag")] = None
    automatic_email_resource_flag: Annotated[bool | None, Field(alias="automaticEmailResourceFlag")] = None
    bill_expenses: Annotated[
        Literal["Billable", "DoNotBill", "NoCharge", "NoDefault"] | None, Field(alias="billExpenses")
    ] = None
    bill_products: Annotated[
        Literal["Billable", "DoNotBill", "NoCharge", "NoDefault"] | None, Field(alias="billProducts")
    ] = None
    bill_time: Annotated[
        Literal["Billable", "DoNotBill", "NoCharge", "NoDefault"] | None, Field(alias="billTime")
    ] = None
    billing_amount: Annotated[float | None, Field(alias="billingAmount")] = None
    billing_method: Annotated[
        Literal["ActualRates", "FixedFee", "NotToExceed", "OverrideRate"] | None, Field(alias="billingMethod")
    ] = None
    board: BoardReference | None = None
    budget_hours: Annotated[float | None, Field(alias="budgetHours")] = None
    city: str | None = None
    """
     Max length: 50;
    """
    closed_by: Annotated[str | None, Field(alias="closedBy")] = None
    closed_date: Annotated[datetime | None, Field(alias="closedDate")] = None
    closed_flag: Annotated[bool | None, Field(alias="closedFlag")] = None
    company: CompanyReference | None = None
    contact: ContactReference | None = None
    contact_email_address: Annotated[str | None, Field(alias="contactEmailAddress")] = None
    """
     Max length: 250;
    """
    contact_email_lookup: Annotated[str | None, Field(alias="contactEmailLookup")] = None
    contact_name: Annotated[str | None, Field(alias="contactName")] = None
    """
     Max length: 62;
    """
    contact_phone_extension: Annotated[str | None, Field(alias="contactPhoneExtension")] = None
    """
     Max length: 15;
    """
    contact_phone_number: Annotated[str | None, Field(alias="contactPhoneNumber")] = None
    """
     Max length: 20;
    """
    country: CountryReference | None = None
    currency: CurrencyReference | None = None
    custom_fields: Annotated[list[CustomFieldValue] | None, Field(alias="customFields")] = None
    customer_updated_flag: Annotated[bool | None, Field(alias="customerUpdatedFlag")] = None
    date_resolved: Annotated[str | None, Field(alias="dateResolved")] = None
    date_resplan: Annotated[str | None, Field(alias="dateResplan")] = None
    date_responded: Annotated[str | None, Field(alias="dateResponded")] = None
    department: SystemDepartmentReference | None = None
    duration: int | None = None
    escalation_level: Annotated[int | None, Field(alias="escalationLevel")] = None
    escalation_start_date_utc: Annotated[datetime | None, Field(alias="escalationStartDateUTC")] = None
    estimated_expense_cost: Annotated[float | None, Field(alias="estimatedExpenseCost")] = None
    estimated_expense_revenue: Annotated[float | None, Field(alias="estimatedExpenseRevenue")] = None
    estimated_product_cost: Annotated[float | None, Field(alias="estimatedProductCost")] = None
    estimated_product_revenue: Annotated[float | None, Field(alias="estimatedProductRevenue")] = None
    estimated_start_date: Annotated[datetime | None, Field(alias="estimatedStartDate")] = None
    estimated_time_cost: Annotated[float | None, Field(alias="estimatedTimeCost")] = None
    estimated_time_revenue: Annotated[float | None, Field(alias="estimatedTimeRevenue")] = None
    external_x_ref: Annotated[str | None, Field(alias="externalXRef")] = None
    """
     Max length: 100;
    """
    has_child_ticket: Annotated[bool | None, Field(alias="hasChildTicket")] = None
    has_merged_child_ticket_flag: Annotated[bool | None, Field(alias="hasMergedChildTicketFlag")] = None
    hourly_rate: Annotated[float | None, Field(alias="hourlyRate")] = None
    id: int | None = None
    impact: Literal["Low", "Medium", "High"] | None = None
    """
     Required On Updates;
    """
    initial_description: Annotated[str | None, Field(alias="initialDescription")] = None
    """
    Only available for POST, will not be returned in the response
    """
    initial_description_from: Annotated[str | None, Field(alias="initialDescriptionFrom")] = None
    initial_internal_analysis: Annotated[str | None, Field(alias="initialInternalAnalysis")] = None
    """
    Only available for POST, will not be returned in the response
    """
    initial_resolution: Annotated[str | None, Field(alias="initialResolution")] = None
    """
    Only available for POST, will not be returned in the response
    """
    integrator_tags: Annotated[list[str] | None, Field(alias="integratorTags")] = None
    is_in_sla: Annotated[bool | None, Field(alias="isInSla")] = None
    item: ServiceItemReference | None = None
    knowledge_base_category_id: Annotated[int | None, Field(alias="knowledgeBaseCategoryId")] = None
    knowledge_base_link_id: Annotated[int | None, Field(alias="knowledgeBaseLinkId")] = None
    knowledge_base_link_type: Annotated[
        Literal["Activity", "ProjectIssue", "KnowledgeBaseArticle", "ProjectTicket", "ServiceTicket", "Time"] | None,
        Field(alias="knowledgeBaseLinkType"),
    ] = None
    knowledge_base_sub_category_id: Annotated[int | None, Field(alias="knowledgeBaseSubCategoryId")] = None
    lag_days: Annotated[int | None, Field(alias="lagDays")] = None
    lag_nonworking_days_flag: Annotated[bool | None, Field(alias="lagNonworkingDaysFlag")] = None
    location: SystemLocationReference | None = None
    merged_parent_ticket: Annotated[TicketReference | None, Field(alias="mergedParentTicket")] = None
    minutes_before_waiting: Annotated[int | None, Field(alias="minutesBeforeWaiting")] = None
    mobile_guid: Annotated[UUID | None, Field(alias="mobileGuid")] = None
    opportunity: OpportunityReference | None = None
    owner: MemberReference | None = None
    parent_ticket_id: Annotated[int | None, Field(alias="parentTicketId")] = None
    po_number: Annotated[str | None, Field(alias="poNumber")] = None
    """
     Max length: 50;
    """
    predecessor_closed_flag: Annotated[bool | None, Field(alias="predecessorClosedFlag")] = None
    predecessor_id: Annotated[int | None, Field(alias="predecessorId")] = None
    predecessor_type: Annotated[Literal["Ticket", "Phase"] | None, Field(alias="predecessorType")] = None
    priority: PriorityReference | None = None
    process_notifications: Annotated[bool | None, Field(alias="processNotifications")] = None
    """
    Can be set to false to skip notification processing when adding or updating a ticket (Defaults to True)
    """
    record_type: Annotated[
        Literal["ProjectIssue", "ProjectTicket", "ServiceTicket"] | None, Field(alias="recordType")
    ] = None
    request_for_change_flag: Annotated[bool | None, Field(alias="requestForChangeFlag")] = None
    required_date: Annotated[datetime | None, Field(alias="requiredDate")] = None
    res_plan_minutes: Annotated[int | None, Field(alias="resPlanMinutes")] = None
    resolve_minutes: Annotated[int | None, Field(alias="resolveMinutes")] = None
    resources: str | None = None
    resplan_skipped_minutes: Annotated[int | None, Field(alias="resplanSkippedMinutes")] = None
    respond_minutes: Annotated[int | None, Field(alias="respondMinutes")] = None
    responded_skipped_minutes: Annotated[int | None, Field(alias="respondedSkippedMinutes")] = None
    service_location: Annotated[ServiceLocationReference | None, Field(alias="serviceLocation")] = None
    severity: Literal["Low", "Medium", "High"] | None = None
    """
     Required On Updates;
    """
    site: SiteReference | None = None
    site_name: Annotated[str | None, Field(alias="siteName")] = None
    """
     Max length: 50;
    """
    skip_callback: Annotated[bool | None, Field(alias="skipCallback")] = None
    sla: SLAReference | None = None
    sla_status: Annotated[str | None, Field(alias="slaStatus")] = None
    source: ServiceSourceReference | None = None
    state_identifier: Annotated[str | None, Field(alias="stateIdentifier")] = None
    """
     Max length: 50;
    """
    status: ServiceStatusReference | None = None
    sub_billing_amount: Annotated[float | None, Field(alias="subBillingAmount")] = None
    sub_billing_method: Annotated[
        Literal["ActualRates", "FixedFee", "NotToExceed", "OverrideRate"] | None, Field(alias="subBillingMethod")
    ] = None
    sub_date_accepted: Annotated[str | None, Field(alias="subDateAccepted")] = None
    sub_type: Annotated[ServiceSubTypeReference | None, Field(alias="subType")] = None
    summary: str
    """
     Max length: 100;
    """
    team: ServiceTeamReference | None = None
    type: ServiceTypeReference | None = None
    work_role: Annotated[WorkRoleReference | None, Field(alias="workRole")] = None
    work_type: Annotated[WorkTypeReference | None, Field(alias="workType")] = None
    zip: str | None = None
    """
     Max length: 12;
    """


class TicketStopwatch(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    agreement: AgreementReference | None = None
    billable_option: Annotated[
        Literal["Billable", "DoNotBill", "NoCharge", "NoDefault"] | None, Field(alias="billableOption")
    ] = None
    business_unit_id: Annotated[int | None, Field(alias="businessUnitId")] = None
    date_entered: Annotated[datetime | None, Field(alias="dateEntered")] = None
    email_notes_to_contact_flag: Annotated[bool | None, Field(alias="emailNotesToContactFlag")] = None
    email_notes_to_resources_flag: Annotated[bool | None, Field(alias="emailNotesToResourcesFlag")] = None
    end_time: Annotated[datetime | None, Field(alias="endTime")] = None
    id: int | None = None
    internal_notes: Annotated[str | None, Field(alias="internalNotes")] = None
    location_id: Annotated[int | None, Field(alias="locationId")] = None
    member: MemberReference | None = None
    mobile_guid: Annotated[UUID | None, Field(alias="mobileGuid")] = None
    notes: str | None = None
    """
     Max length: 4000;
    """
    service_status: Annotated[ServiceStatusReference | None, Field(alias="serviceStatus")] = None
    show_notes_in_discussion_flag: Annotated[bool | None, Field(alias="showNotesInDiscussionFlag")] = None
    show_notes_in_internal_flag: Annotated[bool | None, Field(alias="showNotesInInternalFlag")] = None
    show_notes_in_resolution_flag: Annotated[bool | None, Field(alias="showNotesInResolutionFlag")] = None
    start_time: Annotated[datetime | None, Field(alias="startTime")] = None
    status: Literal["Reset", "Running", "Paused", "Stopped"]
    ticket: TicketReference | None = None
    ticket_mobile_guid: Annotated[UUID | None, Field(alias="ticketMobileGuid")] = None
    total_pause_time: Annotated[int | None, Field(alias="totalPauseTime")] = None
    work_role: Annotated[WorkRoleReference | None, Field(alias="workRole")] = None
    work_type: Annotated[WorkTypeReference | None, Field(alias="workType")] = None


class TimeAccrualDetail(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    accrual_type: Annotated[Literal["Holiday", "PTO", "Sick", "Vacation"], Field(alias="accrualType")]
    """
    Available types are: Holiday, PTO, Sick and Vacation.
    """
    end_year: Annotated[int, Field(alias="endYear")]
    hours: float
    id: int | None = None
    start_year: Annotated[int, Field(alias="startYear")]
    time_accrual: Annotated[TimeAccrualReference | None, Field(alias="timeAccrual")] = None


class TimeEntry(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    actual_hours: Annotated[float | None, Field(alias="actualHours")] = None
    add_to_detail_description_flag: Annotated[bool | None, Field(alias="addToDetailDescriptionFlag")] = None
    add_to_internal_analysis_flag: Annotated[bool | None, Field(alias="addToInternalAnalysisFlag")] = None
    add_to_resolution_flag: Annotated[bool | None, Field(alias="addToResolutionFlag")] = None
    agreement: AgreementReference | None = None
    agreement_amount: Annotated[float | None, Field(alias="agreementAmount")] = None
    agreement_hours: Annotated[float | None, Field(alias="agreementHours")] = None
    billable_option: Annotated[
        Literal["Billable", "DoNotBill", "NoCharge", "NoDefault"] | None, Field(alias="billableOption")
    ] = None
    """
     Required On Updates;
    """
    business_unit_id: Annotated[int | None, Field(alias="businessUnitId")] = None
    charge_to_id: Annotated[int | None, Field(alias="chargeToId")] = None
    """
    If chargeToId is not specified, we asume you enter time against the company specified
    """
    charge_to_type: Annotated[
        Literal["ServiceTicket", "ProjectTicket", "ChargeCode", "Activity"] | None, Field(alias="chargeToType")
    ] = None
    """
    If chargeToId is not specified, we asume you enter time against the company specified
    """
    company: CompanyReference | None = None
    custom_fields: Annotated[list[CustomFieldValue] | None, Field(alias="customFields")] = None
    date_entered: Annotated[datetime | None, Field(alias="dateEntered")] = None
    email_cc: Annotated[str | None, Field(alias="emailCc")] = None
    """
    To update this value use the /service/tickets endpoint automaticEmailCc field
    """
    email_cc_flag: Annotated[bool | None, Field(alias="emailCcFlag")] = None
    """
    This is an action flag. To update this value use the /service/tickets endpoint automaticEmailCcFlag field
    """
    email_contact_flag: Annotated[bool | None, Field(alias="emailContactFlag")] = None
    """
    This is an action flag. To update this value use the /service/tickets endpoint automaticEmailContactFlag field
    """
    email_resource_flag: Annotated[bool | None, Field(alias="emailResourceFlag")] = None
    """
    This is an action flag. To update this value use the /service/tickets endpoint automaticEmailResourceFlag field
    """
    entered_by: Annotated[str | None, Field(alias="enteredBy")] = None
    hourly_rate: Annotated[float | None, Field(alias="hourlyRate")] = None
    """
    This field may only be Updated, it is defaulted on Create
    """
    hours_billed: Annotated[float | None, Field(alias="hoursBilled")] = None
    hours_deduct: Annotated[float | None, Field(alias="hoursDeduct")] = None
    id: int | None = None
    internal_notes: Annotated[str | None, Field(alias="internalNotes")] = None
    invoice: InvoiceReference | None = None
    invoice_hours: Annotated[float | None, Field(alias="invoiceHours")] = None
    location_id: Annotated[int | None, Field(alias="locationId")] = None
    member: MemberReference | None = None
    mobile_guid: Annotated[UUID | None, Field(alias="mobileGuid")] = None
    notes: str | None = None
    overage_rate: Annotated[float | None, Field(alias="overageRate")] = None
    phase: ProjectPhaseReference | None = None
    project: ProjectReference | None = None
    status: Literal[
        "Open",
        "Rejected",
        "PendingApproval",
        "ErrorsCorrected",
        "PendingProjectApproval",
        "ApprovedByTierOne",
        "RejectBySecondTier",
        "ApprovedByTierTwo",
        "ReadyToBill",
        "Billed",
        "WrittenOff",
        "BilledAgreement",
    ] | None = None
    ticket: TicketReference | None = None
    time_end: Annotated[datetime | None, Field(alias="timeEnd")] = None
    time_sheet: Annotated[TimeSheetReference | None, Field(alias="timeSheet")] = None
    time_start: Annotated[datetime, Field(alias="timeStart")]
    work_role: Annotated[WorkRoleReference | None, Field(alias="workRole")] = None
    work_type: Annotated[WorkTypeReference | None, Field(alias="workType")] = None


class TimePeriod(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    deadline_date: Annotated[datetime | None, Field(alias="deadlineDate")] = None
    end_date: Annotated[datetime | None, Field(alias="endDate")] = None
    id: int | None = None
    period: int | None = None
    start_date: Annotated[datetime | None, Field(alias="startDate")] = None
    time_period_setup: Annotated[TimePeriodSetupReference | None, Field(alias="timePeriodSetup")] = None


class TrackAction(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    activity_status: Annotated[ActivityStatusReference | None, Field(alias="activityStatus")] = None
    activity_type: Annotated[ActivityTypeReference | None, Field(alias="activityType")] = None
    attached_track: Annotated[TrackReference | None, Field(alias="attachedTrack")] = None
    bcc_contact: Annotated[ContactReference | None, Field(alias="bccContact")] = None
    cc_contact: Annotated[ContactReference | None, Field(alias="ccContact")] = None
    company_status: Annotated[CompanyStatusReference | None, Field(alias="companyStatus")] = None
    days_to_execute: Annotated[int | None, Field(alias="daysToExecute")] = None
    email_from: Annotated[str | None, Field(alias="emailFrom")] = None
    """
     Max length: 250;
    """
    email_recipient: Annotated[str | None, Field(alias="emailRecipient")] = None
    """
     Max length: 250;
    """
    group: GroupReference | None = None
    id: int | None = None
    notes: str | None = None
    notify_from: Annotated[NotificationRecipientReference | None, Field(alias="notifyFrom")] = None
    notify_type: Annotated[
        Literal[
            "CreateActivity", "SendEmail", "AddToGroup", "AttachTrack", "ChangeCompanyStatus", "CreateServiceTicket"
        ],
        Field(alias="notifyType"),
    ]
    notify_who: Annotated[NotificationRecipientReference | None, Field(alias="notifyWho")] = None
    service_template: Annotated[ServiceTemplateReference | None, Field(alias="serviceTemplate")] = None
    specific_member_from: Annotated[MemberReference | None, Field(alias="specificMemberFrom")] = None
    specific_member_to: Annotated[MemberReference | None, Field(alias="specificMemberTo")] = None
    subject: str | None = None
    """
     Max length: 100;
    """
    track: TrackReference | None = None


class UserDefinedField(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    add_all_business_units: Annotated[bool | None, Field(alias="addAllBusinessUnits")] = None
    add_all_locations: Annotated[bool | None, Field(alias="addAllLocations")] = None
    business_unit_ids: Annotated[list[int] | None, Field(alias="businessUnitIds")] = None
    button_url: Annotated[str | None, Field(alias="buttonUrl")] = None
    """
    Only available with Button Field Type. Required when entryTypeIdentifier is button Max length: 1000;
    """
    caption: str
    """
    Field caption Max length: 25;
    """
    date_created: Annotated[datetime | None, Field(alias="dateCreated")] = None
    """
    Date in UTC the custom field was created
    """
    display_on_screen_flag: Annotated[bool | None, Field(alias="displayOnScreenFlag")] = None
    entry_type_identifier: Annotated[
        Literal["Date", "EntryField", "List", "Option"] | None, Field(alias="entryTypeIdentifier")
    ] = None
    field_type_identifier: Annotated[
        Literal[
            "TextArea",
            "Button",
            "Currency",
            "Date",
            "Hyperlink",
            "IPAddress",
            "Checkbox",
            "Number",
            "Percent",
            "Text",
            "Password",
        ],
        Field(alias="fieldTypeIdentifier"),
    ]
    help_text: Annotated[str | None, Field(alias="helpText")] = None
    """
    Help text to accompany the custom field Max length: 1000;
    """
    id: int | None = None
    """
    ID of the custom user defined field
    """
    list_view_flag: Annotated[bool | None, Field(alias="listViewFlag")] = None
    """
    Denotes that this custom field is included on a list view
    """
    location_ids: Annotated[list[int] | None, Field(alias="locationIds")] = None
    number_decimals: Annotated[int | None, Field(alias="numberDecimals")] = None
    """
    Only valid for Number or percent
    """
    options: list[UserDefinedFieldOption] | None = None
    pod_id: Annotated[int, Field(alias="podId")]
    """
    Id of the Pod where the custom field will be placed
    """
    read_only_flag: Annotated[bool | None, Field(alias="readOnlyFlag")] = None
    remove_all_business_units: Annotated[bool | None, Field(alias="removeAllBusinessUnits")] = None
    remove_all_locations: Annotated[bool | None, Field(alias="removeAllLocations")] = None
    required_flag: Annotated[bool | None, Field(alias="requiredFlag")] = None
    sequence_number: Annotated[int, Field(alias="sequenceNumber")]
    """
    Must be between 1 and 500.  This defines the order in which the custom fields will appear
    """


class UserDefinedFieldInfo(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    business_unit_ids: Annotated[list[int] | None, Field(alias="businessUnitIds")] = None
    """
    List of business unit ids using custom field
    """
    button_url: Annotated[str | None, Field(alias="buttonUrl")] = None
    """
    Only available with Button Field Type. Required when entryTypeIdentifier is button
    """
    caption: str | None = None
    """
    Field caption
    """
    date_created: Annotated[datetime | None, Field(alias="dateCreated")] = None
    """
    Date in UTC the custom field was created
    """
    display_on_screen_flag: Annotated[bool | None, Field(alias="displayOnScreenFlag")] = None
    entry_type_identifier: Annotated[
        Literal["Date", "EntryField", "List", "Option"] | None, Field(alias="entryTypeIdentifier")
    ] = None
    field_type_identifier: Annotated[
        Literal[
            "TextArea",
            "Button",
            "Currency",
            "Date",
            "Hyperlink",
            "IPAddress",
            "Checkbox",
            "Number",
            "Percent",
            "Text",
            "Password",
        ]
        | None,
        Field(alias="fieldTypeIdentifier"),
    ] = None
    help_text: Annotated[str | None, Field(alias="helpText")] = None
    """
    Help text to accompany the custom field
    """
    id: int | None = None
    """
    ID of the custom user defined field
    """
    list_view_flag: Annotated[bool | None, Field(alias="listViewFlag")] = None
    """
    Denotes that this custom field is included on a list view
    """
    location_ids: Annotated[list[int] | None, Field(alias="locationIds")] = None
    """
    List of locations ids using custom field
    """
    number_decimals: Annotated[int | None, Field(alias="numberDecimals")] = None
    """
    Only valid for Number or percent
    """
    options: list[UserDefinedFieldOption] | None = None
    pod_id: Annotated[int | None, Field(alias="podId")] = None
    """
    Id of the Pod where the custom field will be placed
    """
    read_only_flag: Annotated[bool | None, Field(alias="readOnlyFlag")] = None
    required_flag: Annotated[bool | None, Field(alias="requiredFlag")] = None
    sequence_number: Annotated[int | None, Field(alias="sequenceNumber")] = None
    """
    Must be between 1 and 500.  This defines the order in which the custom fields will appear
    """


class WarehouseBin(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    company: CompanyReference | None = None
    default_flag: Annotated[bool | None, Field(alias="defaultFlag")] = None
    department: SystemDepartmentReference | None = None
    height: float | None = None
    id: int | None = None
    inactive_flag: Annotated[bool | None, Field(alias="inactiveFlag")] = None
    length: float | None = None
    location: SystemLocationReference | None = None
    manager: MemberReference | None = None
    max_quantity: Annotated[float | None, Field(alias="maxQuantity")] = None
    min_quantity: Annotated[float | None, Field(alias="minQuantity")] = None
    name: str
    """
     Max length: 50;
    """
    overflow_bin: Annotated[WarehouseBinReference | None, Field(alias="overflowBin")] = None
    quantity_on_hand: Annotated[int | None, Field(alias="quantityOnHand")] = None
    transfer_bin: Annotated[WarehouseBinReference | None, Field(alias="transferBin")] = None
    warehouse: WarehouseReference | None = None
    weight: float | None = None
    width: float | None = None


class WarehouseBinInfo(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    default_flag: Annotated[bool | None, Field(alias="defaultFlag")] = None
    id: int | None = None
    inactive_flag: Annotated[bool | None, Field(alias="inactiveFlag")] = None
    name: str | None = None
    warehouse: WarehouseReference | None = None


class WorkRoleExemption(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    id: int | None = None
    taxable_levels: Annotated[list[int] | None, Field(alias="taxableLevels")] = None
    work_role: Annotated[WorkRoleReference, Field(alias="workRole")]


class WorkRoleLocation(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    hourly_rate: Annotated[float | None, Field(alias="hourlyRate")] = None
    id: int | None = None
    location: SystemLocationReference | None = None
    work_role: Annotated[WorkRoleReference | None, Field(alias="workRole")] = None


class Workflow(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    activate_flag: Annotated[bool | None, Field(alias="activateFlag")] = None
    """
    Batches can not be turned on until after the workflow is created and it has atleast one event associated with it
    """
    batch_frequency_unit: Annotated[
        Literal["Minutes", "Hours", "Days"] | None, Field(alias="batchFrequencyUnit")
    ] = None
    """
    If not specified, defaults to Minutes. Months is not supported as month length varies
    """
    batch_interval: Annotated[int | None, Field(alias="batchInterval")] = None
    batch_last_ran: Annotated[datetime | None, Field(alias="batchLastRan")] = None
    batch_schedule: Annotated[
        Literal["AnyTime", "MyCompanyOfficeHours", "SlaHours"] | None, Field(alias="batchSchedule")
    ] = None
    """
    If activateFlag is true, batchSchedule is required
    """
    board: BoardReference | None = None
    department: SystemDepartmentReference | None = None
    id: int | None = None
    location: SystemLocationReference | None = None
    name: str
    """
     Max length: 100;
    """
    table_type: Annotated[WorkflowTableTypeReference | None, Field(alias="tableType")] = None


class BulkResult(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    payload: list[ResultInfo] | None = None


class BundleResult(ConnectWiseModel):
    count: int | None = None
    entities: list[IRestIdentifiedItem] | None = None
    error: ErrorResponseMessage | None = None
    resource_type: Annotated[str | None, Field(alias="resourceType")] = None
    sequence_number: Annotated[int | None, Field(alias="sequenceNumber")] = None
    status_code: Annotated[int | None, Field(alias="statusCode")] = None
    success: bool | None = None
    version: str | None = None


class BundleResultsCollection(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    results: list[BundleResult] | None = None


class ExpenseEntry(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    agreement: AgreementReference | None = None
    agreement_amount: Annotated[float | None, Field(alias="agreementAmount")] = None
    amount: float
    bill_amount: Annotated[float | None, Field(alias="billAmount")] = None
    billable_option: Annotated[
        Literal["Billable", "DoNotBill", "NoCharge", "NoDefault"] | None, Field(alias="billableOption")
    ] = None
    business_unit_id: Annotated[int | None, Field(alias="businessUnitId")] = None
    charge_to_id: Annotated[int | None, Field(alias="chargeToId")] = None
    charge_to_type: Annotated[
        Literal["ServiceTicket", "ProjectTicket", "ChargeCode", "Activity"] | None, Field(alias="chargeToType")
    ] = None
    """
    Company or chargeToType is required
    """
    classification: ClassificationReference | None = None
    company: CompanyReference | None = None
    currency: CurrencyReference | None = None
    custom_fields: Annotated[list[CustomFieldValue] | None, Field(alias="customFields")] = None
    date: datetime
    expense_report: Annotated[ExpenseReportReference | None, Field(alias="expenseReport")] = None
    id: int | None = None
    invoice: InvoiceReference | None = None
    invoice_amount: Annotated[float | None, Field(alias="invoiceAmount")] = None
    location_id: Annotated[int | None, Field(alias="locationId")] = None
    member: MemberReference | None = None
    mobile_guid: Annotated[UUID | None, Field(alias="mobileGuid")] = None
    notes: str | None = None
    odometer_end: Annotated[float | None, Field(alias="odometerEnd")] = None
    odometer_start: Annotated[float | None, Field(alias="odometerStart")] = None
    payment_method: Annotated[PaymentMethodReference | None, Field(alias="paymentMethod")] = None
    phase: ProjectPhaseReference | None = None
    project: ProjectReference | None = None
    status: Literal[
        "Open",
        "Rejected",
        "PendingApproval",
        "ErrorsCorrected",
        "PendingProjectApproval",
        "ApprovedByTierOne",
        "RejectBySecondTier",
        "ApprovedByTierTwo",
        "ReadyToBill",
        "Billed",
        "WrittenOff",
        "BilledAgreement",
    ] | None = None
    taxes: list[ExpenseTax] | None = None
    ticket: TicketReference | None = None
    type: ExpenseTypeReference | None = None


class Forecast(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    agreement_revenue: Annotated[AgreementRevenueReference | None, Field(alias="agreementRevenue")] = None
    billing_terms: Annotated[BillingTermsReference | None, Field(alias="billingTerms")] = None
    currency: CurrencyReference | None = None
    expected_probability: Annotated[int | None, Field(alias="expectedProbability")] = None
    expense_revenue: Annotated[ExpenseRevenueReference | None, Field(alias="expenseRevenue")] = None
    forecast_items: Annotated[list[ForecastItem] | None, Field(alias="forecastItems")] = None
    forecast_revenue_totals: Annotated[ForecastRevenueReference | None, Field(alias="forecastRevenueTotals")] = None
    forecast_total_with_taxes: Annotated[float | None, Field(alias="forecastTotalWithTaxes")] = None
    id: int | None = None
    inclusive_revenue_totals: Annotated[InclusiveRevenueReference | None, Field(alias="inclusiveRevenueTotals")] = None
    lost_revenue: Annotated[LostRevenueReference | None, Field(alias="lostRevenue")] = None
    open_revenue: Annotated[OpenRevenueReference | None, Field(alias="openRevenue")] = None
    other_revenue1: Annotated[Other1RevenueReference | None, Field(alias="otherRevenue1")] = None
    other_revenue2: Annotated[Other2RevenueReference | None, Field(alias="otherRevenue2")] = None
    product_revenue: Annotated[ProductRevenueReference | None, Field(alias="productRevenue")] = None
    recurring_total: Annotated[float | None, Field(alias="recurringTotal")] = None
    sales_tax_revenue: Annotated[float | None, Field(alias="salesTaxRevenue")] = None
    service_revenue: Annotated[ServiceRevenueReference | None, Field(alias="serviceRevenue")] = None
    tax_code: Annotated[TaxCodeReference | None, Field(alias="taxCode")] = None
    time_revenue: Annotated[TimeRevenueReference | None, Field(alias="timeRevenue")] = None
    won_revenue: Annotated[WonRevenueReference | None, Field(alias="wonRevenue")] = None


class GLExportAdjustmentTransaction(ConnectWiseModel):
    account_number: Annotated[str | None, Field(alias="accountNumber")] = None
    adjustment_description: Annotated[str | None, Field(alias="adjustmentDescription")] = None
    adjustment_detail: Annotated[
        list[GLExportAdjustmentTransactionDetail] | None, Field(alias="adjustmentDetail")
    ] = None
    document_date: Annotated[datetime | None, Field(alias="documentDate")] = None
    document_type: Annotated[str | None, Field(alias="documentType")] = None
    gl_class: Annotated[str | None, Field(alias="glClass")] = None
    gl_type_id: Annotated[str | None, Field(alias="glTypeID")] = None
    id: str | None = None
    memo: str | None = None


class GLExportExpense(ConnectWiseModel):
    account_number: Annotated[str | None, Field(alias="accountNumber")] = None
    ap_account_number: Annotated[str | None, Field(alias="apAccountNumber")] = None
    ap_class: Annotated[str | None, Field(alias="apClass")] = None
    company: CompanyReference | None = None
    company_account_number: Annotated[str | None, Field(alias="companyAccountNumber")] = None
    currency: CurrencyReference | None = None
    description: str | None = None
    document_date: Annotated[datetime | None, Field(alias="documentDate")] = None
    document_type: Annotated[str | None, Field(alias="documentType")] = None
    gl_class: Annotated[str | None, Field(alias="glClass")] = None
    gl_type_id: Annotated[str | None, Field(alias="glTypeId")] = None
    id: int | None = None
    member: MemberReference | None = None
    memo: str | None = None
    offset: GLExportExpenseOffset | None = None
    period_end_date: Annotated[datetime | None, Field(alias="periodEndDate")] = None
    period_start_date: Annotated[datetime | None, Field(alias="periodStartDate")] = None
    project: ProjectReference | None = None
    total: float | None = None
    vendor_number: Annotated[str | None, Field(alias="vendorNumber")] = None


class GLExportPurchaseTransaction(ConnectWiseModel):
    ap_account_number: Annotated[str | None, Field(alias="apAccountNumber")] = None
    billing_terms: Annotated[BillingTermsReference | None, Field(alias="billingTerms")] = None
    billing_terms_xref: Annotated[str | None, Field(alias="billingTermsXref")] = None
    city_tax_xref: Annotated[str | None, Field(alias="cityTaxXref")] = None
    company: CompanyReference | None = None
    company_type: Annotated[CompanyTypeReference | None, Field(alias="companyType")] = None
    contact: ContactReference | None = None
    county_tax_xref: Annotated[str | None, Field(alias="countyTaxXref")] = None
    currency: CurrencyReference | None = None
    description: str | None = None
    document_date: Annotated[datetime | None, Field(alias="documentDate")] = None
    document_number: Annotated[str | None, Field(alias="documentNumber")] = None
    dropship_flag: Annotated[bool | None, Field(alias="dropshipFlag")] = None
    due_days: Annotated[int | None, Field(alias="dueDays")] = None
    freight_amount: Annotated[float | None, Field(alias="freightAmount")] = None
    freight_packing_slip: Annotated[str | None, Field(alias="freightPackingSlip")] = None
    id: str | None = None
    memo: str | None = None
    packing_slip: Annotated[str | None, Field(alias="packingSlip")] = None
    purchase_class: Annotated[str | None, Field(alias="purchaseClass")] = None
    purchase_date: Annotated[datetime | None, Field(alias="purchaseDate")] = None
    purchase_detail: Annotated[list[GLExportPurchaseTransactionDetail] | None, Field(alias="purchaseDetail")] = None
    purchase_detail_tax: Annotated[
        list[GLExportPurchaseTransactionDetailTax] | None, Field(alias="purchaseDetailTax")
    ] = None
    purchase_header_freight_taxable_flag: Annotated[bool | None, Field(alias="purchaseHeaderFreightTaxableFlag")] = None
    purchase_header_tax_group: Annotated[str | None, Field(alias="purchaseHeaderTaxGroup")] = None
    purchase_header_taxable_flag: Annotated[bool | None, Field(alias="purchaseHeaderTaxableFlag")] = None
    ship_to_company: Annotated[CompanyReference | None, Field(alias="shipToCompany")] = None
    ship_to_company_account_number: Annotated[str | None, Field(alias="shipToCompanyAccountNumber")] = None
    ship_to_company_type: Annotated[CompanyTypeReference | None, Field(alias="shipToCompanyType")] = None
    ship_to_contact: Annotated[ContactReference | None, Field(alias="shipToContact")] = None
    ship_to_site: Annotated[SiteReference | None, Field(alias="shipToSite")] = None
    ship_to_tax_group: Annotated[str | None, Field(alias="shipToTaxGroup")] = None
    site: SiteReference | None = None
    state_tax_xref: Annotated[str | None, Field(alias="stateTaxXref")] = None
    tax_agency_xref: Annotated[str | None, Field(alias="taxAgencyXref")] = None
    tax_code: Annotated[TaxCodeReference | None, Field(alias="taxCode")] = None
    tax_group_rate: Annotated[float | None, Field(alias="taxGroupRate")] = None
    tax_levels: Annotated[list[GLExportPurchaseTransactionTaxLevel] | None, Field(alias="taxLevels")] = None
    total: float | None = None
    use_avalara_tax_flag: Annotated[bool | None, Field(alias="useAvalaraTaxFlag")] = None
    vendor_account_number: Annotated[str | None, Field(alias="vendorAccountNumber")] = None
    vendor_invoice_date: Annotated[datetime | None, Field(alias="vendorInvoiceDate")] = None
    vendor_invoice_number: Annotated[str | None, Field(alias="vendorInvoiceNumber")] = None
    vendor_number: Annotated[str | None, Field(alias="vendorNumber")] = None


class GLExportTransaction(ConnectWiseModel):
    account_number: Annotated[str | None, Field(alias="accountNumber")] = None
    agreement_pre_payment_flag: Annotated[bool | None, Field(alias="agreementPrePaymentFlag")] = None
    attention: str | None = None
    billing_terms: Annotated[BillingTermsReference | None, Field(alias="billingTerms")] = None
    billing_terms_xref: Annotated[str | None, Field(alias="billingTermsXref")] = None
    billing_type: Annotated[str | None, Field(alias="billingType")] = None
    city_tax: Annotated[float | None, Field(alias="cityTax")] = None
    company: CompanyReference | None = None
    company_account_number: Annotated[str | None, Field(alias="companyAccountNumber")] = None
    company_type: Annotated[CompanyTypeReference | None, Field(alias="companyType")] = None
    county_tax: Annotated[float | None, Field(alias="countyTax")] = None
    county_tax_xref: Annotated[str | None, Field(alias="countyTaxXref")] = None
    currency: CurrencyReference | None = None
    description: str | None = None
    detail: list[GLExportTransactionDetail] | None = None
    document_date: Annotated[datetime | None, Field(alias="documentDate")] = None
    document_number: Annotated[str | None, Field(alias="documentNumber")] = None
    document_type: Annotated[str | None, Field(alias="documentType")] = None
    due_date: Annotated[datetime | None, Field(alias="dueDate")] = None
    due_days: Annotated[int | None, Field(alias="dueDays")] = None
    email_delivery_flag: Annotated[bool | None, Field(alias="emailDeliveryFlag")] = None
    gl_class: Annotated[str | None, Field(alias="glClass")] = None
    gl_entry_ids: Annotated[str | None, Field(alias="glEntryIds")] = None
    gl_type_id: Annotated[str | None, Field(alias="glTypeId")] = None
    id: int | None = None
    memo: str | None = None
    piggy_back_flag: Annotated[bool | None, Field(alias="piggyBackFlag")] = None
    print_delivery_flag: Annotated[bool | None, Field(alias="printDeliveryFlag")] = None
    project: ProjectReference | None = None
    purchase_order: Annotated[PurchaseOrderReference | None, Field(alias="purchaseOrder")] = None
    sales_rep_id: Annotated[str | None, Field(alias="salesRepId")] = None
    sales_rep_name: Annotated[str | None, Field(alias="salesRepName")] = None
    sales_tax: Annotated[float | None, Field(alias="salesTax")] = None
    sales_territory: Annotated[str | None, Field(alias="salesTerritory")] = None
    send_avalara_tax_flag: Annotated[bool | None, Field(alias="sendAvalaraTaxFlag")] = None
    ship_contact: Annotated[str | None, Field(alias="shipContact")] = None
    ship_site: Annotated[SiteReference | None, Field(alias="shipSite")] = None
    ship_to_company: Annotated[CompanyReference | None, Field(alias="shipToCompany")] = None
    ship_to_company_account_number: Annotated[str | None, Field(alias="shipToCompanyAccountNumber")] = None
    ship_to_company_type: Annotated[CompanyTypeReference | None, Field(alias="shipToCompanyType")] = None
    ship_to_tax_id: Annotated[str | None, Field(alias="shipToTaxId")] = None
    site: SiteReference | None = None
    state_tax: Annotated[float | None, Field(alias="stateTax")] = None
    state_tax_xref: Annotated[str | None, Field(alias="stateTaxXref")] = None
    tax_account_number: Annotated[str | None, Field(alias="taxAccountNumber")] = None
    tax_agency_xref: Annotated[str | None, Field(alias="taxAgencyXref")] = None
    tax_code: Annotated[TaxCodeReference | None, Field(alias="taxCode")] = None
    tax_dp_applied_flag: Annotated[bool | None, Field(alias="taxDpAppliedFlag")] = None
    tax_group_rate: Annotated[float | None, Field(alias="taxGroupRate")] = None
    tax_id: Annotated[str | None, Field(alias="taxId")] = None
    tax_levels: Annotated[list[GLExportTransactionTaxLevel] | None, Field(alias="taxLevels")] = None
    taxable: bool | None = None
    taxable_amount1: Annotated[float | None, Field(alias="taxableAmount1")] = None
    taxable_amount2: Annotated[float | None, Field(alias="taxableAmount2")] = None
    taxable_amount3: Annotated[float | None, Field(alias="taxableAmount3")] = None
    taxable_amount4: Annotated[float | None, Field(alias="taxableAmount4")] = None
    taxable_amount5: Annotated[float | None, Field(alias="taxableAmount5")] = None
    taxable_total: Annotated[float | None, Field(alias="taxableTotal")] = None
    total: float | None = None
    use_avalara_flag: Annotated[bool | None, Field(alias="useAvalaraFlag")] = None


class InvoiceInfo(ConnectWiseModel):
    info: Annotated[dict[str, str] | None, Field(alias="_info")] = None
    agreement_billing_info: Annotated[list[AgreementBillingInfo] | None, Field(alias="agreementBillingInfo")] = None
    billing_setup: Annotated[BillingSetup | None, Field(alias="billingSetup")] = None
    bundled_components_info: Annotated[list[ProductComponent] | None, Field(alias="bundledComponentsInfo")] = None
    expenses: list[ExpenseEntry] | None = None
    id: int | None = None
    invoice: Invoice | None = None
    invoice_template: Annotated[InvoiceTemplate | None, Field(alias="invoiceTemplate")] = None
    logo: DocumentInfo | None = None
    products: list[ProductItem] | None = None
    time_entries: Annotated[list[TimeEntry] | None, Field(alias="timeEntries")] = None


class MemberDeactivation(ConnectWiseModel):
    activity: MemberDeactivationSalesActivity | None = None
    company_team: Annotated[list[MemberDeactivationCompanyTeam] | None, Field(alias="companyTeam")] = None
    """
    A list of customers for which the member holds a team role
    """
    delete_open_time_sheets_flag: Annotated[bool | None, Field(alias="deleteOpenTimeSheetsFlag")] = None
    """
    By default, this is set to false
                If there is any open timesheets, system will return error message
                that there is open timesheets still attached to this member
                If user would like to delete member with open timesheets, they can set this boolean to TRUE
                System will delete member and any associated open timesheets
    """
    department_manager: Annotated[MemberDeactivationDepartmentMananager | None, Field(alias="departmentManager")] = None
    dispatch_member: Annotated[MemberDeactivationDispatchMember | None, Field(alias="dispatchMember")] = None
    duty_manager: Annotated[MemberDeactivationDutyManager | None, Field(alias="dutyManager")] = None
    knowledge_base_article: Annotated[
        MemberDeactivationKnowledgebaseArticle | None, Field(alias="knowledgeBaseArticle")
    ] = None
    my_company_coo: Annotated[MemberDeactivationMyCompanyCOORole | None, Field(alias="myCompanyCOO")] = None
    my_company_controller: Annotated[
        MemberDeactivationMyCompanyControllerRole | None, Field(alias="myCompanyController")
    ] = None
    my_company_dispatch: Annotated[
        MemberDeactivationMyCompanyDispatchRole | None, Field(alias="myCompanyDispatch")
    ] = None
    my_company_duty_manager_role: Annotated[
        MemberDeactivationMyCompanyDutyManagerRole | None, Field(alias="myCompanyDutyManagerRole")
    ] = None
    my_company_president: Annotated[
        MemberDeactivationMyCompanyPresidentRole | None, Field(alias="myCompanyPresident")
    ] = None
    my_company_service_manager: Annotated[
        MemberDeactivationMyCompanyServiceManagerRole | None, Field(alias="myCompanyServiceManager")
    ] = None
    opportunity: MemberDeactivationOpportunity | None = None
    project_expense_approver: Annotated[
        MemberDeactivationProjectManager | None, Field(alias="projectExpenseApprover")
    ] = None
    project_manager: Annotated[MemberDeactivationProjectManager | None, Field(alias="projectManager")] = None
    project_time_approver: Annotated[MemberDeactivationProjectManager | None, Field(alias="projectTimeApprover")] = None
    sales_team: Annotated[MemberDeactivationSalesTeam | None, Field(alias="salesTeam")] = None
    send_from_email_notify: Annotated[
        MemberDeactivationSendFromEmailNotify | None, Field(alias="sendFromEmailNotify")
    ] = None
    service_manager: Annotated[MemberDeactivationServiceManger | None, Field(alias="serviceManager")] = None
    service_status_workflow: Annotated[
        list[MemberDeactivationStatusWorkflow] | None, Field(alias="serviceStatusWorkflow")
    ] = None
    service_team: Annotated[MemberDeactivationServiceTeam | None, Field(alias="serviceTeam")] = None
    ticket_template: Annotated[MemberDeactivationServiceTemplate | None, Field(alias="ticketTemplate")] = None
    workflow_email: Annotated[MemberDeactivationWorkflow | None, Field(alias="workflowEmail")] = None


class GLExport(ConnectWiseModel):
    adjustment_transactions: Annotated[
        list[GLExportAdjustmentTransaction] | None, Field(alias="adjustmentTransactions")
    ] = None
    customers: list[GLExportCustomer] | None = None
    expense_bills: Annotated[list[GLExportExpenseBill] | None, Field(alias="expenseBills")] = None
    expenses: list[GLExportExpense] | None = None
    export_settings: Annotated[GLExportSettings | None, Field(alias="exportSettings")] = None
    inventory_transfers: Annotated[list[GLExportInventoryTransfer] | None, Field(alias="inventoryTransfers")] = None
    purchase_transactions: Annotated[
        list[GLExportPurchaseTransaction] | None, Field(alias="purchaseTransactions")
    ] = None
    transactions: list[GLExportTransaction] | None = None
    vendors: list[GLExportVendor] | None = None
